This file contains all the help for every possible command in version 2.4.10 of the CLI.

This file is generated by running test_help.py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci --help
Usage: oci [OPTIONS] COMMAND [ARGS]...

  Oracle Cloud Infrastructure command line interface, with support for Block
  Volume, Compute, Database, IAM, Networking, and Object Storage Services.

  Most commands must specify a service, followed by a resource type and then
  an action. For example, to list users (where $T contains the OCID of the
  current tenant):

    oci iam user list --compartment-id $T

  Output is in JSON format.

  For information on configuration, see https://docs.us-
  phoenix-1.oraclecloud.com/Content/API/Concepts/sdkconfig.htm.

Options:
  -v, --version          Show the version and exit.
  --config-file TEXT     The path to the config file.  [default: ~/.oci/config]
  --profile TEXT         The profile in the config file to load.  [default:
                         DEFAULT]
  --defaults-file TEXT   The path to a file containing default values for the
                         CLI.  [default: ~/.oci/cli-defaults]
  --request-id TEXT      The request id to use for tracking the request.
  --region TEXT          The region to make calls against.  For a list of valid
                         region names use the command: "oci iam region list".
  --endpoint TEXT        The value to use as the service endpoint, including any
                         required API version path. For example:
                         "https://iaas.us-phoenix-1.oracle.com/20160918". This
                         will override the default service endpoint / API
                         version path. Note: The --region parameter is the
                         recommended way of targeting different regions.
  --cert-bundle TEXT     The full path to a CA certificate bundle to be used for
                         SSL verification. This will override the default CA
                         certificate bundle.
  --output [json|table]  The output format. [Default is json]
  --query TEXT           JMESPath query [http://jmespath.org/] to run on the
                         response JSON before output.
  -d, --debug            Show additional debug information.
  -?, -h, --help         Show this message and exit.

Commands:
  bv       Block Volume Service
  compute  Compute Service
  db       Database Service
  iam      Identity and Access Management Service
  network  Networking Service
  os       Object Storage Service
  setup    Setup commands for CLI

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv --help
Usage: oci bv [OPTIONS] COMMAND [ARGS]...

  Block Volume Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  backup  A point-in-time copy of a volume that can...
  volume  A detachable block volume device that allows...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup --help
Usage: oci bv backup [OPTIONS] COMMAND [ARGS]...

  A point-in-time copy of a volume that can then be used to create a new block
  volume or recover a block volume. For more information, see [Overview of
  Cloud Volume Storage].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new backup of the specified volume.
  delete  Deletes a volume backup.
  get     Gets information for the specified volume...
  list    Lists the volume backups in the specified...
  update  Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup create --help
Usage: oci bv backup create [OPTIONS]

  Creates a new backup of the specified volume. For general information about
  volume backups, see [Overview of Block Volume Service Backups]

  When the request is received, the backup object is in a REQUEST_RECEIVED
  state. When the data is imaged, it goes into a CREATING state. After the
  backup is fully uploaded to the cloud, it goes into an AVAILABLE state.

Options:
  --volume-id TEXT                The OCID of the volume that needs to be backed
                                  up. [required]
  --display-name TEXT             A user-friendly name for the volume backup.
                                  Does not have to be unique and it's
                                  changeable. Avoid entering confidential
                                  information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup delete --help
Usage: oci bv backup delete [OPTIONS]

  Deletes a volume backup.

Options:
  --volume-backup-id TEXT         The OCID of the volume backup. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup get --help
Usage: oci bv backup get [OPTIONS]

  Gets information for the specified volume backup.

Options:
  --volume-backup-id TEXT         The OCID of the volume backup. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup list --help
Usage: oci bv backup list [OPTIONS]

  Lists the volume backups in the specified compartment. You can filter the
  results by volume.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --volume-id TEXT                The OCID of the volume.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup update --help
Usage: oci bv backup update [OPTIONS]

  Updates the display name for the specified volume backup. Avoid entering
  confidential information.

Options:
  --volume-backup-id TEXT         The OCID of the volume backup. [required]
  --display-name TEXT             A friendly user-specified name for the volume
                                  backup. Avoid entering confidential
                                  information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume --help
Usage: oci bv volume [OPTIONS] COMMAND [ARGS]...

  A detachable block volume device that allows you to dynamically expand the
  storage capacity of an instance. For more information, see [Overview of
  Cloud Volume Storage].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new volume in the specified...
  delete  Deletes the specified volume.
  get     Gets information for the specified volume.
  list    Lists the volumes in the specified...
  update  Updates the specified volume's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume create --help
Usage: oci bv volume create [OPTIONS]

  Creates a new volume in the specified compartment. Volumes can be created in
  sizes ranging from 50 GB (51200 MB) to 16 TB (16777216 MB), in 1 GB (1024
  MB) increments. By default, volumes are 1 TB (1048576 MB). For general
  information about block volumes, see [Overview of Block Volume Service].

  A volume and instance can be in separate compartments but must be in the
  same Availability Domain. For information about access control and
  compartments, see [Overview of the IAM Service]. For information about
  Availability Domains, see [Regions and Availability Domains]. To get a list
  of Availability Domains, use the `ListAvailabilityDomains` operation in the
  Identity and Access Management Service API.

  You may optionally specify a *display name* for the volume, which is simply
  a friendly name or description. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

Options:
  --availability-domain TEXT      The Availability Domain of the volume.
                                  Example: `Uocm:PHX-AD-1` [required]
  -c, --compartment-id TEXT       The OCID of the compartment that contains the
                                  volume. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --size-in-gbs INTEGER           The size of the volume in GBs.
  --size-in-mbs INTEGER           The size of the volume in MBs. The value must
                                  be a multiple of 1024. This field is
                                  deprecated. Please use sizeInGBs.
  --volume-backup-id TEXT         The OCID of the volume backup from which the
                                  data should be restored on the newly created
                                  volume.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume delete --help
Usage: oci bv volume delete [OPTIONS]

  Deletes the specified volume. The volume cannot have an active connection to
  an instance. To disconnect the volume from a connected instance, see
  [Disconnecting From a Volume]. **Warning:** All data on the volume will be
  permanently lost when the volume is deleted.

Options:
  --volume-id TEXT                The OCID of the volume. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume get --help
Usage: oci bv volume get [OPTIONS]

  Gets information for the specified volume.

Options:
  --volume-id TEXT                The OCID of the volume. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume list --help
Usage: oci bv volume list [OPTIONS]

  Lists the volumes in the specified compartment and Availability Domain.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume update --help
Usage: oci bv volume update [OPTIONS]

  Updates the specified volume's display name. Avoid entering confidential
  information.

Options:
  --volume-id TEXT                The OCID of the volume. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute --help
Usage: oci compute [OPTIONS] COMMAND [ARGS]...

  Compute Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  console-history              An instance's serial console data.
  image                        A boot disk image for launching an instance.
  instance                     A compute host.
  instance-console-connection  The `InstanceConsoleConnection` API provides...
  shape                        A compute instance shape that can be used in...
  vnic-attachment              Represents an attachment between a VNIC and...
  volume-attachment            A base object for all types of attachments...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history --help
Usage: oci compute console-history [OPTIONS] COMMAND [ARGS]...

  An instance's serial console data. It includes configuration messages that
  occur when the instance boots, such as kernel and BIOS messages, and is
  useful for checking the status of the instance or diagnosing problems. The
  console data is minimally formatted ASCII text.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  capture      Captures the most recent serial console data...
  delete       Deletes the specified console history...
  get          Shows the metadata for the specified console...
  get-content  Gets the actual console history data (not the...
  list         Lists the console history metadata for the...
  update       Updates the specified console history...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history capture --help
Usage: oci compute console-history capture [OPTIONS]

  Captures the most recent serial console data (up to a megabyte) for the
  specified instance.

  The `CaptureConsoleHistory` operation works with the other console history
  operations as described below.

  1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of
  the most recent console history. This call returns a `ConsoleHistory`
  object. The object will have a state of REQUESTED. 2. Wait for the capture
  operation to succeed by polling `GetConsoleHistory` with the identifier of
  the console history metadata. The state of the `ConsoleHistory` object will
  go from REQUESTED to GETTING-HISTORY and then SUCCEEDED (or FAILED). 3. Use
  `GetConsoleHistoryContent` to get the actual console history data (not the
  metadata). 4. Optionally, use `DeleteConsoleHistory` to delete the console
  history metadata and the console history data.

Options:
  --instance-id TEXT              The OCID of the instance to get the console
                                  history from. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history delete --help
Usage: oci compute console-history delete [OPTIONS]

  Deletes the specified console history metadata and the console history data.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history get --help
Usage: oci compute console-history get [OPTIONS]

  Shows the metadata for the specified console history. See
  [CaptureConsoleHistory] for details about using the console history
  operations.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history get-content --help
Usage: oci compute console-history get-content [OPTIONS]

  Gets the actual console history data (not the metadata). See
  [CaptureConsoleHistory] for details about using the console history
  operations.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --file FILENAME                 The name of the file that will receive the
                                  response data, or '-' to write to STDOUT.
                                  [required]
  --offset INTEGER                Offset of the snapshot data to retrieve.
  --length INTEGER                Length of the snapshot data to retrieve.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history list --help
Usage: oci compute console-history list [OPTIONS]

  Lists the console history metadata for the specified compartment or
  instance.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --instance-id TEXT              The OCID of the instance.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history update --help
Usage: oci compute console-history update [OPTIONS]

  Updates the specified console history metadata.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image --help
Usage: oci compute image [OPTIONS] COMMAND [ARGS]...

  A boot disk image for launching an instance. For more information, see
  [Overview of the Compute Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a boot disk image for the specified...
  delete  Deletes an image.
  export  Exports an image to the Oracle Cloud...
  get     Gets the specified image.
  import  Imports an exported image from the Oracle...
  list    Lists the available images in the specified...
  update  Updates the display name of the image.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image create --help
Usage: oci compute image create [OPTIONS]

  Creates a boot disk image for the specified instance or imports an exported
  image from the Oracle Bare Metal Cloud Object Storage Service.

  When creating a new image, you must provide the OCID of the instance you
  want to use as the basis for the image, and the OCID of the compartment
  containing that instance. For more information about images, see [Managing
  Custom Images].

  When importing an exported image from the Object Storage Service, you
  specify the source information in [ImageSourceDetails].

  When importing an image based on the namespace, bucket name, and object
  name, use [ImageSourceViaObjectStorageTupleDetails].

  When importing an image based on the Object Storage Service URL, use
  [ImageSourceViaObjectStorageUriDetails]. See [Object Storage URLs] and [pre-
  authenticated requests] for constructing URLs for image import/export.

  For more information about importing exported images, see [Image
  Import/Export].

  You may optionally specify a *display name* for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  instance you want to use as the basis for the
                                  image. [required]
  --display-name TEXT             A user-friendly name for the image. It does
                                  not have to be unique, and it's changeable.
                                  Avoid entering confidential information.
                                  
                                  You
                                  cannot use an Oracle-provided image name as a
                                  custom image name.
                                  
                                  Example: `My Oracle Linux
                                  image`
  --image-source-details TEXT     [DEPRECATED] The use of the `oci compute image
                                  create` command to import an image from Object
                                  Storage is deprecated.
                                  
                                  
                                  Please use the `oci
                                  compute image import` command instead.
                                  Details for creating an image through import
                                  Example: '{ "objectName": "image-to-
                                  import.qcow2", "bucketName": "MyBucket",
                                  "namespaceName": "MyNamespace", "sourceType":
                                  "objectStorageTuple" }'
                                  
                                  or
                                  
                                  '{ "sourceUri":
                                  "https://objectstorage.us-phoenix-1.oracleclou
                                  d.com/n/MyNamespace/b/MyBucket/o/image-to-
                                  import.qcow2", "sourceType":
                                  "objectStorageUri" }'
  --instance-id TEXT              The OCID of the instance you want to use as
                                  the basis for the image.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image delete --help
Usage: oci compute image delete [OPTIONS]

  Deletes an image.

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image export --help
Usage: oci compute image export [OPTIONS] COMMAND [ARGS]...

  Exports an image to the Oracle Cloud Infrastructure Object Storage Service.
  You can use the Object Storage Service URL, or the namespace, bucket name,
  and object name when specifying the location to export to.

  For more information about exporting images, see [Image Import/Export].

  To perform an image export, you need write access to the Object Storage
  Service bucket for the image, see [Let Users Write Objects to Object Storage
  Buckets].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  to-object      Exports the specified image to the Oracle...
  to-object-uri  Exports the specified image to the Oracle...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image export to-object --help
Usage: oci compute image export to-object [OPTIONS]

  Exports the specified image to the Oracle Cloud Infrastructure Object
  Storage Service using the namespace, bucket name, and object name to
  identify the location to export to.

  For more information about exporting images, see [Image Import/Export].

  To perform an image export, you need write access to the Object Storage
  Service bucket for the image, see [Let Users Write Objects to Object Storage
  Buckets].

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  -ns, --namespace TEXT           The Object Storage Service namespace to export
                                  the image to. [required]
  -bn, --bucket-name TEXT         The name of the bucket to export the image to.
                                  [required]
  --name TEXT                     The name which will be given to the exported
                                  image object. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image export to-object-uri --help
Usage: oci compute image export to-object-uri [OPTIONS]

  Exports the specified image to the Oracle Cloud Infrastructure Object
  Storage Service using the Object Storage Service URL to identify the
  location to export to.

  For more information about exporting images, see [Image Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --uri TEXT                      The Object Storage URL to export the image to.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image get --help
Usage: oci compute image get [OPTIONS]

  Gets the specified image.

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image import --help
Usage: oci compute image import [OPTIONS] COMMAND [ARGS]...

  Imports an exported image from the Oracle Cloud Infrastructure Object
  Storage Service. You can use the Object Storage Service URL, or the
  namespace, bucket name, and object name when specifying the location to
  import from.

  For more information about importing exported images, see [Image
  Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  from-object      Imports an exported image from the Oracle...
  from-object-uri  Imports an exported image from the Oracle...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image import from-object --help
Usage: oci compute image import from-object [OPTIONS]

  Imports an exported image from the Oracle Cloud Infrastructure Object
  Storage Service using the namespace, bucket name, and object name to
  identify the location to import from.

  For more information about importing exported images, see [Image
  Import/Export].

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  instance you want to use as the basis for the
                                  image. [required]
  --display-name TEXT             A user-friendly name for the image. It does
                                  not have to be unique, and it's changeable.
                                  Avoid entering confidential information.
                                  
                                  You
                                  cannot use an Oracle-provided image name as a
                                  custom image name.
                                  
                                  Example: `My Oracle Linux
                                  image`
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  -ns, --namespace TEXT           The Object Storage Service namespace to import
                                  the image from. [required]
  -bn, --bucket-name TEXT         The name of the bucket to import the image
                                  from. [required]
  --name TEXT                     The name of the object identifying the image
                                  to import. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image import from-object-uri --help
Usage: oci compute image import from-object-uri [OPTIONS]

  Imports an exported image from the Oracle Cloud Infrastructure Object
  Storage Service using the Object Storage Service URL to identify the
  location to import from.

  For more information about importing exported images, see [Image
  Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  instance you want to use as the basis for the
                                  image. [required]
  --display-name TEXT             A user-friendly name for the image. It does
                                  not have to be unique, and it's changeable.
                                  Avoid entering confidential information.
                                  
                                  You
                                  cannot use an Oracle-provided image name as a
                                  custom image name.
                                  
                                  Example: `My Oracle Linux
                                  image`
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --uri TEXT                      The Object Storage URL to import the image
                                  from. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image list --help
Usage: oci compute image list [OPTIONS]

  Lists the available images in the specified compartment. For more
  information about images, see [Managing Custom Images].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My new
                                  resource`
  --operating-system TEXT         The image's operating system.
                                  
                                  Example:
                                  `Oracle Linux`
  --operating-system-version TEXT
                                  The image's operating system version.
                                  Example: `7.2`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image update --help
Usage: oci compute image update [OPTIONS]

  Updates the display name of the image. Avoid entering confidential
  information.

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My custom
                                  Oracle Linux image`
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance --help
Usage: oci compute instance [OPTIONS] COMMAND [ARGS]...

  A compute host. The image used to launch the instance determines its
  operating system and other software. The shape specified during the launch
  process determines the number of CPUs and memory allocated to the instance.
  For more information, see [Overview of the Compute Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  action                     Performs one of the power actions (start,...
  attach-vnic                Creates a secondary VNIC and attaches it to...
  detach-vnic                Detaches and deletes the specified secondary...
  get                        Gets information about the specified...
  get-windows-initial-creds  Gets the generated credentials for the...
  launch                     Creates a new instance in the specified...
  list                       Lists the instances in the specified...
  list-vnics                 Lists the VNICs that are attached to the...
  terminate                  Terminates the specified instance.
  update                     Updates the display name of the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance action --help
Usage: oci compute instance action [OPTIONS]

  Performs one of the power actions (start, stop, softreset, or reset) on the
  specified instance.

  **start** - power on

  **stop** - power off

  **softreset** - ACPI shutdown and power on

  **reset** - power off and power on

  Note that the **stop** state has no effect on the resources you consume.
  Billing continues for instances that you stop, and related resources
  continue to apply against any relevant quotas. You must terminate an
  instance ([TerminateInstance]) to remove its resources from billing and
  quotas.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --action TEXT                   The action to perform on the instance.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance attach-vnic --help
Usage: oci compute instance attach-vnic [OPTIONS]

  Creates a secondary VNIC and attaches it to the specified instance. For more
  information about secondary VNICs, see [Managing Virtual Network Interface
  Cards (VNICs)].

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --subnet-id TEXT                The OCID of the subnet to create the VNIC in.
                                  [required]
  --vnic-display-name TEXT        A user-friendly name for the VNIC. Does not
                                  have to be unique.
  --assign-public-ip BOOLEAN      Whether the VNIC should be assigned a public
                                  IP address. Defaults to whether the subnet is
                                  public or private. If not set and the VNIC is
                                  being created in a private subnet (i.e., where
                                  prohibitPublicIpOnVnic=true in the Subnet),
                                  then no public IP address is assigned. If not
                                  set and the subnet is public
                                  (prohibitPublicIpOnVnic=false), then a public
                                  IP address is assigned. If set to true and
                                  prohibitPublicIpOnVnic=true, an error is
                                  returned.
  --skip-source-dest-check BOOLEAN
                                  Indicates whether Source/Destination check is
                                  disabled on the VNIC. Defaults to `false`, in
                                  which case we enable Source/Destination check
                                  on the VNIC.
  --private-ip TEXT               A private IP address of your choice to assign
                                  to the VNIC. Must be an available IP address
                                  within the subnet's CIDR. If no value is
                                  specified, a private IP address from the
                                  subnet will be automatically assigned.
  --hostname-label TEXT           The hostname for the VNIC. Used for DNS. The
                                  value is the hostname portion of the VNIC's
                                  fully qualified domain name (FQDN) (e.g.,
                                  `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC
                                  952](https://tools.ietf.org/html/rfc952) and
                                  [RFC
                                  1123](https://tools.ietf.org/html/rfc1123).
                                  The value can be retrieved from the
                                  [Vnic](#/en/iaas/20160918/Vnic/).
  --wait                          If set, then wait for the attachment to
                                  complete and return the newly attached VNIC.
                                  If not set, then the command will not wait and
                                  will return nothing on success.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance detach-vnic --help
Usage: oci compute instance detach-vnic [OPTIONS]

  Detaches and deletes the specified secondary VNIC. This operation cannot be
  used on the instance's primary VNIC. When you terminate an instance, all
  attached VNICs (primary and secondary) are automatically detached and
  deleted.

Options:
  --vnic-id TEXT                  The OCID of the VNIC. [required]
  -c, --compartment-id TEXT       The OCID of the instance's compartment.
                                  [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance get --help
Usage: oci compute instance get [OPTIONS]

  Gets information about the specified instance.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance get-windows-initial-creds --help
Usage: oci compute instance get-windows-initial-creds [OPTIONS]

  Gets the generated credentials for the instance. Only works for Windows
  instances. The returned credentials are only valid for the initial login.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance launch --help
Usage: oci compute instance launch [OPTIONS]

  Creates a new instance in the specified compartment and the specified
  Availability Domain. For general information about instances, see [Overview
  of the Compute Service].

  For information about access control and compartments, see [Overview of the
  IAM Service].

  For information about Availability Domains, see [Regions and Availability
  Domains]. To get a list of Availability Domains, use the
  `ListAvailabilityDomains` operation in the Identity and Access Management
  Service API.

  All Oracle Bare Metal Cloud Services resources, including instances, get an
  Oracle-assigned, unique ID called an Oracle Cloud Identifier (OCID). When
  you create a resource, you can find its OCID in the response. You can also
  retrieve a resource's OCID by using a List API operation on that resource
  type, or by viewing the resource in the Console.

  When you launch an instance, it is automatically attached to a virtual
  network interface card (VNIC), called the *primary VNIC*. The VNIC has a
  private IP address from the subnet's CIDR. You can either assign a private
  IP address of your choice or let Oracle automatically assign one. You can
  choose whether the instance has a public IP address. To retrieve the
  addresses, use the [ListVnicAttachments] operation to get the VNIC ID for
  the instance, and then call [GetVnic] with the VNIC ID.

  You can later add secondary VNICs to an instance. For more information, see
  [Virtual Network Interface Cards (VNICs)].

Options:
  --availability-domain TEXT      The Availability Domain of the instance.
                                  Example: `Uocm:PHX-AD-1` [required]
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --image-id TEXT                 The OCID of the image used to boot the
                                  instance. [required]
  --shape TEXT                    The shape of an instance. The shape determines
                                  the number of CPUs, amount of memory, and
                                  other resources allocated to the instance.
                                  You can enumerate all available shapes by
                                  calling [ListShapes]. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My bare
                                  metal instance`
  --extended-metadata TEXT        Additional metadata key/value pairs that you
                                  provide.  They serve a similar purpose and
                                  functionality from fields in the 'metadata'
                                  object.
                                  
                                  They are distinguished from
                                  'metadata' fields in that these can be nested
                                  JSON objects (whereas 'metadata' fields are
                                  string/string maps only).
                                  
                                  If you don't need
                                  nested metadata values, it is strongly advised
                                  to avoid using this object and use the
                                  Metadata object instead.
  --hostname-label TEXT           The hostname for the VNIC that is created
                                  during instance launch. Used for DNS. The
                                  value is the hostname portion of the
                                  instance's fully qualified domain name (FQDN)
                                  (e.g., `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123]. The
                                  value cannot be changed, and it can be
                                  retrieved from the [Vnic object].
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
                                  
                                  Example: `bminstance-1`
  --ipxe-script-file FILENAME     This is an advanced option.
                                  
                                  When an Oracle
                                  Bare Metal Cloud Services or virtual machine
                                  instance boots, the iPXE firmware that runs on
                                  the instance is configured to run an iPXE
                                  script to continue the boot process.
                                  
                                  If you
                                  want more control over the boot process, you
                                  can provide your own custom iPXE script that
                                  will run when the instance boots; however, you
                                  should be aware that the same iPXE script will
                                  run every time an instance boots; not only
                                  after the initial LaunchInstance call.
                                  
                                  The
                                  default iPXE script connects to the instance's
                                  local boot volume over iSCSI and performs a
                                  network boot. If you use a custom iPXE script
                                  and want to network-boot from the instance's
                                  local boot volume over iSCSI the same way as
                                  the default iPXE script, you should use the
                                  following iSCSI IP address: 169.254.0.2, and
                                  boot volume IQN: iqn.2015-02.oracle.boot.
                                  
                                  For
                                  more information about the Bring Your Own
                                  Image feature of Oracle Bare Metal Cloud
                                  Services, see [Bring Your Own Image].
                                  
                                  For
                                  more information about iPXE, see
                                  http://ipxe.org.
  --metadata TEXT                 Custom metadata key/value pairs that you
                                  provide, such as the SSH public key required
                                  to connect to the instance. For more info see
                                  documentation: https://docs.us-phoenix-1.oracl
                                  ecloud.com/api/#/en/iaas/20160918/requests/Lau
                                  nchInstanceDetails. This must be provided in
                                  JSON format.
                                  
                                  Note: user_data and
                                  ssh_authorized_keys can instead be specified
                                  using the parameters --user-data-file and
                                  --ssh-authorized-keys-file.
                                  
                                  Example:
                                  '{"ssh_authorized_keys": "ssh-rsa AAAAB3NzaC1y
                                  c2EAAAADAQABAAABAQDbVpuGODmhsRZOLWNgm0aEYUoWID
                                  SPNWHmg2M6mZpmZNHfiNfx2dSofxUpKOiu5S8Th52AuAHS
                                  mkzNe6lXBO9wxnjOvkowe1mAleRTEl8zPI8Jkz6HrmJCzH
                                  EtS04kC4bx+tXRZhIfRq1uGaPcriKyquTnQs52Ahoxgw5v
                                  dXXQMwxWZLAcyaP01JrZwcUqPlB/GRiBFSTj0E/AIiVW3A
                                  PNME5HjreOd/djjPRpvWu7AUpOqskG38kr8lhxo1hJifqe
                                  Mg5W7cQsecTLJHgTDAPJD68ujM93jdzV2llIXwR1zyl80i
                                  6c3lDLyLgUrCLM0R1xex/zITTdT6/Z84buS/Xl my
                                  public key"}'
  --subnet-id TEXT                The OCID of the subnet where the VNIC attached
                                  to this instance will be created.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --vnic-display-name TEXT        A user-friendly name for the default VNIC
                                  attached to this instance. Does not have to be
                                  unique.
  --assign-public-ip BOOLEAN      Whether the default VNIC attached to this
                                  instance should be assigned a public IP
                                  address. Defaults to whether the subnet is
                                  public or private. If not set and the VNIC is
                                  being created in a private subnet (i.e., where
                                  prohibitPublicIpOnVnic=true in the Subnet),
                                  then no public IP address is assigned. If not
                                  set and the subnet is public
                                  (prohibitPublicIpOnVnic=false), then a public
                                  IP address is assigned. If set to true and
                                  prohibitPublicIpOnVnic=true, an error is
                                  returned.
  --private-ip TEXT               A private IP address of your choice to assign
                                  to the default VNIC attached to this instance.
                                  Must be an available IP address within the
                                  subnet's CIDR. If no value is specified, a
                                  private IP address from the subnet will be
                                  automatically assigned.
  --skip-source-dest-check BOOLEAN
                                  Indicates whether Source/Destination check is
                                  disabled on the VNIC. Defaults to `false`, in
                                  which case we enable Source/Destination check
                                  on the VNIC.
  --user-data-file FILENAME       A file containing data that Cloud-Init can use
                                  to run custom scripts or provide custom Cloud-
                                  Init configuration. This parameter is a
                                  convenience wrapper around the 'user_data'
                                  field of the --metadata parameter.  Populating
                                  both values in the same call will result in an
                                  error. For more info see Cloud-Init
                                  documentation: https://cloudinit.readthedocs.o
                                  rg/en/latest/topics/format.html.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to be included in the ~/.ssh/authorized_keys
                                  file for the default user on the instance. Use
                                  a newline character to separate multiple keys.
                                  The SSH keys must be in the format necessary
                                  for the authorized_keys file. This parameter
                                  is a convenience wrapper around the
                                  'ssh_authorized_keys' field of the --metadata
                                  parameter. Populating both values in the same
                                  call will result in an error. For more info
                                  see documentation: https://docs.us-phoenix-1.o
                                  raclecloud.com/api/#/en/iaas/20160918/requests
                                  /LaunchInstanceDetails.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance list --help
Usage: oci compute instance list [OPTIONS]

  Lists the instances in the specified compartment and the specified
  Availability Domain. You can filter the results by specifying an instance
  name (the list will include all the identically-named instances in the
  compartment).

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My new
                                  resource`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance list-vnics --help
Usage: oci compute instance list-vnics [OPTIONS]

  Lists the VNICs that are attached to the specified instance. VNICs that are
  in the process of attaching or detaching will not be returned.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --limit TEXT                    The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance terminate --help
Usage: oci compute instance terminate [OPTIONS]

  Terminates the specified instance. Any attached VNICs and volumes are
  automatically detached when the instance terminates.

  This is an asynchronous operation. The instance's `lifecycleState` will
  change to TERMINATING temporarily until the instance is completely removed.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance update --help
Usage: oci compute instance update [OPTIONS]

  Updates the display name of the specified instance. Avoid entering
  confidential information. The OCID of the instance remains the same.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My bare
                                  metal instance`
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection --help
Usage: oci compute instance-console-connection [OPTIONS] COMMAND [ARGS]...

  The `InstanceConsoleConnection` API provides you with serial console access
  to virtual machine (VM) instances, enabling you to troubleshoot
  malfunctioning instances remotely.

  For more information about serial console access, see [Accessing the Serial
  Console].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new serial console connection to...
  delete  Deletes the specified serial console...
  get     Gets the specified serial console...
  list    Lists the serial console connections for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection create --help
Usage: oci compute instance-console-connection create [OPTIONS]

  Creates a new serial console connection to the specified instance. Once the
  serial console connection has been created and is available, you connect to
  the serial console using an SSH client.

  The default number of enabled serial console connections per tenancy is 10.

  For more information about serial console access, see [Accessing the Serial
  Console].

Options:
  --instance-id TEXT              The OCID of the instance to create the serial
                                  console connection to. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --ssh-public-key-file FILENAME  A file containing the SSH public key used to
                                  authenticate the serial console connection
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection delete --help
Usage: oci compute instance-console-connection delete [OPTIONS]

  Deletes the specified serial console connection.

Options:
  --instance-console-connection-id TEXT
                                  The OCID of the intance console connection
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection get --help
Usage: oci compute instance-console-connection get [OPTIONS]

  Gets the specified serial console connection's information.

Options:
  --instance-console-connection-id TEXT
                                  The OCID of the intance console connection
                                  [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection list --help
Usage: oci compute instance-console-connection list [OPTIONS]

  Lists the serial console connections for the specified compartment or
  instance.

  For more information about serial console access, see [Accessing the Serial
  Console].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --instance-id TEXT              The OCID of the instance.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute shape --help
Usage: oci compute shape [OPTIONS] COMMAND [ARGS]...

  A compute instance shape that can be used in [LaunchInstance]. For more
  information, see [Overview of the Compute Service].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the shapes that can be used to launch...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute shape list --help
Usage: oci compute shape list [OPTIONS]

  Lists the shapes that can be used to launch an instance within the specified
  compartment. You can filter the list by compatibility with a specific image.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --image-id TEXT                 The OCID of an image.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute vnic-attachment --help
Usage: oci compute vnic-attachment [OPTIONS] COMMAND [ARGS]...

  Represents an attachment between a VNIC and an instance. For more
  information, see [Virtual Network Interface Cards (VNICs)].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets the information for the specified VNIC...
  list  Lists the VNIC attachments in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute vnic-attachment get --help
Usage: oci compute vnic-attachment get [OPTIONS]

  Gets the information for the specified VNIC attachment.

Options:
  --vnic-attachment-id TEXT       The OCID of the VNIC attachment. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute vnic-attachment list --help
Usage: oci compute vnic-attachment list [OPTIONS]

  Lists the VNIC attachments in the specified compartment. A VNIC attachment
  resides in the same compartment as the attached instance. The list can be
  filtered by instance, VNIC, or Availability Domain.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --instance-id TEXT              The OCID of the instance.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --vnic-id TEXT                  The OCID of the VNIC.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment --help
Usage: oci compute volume-attachment [OPTIONS] COMMAND [ARGS]...

  A base object for all types of attachments between a storage volume and an
  instance. For specific details about iSCSI attachments, see
  [IScsiVolumeAttachment Reference].

  For general information about volume attachments, see [Overview of Block
  Volume Storage].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  attach  Attaches the specified storage volume to the...
  detach  Detaches a storage volume from an instance.
  get     Gets information about the specified volume...
  list    Lists the volume attachments in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment attach --help
Usage: oci compute volume-attachment attach [OPTIONS]

  Attaches the specified storage volume to the specified instance.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --type TEXT                     The type of volume. The only supported value
                                  is "iscsi". [required]
  --volume-id TEXT                The OCID of the volume. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it cannot be changed. Avoid
                                  entering confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment detach --help
Usage: oci compute volume-attachment detach [OPTIONS]

  Detaches a storage volume from an instance. You must specify the OCID of the
  volume attachment.

  This is an asynchronous operation. The attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --volume-attachment-id TEXT     The OCID of the volume attachment. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment get --help
Usage: oci compute volume-attachment get [OPTIONS]

  Gets information about the specified volume attachment.

Options:
  --volume-attachment-id TEXT     The OCID of the volume attachment. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment list --help
Usage: oci compute volume-attachment list [OPTIONS]

  Lists the volume attachments in the specified compartment. You can filter
  the list by specifying an instance OCID, volume OCID, or both.

  Currently, the only supported volume attachment type is
  [IScsiVolumeAttachment].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --instance-id TEXT              The OCID of the instance.
  --volume-id TEXT                The OCID of the volume.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db --help
Usage: oci db [OPTIONS] COMMAND [ARGS]...

  Database Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  data-guard-association  The properties that define a Data Guard...
  database                An Oracle database on a DB System.
  node                    A server where Oracle database software is...
  system                  The Database Service supports several types...
  system-shape            The shape of the DB System.
  version                 The Oracle database software version.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association --help
Usage: oci db data-guard-association [OPTIONS] COMMAND [ARGS]...

  The properties that define a Data Guard association.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

  For information about endpoints and signing API requests, see [About the
  API]. For information about available SDKs and tools, see [SDKS and Other
  Tools].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Creates a new Data Guard association.
  failover    Performs a failover to transition the standby...
  get         Gets the specified Data Guard association's...
  list        Lists all Data Guard associations for the...
  reinstate   Reinstates the database identified by the...
  switchover  Performs a switchover to transition the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association create --help
Usage: oci db data-guard-association create [OPTIONS] COMMAND [ARGS]...

  Creates a new Data Guard association.  A Data Guard association represents
  the replication relationship between the specified database and a peer
  database. For more information, see [Using Oracle Data Guard].

  All Oracle Cloud Infrastructure resources, including Data Guard
  associations, get an Oracle-assigned, unique ID called an Oracle Cloud
  Identifier (OCID). When you create a resource, you can find its OCID in the
  response. You can also retrieve a resource's OCID by using a List API
  operation on that resource type, or by viewing the resource in the Console.
  Fore more information, see [Resource Identifiers].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  from-existing-db-system  Creates a new Data Guard association using an...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association create from-existing-db-system --help
Usage: oci db data-guard-association create from-existing-db-system 
           [OPTIONS]

  Creates a new Data Guard association using an existing DB System.  A Data
  Guard association represents the replication relationship between the
  specified database and a peer database. For more information, see [Using
  Oracle Data Guard].

  All Oracle Cloud Infrastructue resources, including Data Guard associations,
  get an Oracle-assigned, unique ID called an Oracle Cloud Identifier (OCID).
  When you create a resource, you can find its OCID in the response. You can
  also retrieve a resource's OCID by using a List API operation on that
  resource type, or by viewing the resource in the Console. Fore more
  information, see [Resource Identifiers].

Options:
  --database-id TEXT              The database [OCID]. [required]
  --creation-type TEXT            Specifies where to create the associated
                                  database. "ExistingDbSystem" is the only
                                  supported `creationType` value. [required]
  --database-admin-password TEXT  A strong password for the `SYS`, `SYSTEM`, and
                                  `PDB Admin` users to apply during standby
                                  creation.
                                  
                                  The password must contain no fewer
                                  than nine characters and include:
                                  
                                  * At least
                                  two uppercase characters.
                                  
                                  * At least two
                                  lowercase characters.
                                  
                                  * At least two numeric
                                  characters.
                                  
                                  * At least two special
                                  characters. Valid special characters include
                                  "_", "#", and "-" only.
                                  
                                  **The password MUST
                                  be the same as the primary admin password.**
                                  [required]
  --protection-mode TEXT          The protection mode to set up between the
                                  primary and standby databases. For more
                                  information, see [Oracle Data Guard Protection
                                  Modes] in the Oracle Data Guard documentation.
                                  **IMPORTANT** - The only protection mode
                                  currently supported by the Database Service is
                                  MAXIMUM_PERFORMANCE. [required]
  --transport-type TEXT           The redo transport type to use for this Data
                                  Guard association.  Valid values depend on the
                                  specified `protectionMode`:
                                  
                                  *
                                  MAXIMUM_AVAILABILITY - SYNC or FASTSYNC *
                                  MAXIMUM_PERFORMANCE - ASYNC *
                                  MAXIMUM_PROTECTION - SYNC
                                  
                                  For more
                                  information, see [Redo Transport Services] in
                                  the Oracle Data Guard documentation.
                                  **IMPORTANT** - The only transport type
                                  currently supported by the Database Service is
                                  ASYNC. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --peer-db-system-id TEXT        The OCID of the DB System to create the
                                  standby database on. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association failover --help
Usage: oci db data-guard-association failover [OPTIONS]

  Performs a failover to transition the standby database identified by the
  `databaseId` parameter into the specified Data Guard association's primary
  role after the existing primary database fails or becomes unreachable.

  A failover might result in data loss depending on the protection mode in
  effect at the time of the primary database failure.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --database-admin-password TEXT  The DB System administrator password.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association get --help
Usage: oci db data-guard-association get [OPTIONS]

  Gets the specified Data Guard association's configuration information.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association list --help
Usage: oci db data-guard-association list [OPTIONS]

  Lists all Data Guard associations for the specified database.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The pagination token to continue listing from.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association reinstate --help
Usage: oci db data-guard-association reinstate [OPTIONS]

  Reinstates the database identified by the `databaseId` parameter into the
  standby role in a Data Guard association.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --database-admin-password TEXT  The DB System administrator password.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association switchover --help
Usage: oci db data-guard-association switchover [OPTIONS]

  Performs a switchover to transition the primary database of a Data Guard
  association into a standby role. The standby database associated with the
  `dataGuardAssociationId` assumes the primary database role.

  A switchover guarantees no data loss.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --database-admin-password TEXT  The DB System administrator password.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database --help
Usage: oci db database [OPTIONS] COMMAND [ARGS]...

  An Oracle database on a DB System. For more information, see [Managing
  Oracle Databases].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new database in the given DB...
  delete  Deletes a database.
  get     Gets information about a specific database.
  list    Lists all databases in a given DB System.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database create --help
Usage: oci db database create [OPTIONS]

  Creates a new database in the given DB System.

Options:
  --db-system-id TEXT             The OCID of the DB System. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --admin-password TEXT           A strong password for SYS, SYSTEM, and PDB
                                  Admin. The password must be at least nine
                                  characters and contain at least two uppercase,
                                  two lowercase, two numbers, and two special
                                  characters. The special characters must be _,
                                  #, or -. [required]
  --character-set TEXT            The character set for the database. The
                                  default is AL32UTF8. Allowed values are:
                                  AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715,
                                  AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6,
                                  AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711,
                                  AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707,
                                  AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921,
                                  BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775,
                                  BN8BSCII, CDN8PC863, CEL8ISO8859P14,
                                  CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U,
                                  CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2,
                                  EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250,
                                  EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS,
                                  EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869,
                                  ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII,
                                  IS8PC861, IW8ISO8859P8, IW8MACHEBREWS,
                                  IW8MSWIN1255, IW8PC1507, JA16EUC,
                                  JA16EUCTILDE, JA16SJIS, JA16SJISTILDE,
                                  JA16VMS, KO16KSCCS, KO16MSWIN949, LA8ISO6937,
                                  LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774,
                                  LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865,
                                  NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA,
                                  RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS,
                                  TH8TISASCII, TR8DEC, TR8MACTURKISHS,
                                  TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437,
                                  UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG,
                                  WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S,
                                  WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP,
                                  WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8,
                                  ZHS16CGB231280, ZHS16GBK, ZHT16BIG5,
                                  ZHT16CCDC, ZHT16DBT, ZHT16HKSCS,
                                  ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS.
  --db-name TEXT                  The database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. [required]
  --db-workload TEXT              Database workload type. Allowed values are:
                                  OLTP, DSS
  --ncharacter-set TEXT           National character set for the database. The
                                  default is AL16UTF16. Allowed values are:
                                  AL16UTF16 or UTF8.
  --pdb-name TEXT                 Pluggable database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. Pluggable
                                  database should not be same as database name.
  --db-version TEXT               A valid Oracle database version. To get a list
                                  of supported versions, use the command 'oci db
                                  version list'. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database delete --help
Usage: oci db database delete [OPTIONS]

  Deletes a database.

Options:
  --database-id TEXT              The OCID of the database to delete.
                                  [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database get --help
Usage: oci db database get [OPTIONS]

  Gets information about a specific database.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database list --help
Usage: oci db database list [OPTIONS]

  Lists all databases in a given DB System.

Options:
  -c, --compartment-id TEXT       The compartment [OCID]. [required]
  --db-system-id TEXT             The [OCID] of the DB System. [required]
  --limit INTEGER                 The maximum number of items to return.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node --help
Usage: oci db node [OPTIONS] COMMAND [ARGS]...

  A server where Oracle database software is running.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get         Gets information about the specified database...
  list        Gets a list of database nodes in the...
  reset       Powers off and powers on the specified DB...
  soft-reset  Performs an ACPI shutdown and powers on the...
  start       Powers on the specified DB node.
  stop        Powers off the specified DB node.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node get --help
Usage: oci db node get [OPTIONS]

  Gets information about the specified database node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node list --help
Usage: oci db node list [OPTIONS]

  Gets a list of database nodes in the specified DB System and compartment. A
  database node is a server running database software.

Options:
  -c, --compartment-id TEXT       The compartment [OCID]. [required]
  --db-system-id TEXT             The [OCID] of the DB System. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The pagination token to continue listing from.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node reset --help
Usage: oci db node reset [OPTIONS]

  Powers off and powers on the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node soft-reset --help
Usage: oci db node soft-reset [OPTIONS]

  Performs an ACPI shutdown and powers on the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node start --help
Usage: oci db node start [OPTIONS]

  Powers on the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node stop --help
Usage: oci db node stop [OPTIONS]

  Powers off the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system --help
Usage: oci db system [OPTIONS] COMMAND [ARGS]...

  The Database Service supports several types of DB Systems, ranging in size,
  price, and performance. For details about each type of system, see:

  - [Exadata DB Systems] - [Bare Metal or VM DB Systems]

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

  For information about access control and compartments, see [Overview of the
  Identity Service].

  For information about Availability Domains, see [Regions and Availability
  Domains].

  To get a list of Availability Domains, use the `ListAvailabilityDomains`
  operation in the Identity Service API.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get        Gets information about the specified DB...
  launch     Launches a new DB System in the specified...
  list       Gets a list of the DB Systems in the...
  terminate  Terminates a DB System and permanently...
  update     Updates the properties of a DB System, such...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system get --help
Usage: oci db system get [OPTIONS]

  Gets information about the specified DB System.

Options:
  --db-system-id TEXT             The DB System [OCID]. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system launch --help
Usage: oci db system launch [OPTIONS]

  Launches a new DB System in the specified compartment and Availability
  Domain. You'll specify a single Oracle Database Edition that applies to all
  the databases on that DB System. The selected edition cannot be changed.

  An initial database is created on the DB System based on the request
  parameters you provide and some default options. For more information, see
  [Default Options for the Initial Database].

  The DB System will include a command line interface (CLI) that you can use
  to create additional databases and manage existing databases. For more
  information, see the [Oracle Database CLI Reference].

Options:
  --availability-domain TEXT      The Availability Domain where the DB System is
                                  located. [required]
  -c, --compartment-id TEXT       The Oracle Cloud ID (OCID) of the compartment
                                  the DB System  belongs in. [required]
  --cpu-core-count INTEGER        The number of CPU cores to enable. The valid
                                  values depend on the specified shape:
                                  
                                  -
                                  BM.DenseIO1.36 and BM.HighIO1.36 - Specify a
                                  multiple of 2, from 2 to 36. -
                                  BM.RACLocalStorage1.72 - Specify a multiple of
                                  4, from 4 to 72. - Exadata.Quarter1.84 -
                                  Specify a multiple of 2, from 22 to 84. -
                                  Exadata.Half1.168 - Specify a multiple of 4,
                                  from 44 to 168. - Exadata.Full1.336 - Specify
                                  a multiple of 8, from 88 to 336. [required]
  --database-edition TEXT         The Oracle Database Edition that applies to
                                  all the databases on the DB System.
                                  
                                  Exadata
                                  DB Systems and 2-node RAC DB Systems require
                                  ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
                                  [required]
  --hostname TEXT                 The host name for the DB System. The host name
                                  must begin with an alphabetic character and
                                  can contain a maximum of 30 alphanumeric
                                  characters, including hyphens (-).
                                  
                                  The
                                  maximum length of the combined hostname and
                                  domain is 63 characters.
                                  
                                  **Note:** The
                                  hostname must be unique within the subnet. If
                                  it is not unique, the DB System will fail to
                                  provision. [required]
  --shape TEXT                    The shape of the DB System. The shape
                                  determines resources allocated to the DB
                                  System - CPU cores and memory for VM shapes;
                                  CPU cores, memory and storage for non-VM (or
                                  bare metal) shapes. To get a list of shapes,
                                  use the [ListDbSystemShapes] operation.
                                  [required]
  --subnet-id TEXT                The OCID of the subnet the DB System is
                                  associated with.
                                  
                                  **Subnet Restrictions:** -
                                  For single node and 2-node (RAC) DB Systems,
                                  do not use a subnet that overlaps with
                                  192.168.16.16/28 - For Exadata and VM-based
                                  RAC DB Systems, do not use a subnet that
                                  overlaps with 192.168.128.0/20
                                  
                                  These subnets
                                  are used by the Oracle Clusterware private
                                  interconnect on the database instance.
                                  Specifying an overlapping subnet will cause
                                  the private interconnect to malfunction. This
                                  restriction applies to both the client subnet
                                  and backup subnet. [required]
  --backup-subnet-id TEXT         The OCID of the backup network subnet the DB
                                  System is associated with. Applicable only to
                                  Exadata.
                                  
                                  **Subnet Restrictions:** See above
                                  subnetId's **Subnet Restriction**.
  --cluster-name TEXT             Cluster name for Exadata and 2-node RAC DB
                                  Systems. The cluster name must begin with an
                                  an alphabetic character, and may contain
                                  hyphens (-). Underscores (_) are not
                                  permitted. The cluster name can be no longer
                                  than 11 characters and is not case sensitive.
  --data-storage-percentage INTEGER
                                  The percentage assigned to DATA storage (user
                                  data and database files). The remaining
                                  percentage is assigned to RECO storage
                                  (database redo logs, archive logs, and
                                  recovery manager backups). Specify 80 or 40.
                                  The default is 80 percent assigned to DATA
                                  storage. This is not applicable for VM based
                                  DB systems.
  --disk-redundancy TEXT          The type of redundancy configured for the DB
                                  System. Normal is 2-way redundancy,
                                  recommended for test and development systems.
                                  High is 3-way redundancy, recommended for
                                  production systems.
  --display-name TEXT             The user-friendly name for the DB System. It
                                  does not have to be unique.
  --domain TEXT                   A domain name used for the DB System. If the
                                  Oracle-provided Internet and VCN Resolver is
                                  enabled for the specified subnet, the domain
                                  name for the subnet is used (don't provide
                                  one). Otherwise, provide a valid DNS domain
                                  name. Hyphens (-) are not permitted.
  --initial-data-storage-size-in-gb INTEGER
                                  Size, in GBs, of the initial data volume that
                                  will be created and attached to VM-shape based
                                  DB system. This storage can later be scaled up
                                  if needed. Note that the total storage size
                                  attached will be more than what is requested,
                                  to account for REDO/RECO space and software
                                  volume.
  --license-model TEXT            The Oracle license model that applies to all
                                  the databases on the DB System. The default is
                                  LICENSE_INCLUDED.
  --node-count INTEGER            Number of nodes to launch for a VM-shape based
                                  RAC DB system.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --admin-password TEXT           A strong password for SYS, SYSTEM, and PDB
                                  Admin. The password must be at least nine
                                  characters and contain at least two uppercase,
                                  two lowercase, two numbers, and two special
                                  characters. The special characters must be _,
                                  #, or -. [required]
  --character-set TEXT            The character set for the database. The
                                  default is AL32UTF8. Allowed values are:
                                  AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715,
                                  AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6,
                                  AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711,
                                  AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707,
                                  AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921,
                                  BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775,
                                  BN8BSCII, CDN8PC863, CEL8ISO8859P14,
                                  CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U,
                                  CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2,
                                  EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250,
                                  EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS,
                                  EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869,
                                  ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII,
                                  IS8PC861, IW8ISO8859P8, IW8MACHEBREWS,
                                  IW8MSWIN1255, IW8PC1507, JA16EUC,
                                  JA16EUCTILDE, JA16SJIS, JA16SJISTILDE,
                                  JA16VMS, KO16KSCCS, KO16MSWIN949, LA8ISO6937,
                                  LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774,
                                  LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865,
                                  NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA,
                                  RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS,
                                  TH8TISASCII, TR8DEC, TR8MACTURKISHS,
                                  TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437,
                                  UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG,
                                  WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S,
                                  WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP,
                                  WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8,
                                  ZHS16CGB231280, ZHS16GBK, ZHT16BIG5,
                                  ZHT16CCDC, ZHT16DBT, ZHT16HKSCS,
                                  ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS.
  --db-name TEXT                  The database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. [required]
  --db-version TEXT               A valid Oracle database version. To get a list
                                  of supported versions, use the command 'oci db
                                  version list'. [required]
  --db-workload TEXT              Database workload type. Allowed values are:
                                  OLTP, DSS
  --ncharacter-set TEXT           National character set for the database. The
                                  default is AL16UTF16. Allowed values are:
                                  AL16UTF16 or UTF8.
  --pdb-name TEXT                 Pluggable database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. Pluggable
                                  database should not be same as database name.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to use for SSH access to the DB System. Use a
                                  newline character to separate multiple keys.
                                  The length of the combined keys cannot exceed
                                  10,000 characters. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system list --help
Usage: oci db system list [OPTIONS]

  Gets a list of the DB Systems in the specified compartment.

Options:
  -c, --compartment-id TEXT       The compartment [OCID]. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The pagination token to continue listing from.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system terminate --help
Usage: oci db system terminate [OPTIONS]

  Terminates a DB System and permanently deletes it and any databases running
  on it, and any storage volumes attached to it. The database data is local to
  the DB System and will be lost when the system is terminated. Oracle
  recommends that you back up any data in the DB System prior to terminating
  it.

Options:
  --db-system-id TEXT             The DB System [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system update --help
Usage: oci db system update [OPTIONS]

  Updates the properties of a DB System, such as the CPU core count.

Options:
  --db-system-id TEXT             The DB System [OCID]. [required]
  --cpu-core-count INTEGER        The number of CPU Cores to be set on the DB
                                  System. Applicable only for non-VM based DB
                                  systems.
  --data-storage-size-in-gb INTEGER
                                  Size, in GBs, to which the currently attached
                                  storage needs to be scaled up to for VM based
                                  DB system. This must be greater than current
                                  storage size. Note that the total storage size
                                  attached will be more than what is requested,
                                  to account for REDO/RECO space and software
                                  volume.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to use for SSH access to the DB System. Use a
                                  newline character to separate multiple keys.
                                  The length of the combined keys cannot exceed
                                  10,000 characters.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system-shape --help
Usage: oci db system-shape [OPTIONS] COMMAND [ARGS]...

  The shape of the DB System. The shape determines resources to allocate to
  the DB system - CPU cores and memory for VM shapes; CPU cores, memory and
  storage for non-VM (or bare metal) shapes. For a description of shapes, see
  [DB System Launch Options]. To use any of the API operations, you must be
  authorized in an IAM policy. If you're not authorized, talk to an
  administrator. If you're an administrator who needs to write policies to
  give users access, see [Getting Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Gets a list of the shapes that can be used to...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system-shape list --help
Usage: oci db system-shape list [OPTIONS]

  Gets a list of the shapes that can be used to launch a new DB System. The
  shape determines resources to allocate to the DB system - CPU cores and
  memory for VM shapes; CPU cores, memory and storage for non-VM (or bare
  metal) shapes.

Options:
  --availability-domain TEXT      The name of the Availability Domain.
                                  [required]
  -c, --compartment-id TEXT       The compartment [OCID]. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The pagination token to continue listing from.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db version --help
Usage: oci db version [OPTIONS] COMMAND [ARGS]...

  The Oracle database software version.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Gets a list of supported Oracle database...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db version list --help
Usage: oci db version list [OPTIONS]

  Gets a list of supported Oracle database versions.

Options:
  -c, --compartment-id TEXT       The compartment [OCID]. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The pagination token to continue listing from.
  --db-system-shape TEXT          If provided, filters the results to the set of
                                  database versions which are supported for the
                                  given shape.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam --help
Usage: oci iam [OPTIONS] COMMAND [ARGS]...

  Identity and Access Management Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  availability-domain  One or more isolated, fault-tolerant Oracle...
  compartment          A collection of related resources.
  customer-secret-key  A `CustomerSecretKey` is an Oracle-provided...
  group                A collection of users who all need the same...
  policy               A document that specifies the type of access...
  region               A localized geographic area, such as Phoenix,...
  region-subscription  An object that represents your tenancy's...
  user                 An individual employee or system that needs...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam availability-domain --help
Usage: oci iam availability-domain [OPTIONS] COMMAND [ARGS]...

  One or more isolated, fault-tolerant Oracle data centers that host cloud
  resources such as instances, volumes, and subnets. A region contains several
  Availability Domains. For more information, see [Regions and Availability
  Domains].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the Availability Domains in your...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam availability-domain list --help
Usage: oci iam availability-domain list [OPTIONS]

  Lists the Availability Domains in your tenancy. Specify the OCID of either
  the tenancy or another of your compartments as the value for the compartment
  ID (remember that the tenancy is simply the root compartment). See [Where to
  Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment --help
Usage: oci iam compartment [OPTIONS] COMMAND [ARGS]...

  A collection of related resources. Compartments are a fundamental component
  of Oracle Bare Metal Cloud Services for organizing and isolating your cloud
  resources. You use them to clearly separate resources for the purposes of
  measuring usage and billing, access (through the use of IAM Service
  policies), and isolation (separating the resources for one project or
  business unit from another). A common approach is to create a compartment
  for each major part of your organization. For more information, see
  [Overview of the IAM Service] and also [Setting Up Your Tenancy].

  To place a resource in a compartment, simply specify the compartment ID in
  the "Create" request object when initially creating the resource. For
  example, to launch an instance into a particular compartment, specify that
  compartment's OCID in the `LaunchInstance` request. You can't move an
  existing resource from one compartment to another.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new compartment in your tenancy.
  get     Gets the specified compartment's information.
  list    Lists the compartments in your tenancy.
  update  Updates the specified compartment's...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment create --help
Usage: oci iam compartment create [OPTIONS]

  Creates a new compartment in your tenancy.

  **Important:** Compartments cannot be renamed or deleted.

  You must specify your tenancy's OCID as the compartment ID in the request
  object. Remember that the tenancy is simply the root compartment. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the compartment, which must be unique
  across all compartments in your tenancy and cannot be changed. You can use
  this name or the OCID when writing policies that apply to the compartment.
  For more information about policies, see [How Policies Work].

  You must also specify a *description* for the compartment (although it can
  be an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateCompartment].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the
                                  compartment. [required]
  --name TEXT                     The name you assign to the compartment during
                                  creation. The name must be unique across all
                                  compartments in the tenancy. [required]
  --description TEXT              The description you assign to the compartment
                                  during creation. Does not have to be unique,
                                  and it's changeable. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment get --help
Usage: oci iam compartment get [OPTIONS]

  Gets the specified compartment's information.

  This operation does not return a list of all the resources inside the
  compartment. There is no single API operation that does that. Compartments
  can contain multiple types of resources (instances, block storage volumes,
  etc.). To find out what's in a compartment, you must call the "List"
  operation for each resource type and specify the compartment's OCID as a
  query parameter in the request. For example, call the [ListInstances]
  operation in the Cloud Compute Service or the [ListVolumes] operation in
  Cloud Block Storage.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment list --help
Usage: oci iam compartment list [OPTIONS]

  Lists the compartments in your tenancy. You must specify your tenancy's OCID
  as the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment update --help
Usage: oci iam compartment update [OPTIONS]

  Updates the specified compartment's description.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --description TEXT              The description you assign to the compartment.
                                  Does not have to be unique, and it's
                                  changeable.
  --name TEXT                     The new name you assign to the compartment.
                                  The name must be unique across all
                                  compartments in the tenancy.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key --help
Usage: oci iam customer-secret-key [OPTIONS] COMMAND [ARGS]...

  A `CustomerSecretKey` is an Oracle-provided key for using the Object Storage
  Service's [Amazon S3 compatible API]. A user can have up to two secret keys
  at a time.

  **Note:** The secret key is always an Oracle-generated string; you can't
  change it to a string of your choice.

  For more information, see [Managing User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new secret key for the specified...
  delete  Deletes the specified secret key for the...
  list    Lists the secret keys for the specified user.
  update  Updates the specified secret key's...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key create --help
Usage: oci iam customer-secret-key create [OPTIONS]

  Creates a new secret key for the specified user. Secret keys are used for
  authentication with the Object Storage Service's Amazon S3 compatible API.
  For information, see [Managing User Credentials].

  You must specify a *description* for the secret key (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateCustomerSecretKey].

  Every user has permission to create a secret key for *their own user ID*. An
  administrator in your organization does not need to write a policy to give
  users this ability. To compare, administrators who have permission to the
  tenancy can use this operation to create a secret key for any user,
  including themselves.

Options:
  --display-name TEXT             The name you assign to the secret key during
                                  creation. Does not have to be unique, and it's
                                  changeable. [required]
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key delete --help
Usage: oci iam customer-secret-key delete [OPTIONS]

  Deletes the specified secret key for the specified user.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --customer-secret-key-id TEXT   The OCID of the secret key. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key list --help
Usage: oci iam customer-secret-key list [OPTIONS]

  Lists the secret keys for the specified user. The returned object contains
  the secret key's OCID, but not the secret key itself. The actual secret key
  is returned only upon creation.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key update --help
Usage: oci iam customer-secret-key update [OPTIONS]

  Updates the specified secret key's description.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --customer-secret-key-id TEXT   The OCID of the secret key. [required]
  --display-name TEXT             The description you assign to the secret key.
                                  Does not have to be unique, and it's
                                  changeable.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group --help
Usage: oci iam group [OPTIONS] COMMAND [ARGS]...

  A collection of users who all need the same type of access to a particular
  set of resources or compartment. For conceptual information about groups and
  other IAM Service components, see [Overview of the IAM Service].

  If you're federating with an identity provider (IdP), you need to create
  mappings between the groups defined in the IdP and groups you define in the
  IAM service. For more information, see [Identity Providers and Federation].
  Also see [IdentityProvider] and [IdpGroupMapping].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  add-user     Adds the specified user to the specified...
  create       Creates a new group in your tenancy.
  delete       Deletes the specified group.
  get          Gets the specified group's information.
  list         Lists the groups in your tenancy.
  list-users   Lists the users in the specified group.
  remove-user  Removes a user from a group.
  update       Updates the specified group.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group add-user --help
Usage: oci iam group add-user [OPTIONS]

  Adds the specified user to the specified group.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --group-id TEXT                 The OCID of the group. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group create --help
Usage: oci iam group create [OPTIONS]

  Creates a new group in your tenancy.

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the group, which must be unique across
  all groups in your tenancy and cannot be changed. You can use this name or
  the OCID when writing policies that apply to the group. For more information
  about policies, see [How Policies Work].

  You must also specify a *description* for the group (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateGroup].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  After creating the group, you need to put users in it and write policies for
  it. See [AddUserToGroup] and [CreatePolicy].

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the group.
                                  [required]
  --name TEXT                     The name you assign to the group during
                                  creation. The name must be unique across all
                                  groups in the tenancy and cannot be changed.
                                  [required]
  --description TEXT              The description you assign to the group during
                                  creation. Does not have to be unique, and it's
                                  changeable. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group delete --help
Usage: oci iam group delete [OPTIONS]

  Deletes the specified group. The group must be empty.

Options:
  --group-id TEXT                 The OCID of the group. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group get --help
Usage: oci iam group get [OPTIONS]

  Gets the specified group's information.

  This operation does not return a list of all the users in the group. To do
  that, use [ListUserGroupMemberships] and provide the group's OCID as a query
  parameter in the request.

Options:
  --group-id TEXT                 The OCID of the group. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group list --help
Usage: oci iam group list [OPTIONS]

  Lists the groups in your tenancy. You must specify your tenancy's OCID as
  the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group list-users --help
Usage: oci iam group list-users [OPTIONS]

  Lists the users in the specified group. You must specify your tenancy's OCID
  as the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --group-id TEXT                 The OCID of the user. [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit TEXT                    The maximum number of items to return in a
                                  paginated "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group remove-user --help
Usage: oci iam group remove-user [OPTIONS]

  Removes a user from a group.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --user-id TEXT                  The OCID of the user. [required]
  --group-id TEXT                 The OCID of the group. [required]
  --force                         Perform removal without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group update --help
Usage: oci iam group update [OPTIONS]

  Updates the specified group.

Options:
  --group-id TEXT                 The OCID of the group. [required]
  --description TEXT              The description you assign to the group. Does
                                  not have to be unique, and it's changeable.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy --help
Usage: oci iam policy [OPTIONS] COMMAND [ARGS]...

  A document that specifies the type of access a group has to the resources in
  a compartment. For information about policies and other IAM Service
  components, see [Overview of the IAM Service]. If you're new to policies,
  see [Getting Started with Policies].

  The word "policy" is used by people in different ways:

    * An individual statement written in the policy language   * A collection
    of statements in a single, named "policy" document (which has an Oracle
    Cloud ID (OCID) assigned to it)   * The overall body of policies your
    organization uses to control access to resources

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new policy in the specified...
  delete  Deletes the specified policy.
  get     Gets the specified policy's information.
  list    Lists the policies in the specified...
  update  Updates the specified policy.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy create --help
Usage: oci iam policy create [OPTIONS]

  Creates a new policy in the specified compartment (either the tenancy or
  another of your compartments). If you're new to policies, see [Getting
  Started with Policies].

  You must specify a *name* for the policy, which must be unique across all
  policies in your tenancy and cannot be changed.

  You must also specify a *description* for the policy (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdatePolicy].

  You must specify one or more policy statements in the statements array. For
  information about writing policies, see [How Policies Work] and [Common
  Policies].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  New policies take effect typically within 10 seconds.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  policy (either the tenancy or another
                                  compartment). [required]
  --name TEXT                     The name you assign to the policy during
                                  creation. The name must be unique across all
                                  policies in the tenancy and cannot be changed.
                                  [required]
  --statements TEXT               An array of policy statements written in the
                                  policy language. See [How Policies Work] and
                                  [Common Policies]. [required] This must be
                                  provided in JSON format. See API reference for
                                  additional help.
                                  
                                  Example: '["statement
                                  1","statement 2"]'
  --description TEXT              The description you assign to the policy
                                  during creation. Does not have to be unique,
                                  and it's changeable. [required]
  --version-date TEXT             The version of the policy. If null or set to
                                  an empty string, when a request comes in for
                                  authorization, the policy will be evaluated
                                  according to the current behavior of the
                                  services at that moment. If set to a
                                  particular date (YYYY-MM-DD), the policy will
                                  be evaluated according to the behavior of the
                                  services on that date.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy delete --help
Usage: oci iam policy delete [OPTIONS]

  Deletes the specified policy. The deletion takes effect typically within 10
  seconds.

Options:
  --policy-id TEXT                The OCID of the policy. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy get --help
Usage: oci iam policy get [OPTIONS]

  Gets the specified policy's information.

Options:
  --policy-id TEXT                The OCID of the policy. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy list --help
Usage: oci iam policy list [OPTIONS]

  Lists the policies in the specified compartment (either the tenancy or
  another of your compartments). See [Where to Get the Tenancy's OCID and
  User's OCID].

  To determine which policies apply to a particular group or compartment, you
  must view the individual statements inside all your policies. There isn't a
  way to automatically obtain that information via the API.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy update --help
Usage: oci iam policy update [OPTIONS]

  Updates the specified policy. You can update the description or the policy
  statements themselves.

  Policy changes take effect typically within 10 seconds.

Options:
  --policy-id TEXT                The OCID of the policy. [required]
  --description TEXT              The description you assign to the policy. Does
                                  not have to be unique, and it's changeable.
  --statements TEXT               A JSON array of policy statements written in
                                  the policy language. See [How Policies Work]
                                  and [Common Policies]. Example: '["statement
                                  1","statement 2"]' (The single quotes are
                                  required.)
  --version-date TEXT             The version of the policy. If set to an empty
                                  string, when a request comes in for
                                  authorization, the policy will be evaluated
                                  according to the current behavior of the
                                  services at that moment. If set to a
                                  particular date (YYYY-MM-DD), the policy will
                                  be evaluated according to the behavior of the
                                  services on that date.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region --help
Usage: oci iam region [OPTIONS] COMMAND [ARGS]...

  A localized geographic area, such as Phoenix, AZ. Oracle Bare Metal Cloud
  Services is hosted in regions and Availability Domains. A region is composed
  of several Availability Domains. An Availability Domain is one or more data
  centers located within a region. For more information, see [Regions and
  Availability Domains].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists all the regions offered by Oracle Bare...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region list --help
Usage: oci iam region list [OPTIONS]

  Lists all the regions offered by Oracle Bare Metal Cloud Services.

Options:
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region-subscription --help
Usage: oci iam region-subscription [OPTIONS] COMMAND [ARGS]...

  An object that represents your tenancy's access to a particular region
  (i.e., a subscription), the status of that access, and whether that region
  is the home region. For more information, see [Managing Regions].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a subscription to a region for a...
  list    Lists the region subscriptions for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region-subscription create --help
Usage: oci iam region-subscription create [OPTIONS]

  Creates a subscription to a region for a tenancy.

Options:
  --region-key TEXT               The regions's key.
                                  
                                  Allowed values are: -
                                  `PHX` - `IAD` - `FRA`
                                  
                                  Example: `PHX`
                                  [required]
  --tenancy-id TEXT               The OCID of the tenancy. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region-subscription list --help
Usage: oci iam region-subscription list [OPTIONS]

  Lists the region subscriptions for the specified tenancy.

Options:
  --tenancy-id TEXT               The OCID of the tenancy. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user --help
Usage: oci iam user [OPTIONS] COMMAND [ARGS]...

  An individual employee or system that needs to manage or use your company's
  Oracle Bare Metal Cloud Services resources. Users might need to launch
  instances, manage remote disks, work with your cloud network, etc. Users
  have one or more IAM Service credentials ([ApiKey], [UIPassword], and
  [SwiftPassword]). For more information, see [User Credentials]). End users
  of your application are not typically IAM Service users. For conceptual
  information about users and other IAM Service components, see [Overview of
  the IAM Service].

  These users are created directly within the Oracle Bare Metal Cloud Services
  system, via the IAM service. They are different from *federated users*, who
  authenticate themselves to the Oracle Bare Metal Cloud Services Console via
  an identity provider. For more information, see [Identity Providers and
  Federation].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  api-key            A PEM-format RSA credential for securing...
  create             Creates a new user in your tenancy.
  delete             Deletes the specified user.
  get                Gets the specified user's information.
  list               Lists the users in your tenancy.
  list-groups        Lists the groups for which the specified user...
  swift-password     Swift is the OpenStack object storage...
  ui-password        A text password that enables a user to sign...
  update             Updates the description of the specified...
  update-user-state  Updates the state of the specified user.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key --help
Usage: oci iam user api-key [OPTIONS] COMMAND [ARGS]...

  A PEM-format RSA credential for securing requests to the Oracle Bare Metal
  Cloud Services REST API. Also known as an *API signing key*. Specifically,
  this is the public key from the key pair. The private key remains with the
  user calling the API. For information about generating a key pair in the
  required PEM format, see [Required Keys and OCIDs].

  **Important:** This is **not** the SSH key for accessing compute instances.

  Each user can have a maximum of three API signing keys.

  For more information about user credentials, see [User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Deletes the specified API signing key for the...
  list    Lists the API signing keys for the specified...
  upload  Uploads an API signing key for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key delete --help
Usage: oci iam user api-key delete [OPTIONS]

  Deletes the specified API signing key for the specified user.

  Every user has permission to use this operation to delete a key for *their
  own user ID*. An administrator in your organization does not need to write a
  policy to give users this ability. To compare, administrators who have
  permission to the tenancy can use this operation to delete a key for any
  user, including themselves.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --fingerprint TEXT              The key's fingerprint. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key list --help
Usage: oci iam user api-key list [OPTIONS]

  Lists the API signing keys for the specified user. A user can have a maximum
  of three keys.

  Every user has permission to use this API call for *their own user ID*.  An
  administrator in your organization does not need to write a policy to give
  users this ability.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key upload --help
Usage: oci iam user api-key upload [OPTIONS]

  Uploads an API signing key for the specified user.

  Every user has permission to use this operation to upload a key for *their
  own user ID*. An administrator in your organization does not need to write a
  policy to give users this ability. To compare, administrators who have
  permission to the tenancy can use this operation to upload a key for any
  user, including themselves.

  **Important:** Even though you have permission to upload an API key, you
  might not yet have permission to do much else. If you try calling an
  operation unrelated to your own credential management (e.g., `ListUsers`,
  `LaunchInstance`) and receive an "unauthorized" error, check with an
  administrator to confirm which IAM Service group(s) you're in and what
  access you have. Also confirm you're working in the correct compartment.

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --key TEXT                      The public key.  Must be an RSA key in PEM
                                  format. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user create --help
Usage: oci iam user create [OPTIONS]

  Creates a new user in your tenancy. For conceptual information about users,
  your tenancy, and other IAM Service components, see [Overview of the IAM
  Service].

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the user, which must be unique across all
  users in your tenancy and cannot be changed. Allowed characters: No spaces.
  Only letters, numerals, hyphens, periods, underscores, +, and @. If you
  specify a name that's already in use, you'll get a 409 error. This name will
  be the user's login to the Console. You might want to pick a name that your
  company's own identity system (e.g., Active Directory, LDAP, etc.) already
  uses. If you delete a user and then create a new user with the same name,
  they'll be considered different users because they have different OCIDs.

  You must also specify a *description* for the user (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateUser]. You can use the field to provide the user's full name, a
  description, a nickname, or other information to generally identify the
  user.

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  A new user has no permissions until you place the user in one or more groups
  (see [AddUserToGroup]). If the user needs to access the Console, you need to
  provide the user a password (see [CreateOrResetUIPassword]). If the user
  needs to access the Oracle Bare Metal Cloud Services REST API, you need to
  upload a public API signing key for that user (see [Required Keys and OCIDs]
  and also [UploadApiKey]).

  **Important:** Make sure to inform the new user which compartment(s) they
  have access to.

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the user.
                                  [required]
  --name TEXT                     The name you assign to the user during
                                  creation. This is the user's login for the
                                  Console. The name must be unique across all
                                  users in the tenancy and cannot be changed.
                                  [required]
  --description TEXT              The description you assign to the user during
                                  creation. Does not have to be unique, and it's
                                  changeable. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user delete --help
Usage: oci iam user delete [OPTIONS]

  Deletes the specified user. The user must not be in any groups.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user get --help
Usage: oci iam user get [OPTIONS]

  Gets the specified user's information.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user list --help
Usage: oci iam user list [OPTIONS]

  Lists the users in your tenancy. You must specify your tenancy's OCID as the
  value for the compartment ID (remember that the tenancy is simply the root
  compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user list-groups --help
Usage: oci iam user list-groups [OPTIONS]

  Lists the groups for which the specified user is a member. You must specify
  your tenancy's OCID as the value for the compartment ID (remember that the
  tenancy is simply the root compartment). See [Where to Get the Tenancy's
  OCID and User's OCID].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --user-id TEXT                  The OCID of the user. [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit TEXT                    The maximum number of items to return in a
                                  paginated "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password --help
Usage: oci iam user swift-password [OPTIONS] COMMAND [ARGS]...

  Swift is the OpenStack object storage service. A `SwiftPassword` is an
  Oracle-provided password for using a Swift client with the Oracle Bare Metal
  Cloud Services Object Storage Service. This password is associated with the
  user's Console login. Swift passwords never expire. A user can have up to
  two Swift passwords at a time.

  **Note:** The password is always an Oracle-generated string; you can't
  change it to a string of your choice.

  For more information, see [Managing User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Swift password for the...
  delete  Deletes the specified Swift password for the...
  list    Lists the Swift passwords for the specified...
  update  Updates the specified Swift password's...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password create --help
Usage: oci iam user swift-password create [OPTIONS]

  Creates a new Swift password for the specified user. For information about
  what Swift passwords are for, see [Managing User Credentials].

  You must specify a *description* for the Swift password (although it can be
  an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateSwiftPassword].

  Every user has permission to create a Swift password for *their own user
  ID*. An administrator in your organization does not need to write a policy
  to give users this ability. To compare, administrators who have permission
  to the tenancy can use this operation to create a Swift password for any
  user, including themselves.

Options:
  --description TEXT              The description you assign to the Swift
                                  password during creation. Does not have to be
                                  unique, and it's changeable. [required]
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password delete --help
Usage: oci iam user swift-password delete [OPTIONS]

  Deletes the specified Swift password for the specified user.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --swift-password-id TEXT        The OCID of the Swift password. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password list --help
Usage: oci iam user swift-password list [OPTIONS]

  Lists the Swift passwords for the specified user. The returned object
  contains the password's OCID, but not the password itself. The actual
  password is returned only upon creation.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password update --help
Usage: oci iam user swift-password update [OPTIONS]

  Updates the specified Swift password's description.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --swift-password-id TEXT        The OCID of the Swift password. [required]
  --description TEXT              The description you assign to the Swift
                                  password. Does not have to be unique, and it's
                                  changeable.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user ui-password --help
Usage: oci iam user ui-password [OPTIONS] COMMAND [ARGS]...

  A text password that enables a user to sign in to the Console, the user
  interface for interacting with Oracle Bare Metal Cloud Services.

  For more information about user credentials, see [User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create-or-reset  Creates a new Console one-time password for...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user ui-password create-or-reset --help
Usage: oci iam user ui-password create-or-reset [OPTIONS]

  Creates a new Console one-time password for the specified user. For more
  information about user credentials, see [User Credentials].

  Use this operation after creating a new user, or if a user forgets their
  password. The new one-time password is returned to you in the response, and
  you must securely deliver it to the user. They'll be prompted to change this
  password the next time they sign in to the Console. If they don't change it
  within 7 days, the password will expire and you'll need to create a new one-
  time password for the user.

  **Note:** The user's Console login is the unique name you specified when you
  created the user (see [CreateUser]).

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user update --help
Usage: oci iam user update [OPTIONS]

  Updates the description of the specified user.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --description TEXT              The description you assign to the user. Does
                                  not have to be unique, and it's changeable.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user update-user-state --help
Usage: oci iam user update-user-state [OPTIONS]

  Updates the state of the specified user.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --blocked BOOLEAN               Update state to blocked or unblocked. Only
                                  "false" is supported (for changing the state
                                  to unblocked).
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network --help
Usage: oci network [OPTIONS] COMMAND [ARGS]...

  Networking Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  cpe                An object you create when setting up an IPSec...
  dhcp-options       A set of DHCP options.
  drg                A Dynamic Routing Gateway (DRG), which is a...
  drg-attachment     A link between a DRG and VCN.
  internet-gateway   Represents a router that connects the edge of...
  ip-sec-connection  A connection between a DRG and CPE.
  private-ip         A *private IP* is a conceptual term that...
  route-table        A collection of `RouteRule` objects, which...
  security-list      A set of virtual firewall rules for your VCN.
  subnet             A logical subdivision of a VCN.
  vcn                A Virtual Cloud Network (VCN).
  vnic               A virtual network interface card.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe --help
Usage: oci network cpe [OPTIONS] COMMAND [ARGS]...

  An object you create when setting up an IPSec VPN between your on-premises
  network and VCN. The `Cpe` is a virtual representation of your Customer-
  Premises Equipment, which is the actual router on-premises at your site at
  your end of the IPSec VPN connection. For more information, see [Overview of
  the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new virtual Customer-Premises...
  delete  Deletes the specified CPE object.
  get     Gets the specified CPE's information.
  list    Lists the Customer-Premises Equipment objects...
  update  Updates the specified CPE's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe create --help
Usage: oci network cpe create [OPTIONS]

  Creates a new virtual Customer-Premises Equipment (CPE) object in the
  specified compartment. For more information, see [IPSec VPNs].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the CPE to reside. Notice that the CPE doesn't
  have to be in the same compartment as the IPSec connection or other
  Networking Service components. If you're not sure which compartment to use,
  put the CPE in the same compartment as the DRG. For more information about
  compartments and access control, see [Overview of the IAM Service]. For
  information about OCIDs, see [Resource Identifiers].

  You must provide the public IP address of your on-premises router. See
  [Configuring Your On-Premises Router for an IPSec VPN].

  You may optionally specify a *display name* for the CPE, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  CPE. [required]
  --ip-address TEXT               The public IP address of the on-premises
                                  router.
                                  
                                  Example: `143.19.23.16` [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe delete --help
Usage: oci network cpe delete [OPTIONS]

  Deletes the specified CPE object. The CPE must not be connected to a DRG.
  This is an asynchronous operation. The CPE's `lifecycleState` will change to
  TERMINATING temporarily until the CPE is completely removed.

Options:
  --cpe-id TEXT                   The OCID of the CPE. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe get --help
Usage: oci network cpe get [OPTIONS]

  Gets the specified CPE's information.

Options:
  --cpe-id TEXT                   The OCID of the CPE. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe list --help
Usage: oci network cpe list [OPTIONS]

  Lists the Customer-Premises Equipment objects (CPEs) in the specified
  compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe update --help
Usage: oci network cpe update [OPTIONS]

  Updates the specified CPE's display name. Avoid entering confidential
  information.

Options:
  --cpe-id TEXT                   The OCID of the CPE. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options --help
Usage: oci network dhcp-options [OPTIONS] COMMAND [ARGS]...

  A set of DHCP options. Used by the VCN to automatically provide
  configuration information to the instances when they boot up. There are two
  options you can set:

  - [DhcpDnsOption]: Lets you specify how DNS (hostname resolution) is handled
  in the subnets in your VCN.

  - [DhcpSearchDomainOption]: Lets you specify a search domain name to use for
  DNS queries.

  For more information, see  [DNS in Your Virtual Cloud Network] and [DHCP
  Options].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new set of DHCP options for the...
  delete  Deletes the specified set of DHCP options,...
  get     Gets the specified set of DHCP options.
  list    Lists the sets of DHCP options in the...
  update  Updates the specified set of DHCP options.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options create --help
Usage: oci network dhcp-options create [OPTIONS]

  Creates a new set of DHCP options for the specified VCN. For more
  information, see [DhcpOptions].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the set of DHCP options to reside. Notice that
  the set of options doesn't have to be in the same compartment as the VCN,
  subnets, or other Networking Service components. If you're not sure which
  compartment to use, put the set of DHCP options in the same compartment as
  the VCN. For more information about compartments and access control, see
  [Overview of the IAM Service]. For information about OCIDs, see [Resource
  Identifiers].

  You may optionally specify a *display name* for the set of DHCP options,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the set
                                  of DHCP options. [required]
  --options TEXT                  A set of DHCP options. [required] This must be
                                  provided in JSON format. See API reference for
                                  additional help.
                                  
                                  Example: '[{"type":
                                  "DomainNameServer", "customDnsServers":
                                  ["202.44.61.9"], "serverType":
                                  "CustomDnsServer"}]'
  --vcn-id TEXT                   The OCID of the VCN the set of DHCP options
                                  belongs to. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options delete --help
Usage: oci network dhcp-options delete [OPTIONS]

  Deletes the specified set of DHCP options, but only if it's not associated
  with a subnet. You can't delete a VCN's default set of DHCP options.

  This is an asynchronous operation. The state of the set of options will
  switch to TERMINATING temporarily until the set is completely removed.

Options:
  --dhcp-id TEXT                  The OCID for the set of DHCP options.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options get --help
Usage: oci network dhcp-options get [OPTIONS]

  Gets the specified set of DHCP options.

Options:
  --dhcp-id TEXT                  The OCID for the set of DHCP options.
                                  [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options list --help
Usage: oci network dhcp-options list [OPTIONS]

  Lists the sets of DHCP options in the specified VCN and specified
  compartment. The response includes the default set of options that
  automatically comes with each VCN, plus any other sets you've created.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options update --help
Usage: oci network dhcp-options update [OPTIONS]

  Updates the specified set of DHCP options. You can update the display name
  or the options themselves. Avoid entering confidential information.

  Note that the `options` object you provide replaces the entire existing set
  of options.

Options:
  --dhcp-id TEXT                  The OCID for the set of DHCP options.
                                  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --options TEXT                  This must be provided in JSON format. See API
                                  reference for additional help.
                                  
                                  Example:
                                  '[{"type": "DomainNameServer",
                                  "customDnsServers": ["202.44.61.9"],
                                  "serverType": "CustomDnsServer"}]'
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg --help
Usage: oci network drg [OPTIONS] COMMAND [ARGS]...

  A Dynamic Routing Gateway (DRG), which is a virtual router that provides a
  path for private network traffic between your VCN and your existing network.
  You use it with other Networking Service components to create an IPSec VPN
  or a connection that uses Oracle Bare Metal Cloud Services FastConnect. For
  more information, see [Overview of the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Dynamic Routing Gateway (DRG)...
  delete  Deletes the specified DRG.
  get     Gets the specified DRG's information.
  list    Lists the DRGs in the specified compartment.
  update  Updates the specified DRG's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg create --help
Usage: oci network drg create [OPTIONS]

  Creates a new Dynamic Routing Gateway (DRG) in the specified compartment.
  For more information, see [Dynamic Routing Gateways (DRGs)].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the DRG to reside. Notice that the DRG doesn't
  have to be in the same compartment as the VCN, the DRG attachment, or other
  Networking Service components. If you're not sure which compartment to use,
  put the DRG in the same compartment as the VCN. For more information about
  compartments and access control, see [Overview of the IAM Service]. For
  information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the DRG, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  DRG. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg delete --help
Usage: oci network drg delete [OPTIONS]

  Deletes the specified DRG. The DRG must not be attached to a VCN or be
  connected to your on-premise network. Also, there must not be a route table
  that lists the DRG as a target. This is an asynchronous operation. The DRG's
  `lifecycleState` will change to TERMINATING temporarily until the DRG is
  completely removed.

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg get --help
Usage: oci network drg get [OPTIONS]

  Gets the specified DRG's information.

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg list --help
Usage: oci network drg list [OPTIONS]

  Lists the DRGs in the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg update --help
Usage: oci network drg update [OPTIONS]

  Updates the specified DRG's display name. Avoid entering confidential
  information.

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment --help
Usage: oci network drg-attachment [OPTIONS] COMMAND [ARGS]...

  A link between a DRG and VCN. For more information, see [Overview of the
  Networking Service].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Attaches the specified DRG to the specified...
  delete  Detaches a DRG from a VCN by deleting the...
  get     Gets the information for the specified...
  list    Lists the `DrgAttachment` objects for the...
  update  Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment create --help
Usage: oci network drg-attachment create [OPTIONS]

  Attaches the specified DRG to the specified VCN. A VCN can be attached to
  only one DRG at a time, and vice versa. The response includes a
  `DrgAttachment` object with its own OCID. For more information about DRGs,
  see [Dynamic Routing Gateways (DRGs)].

  You may optionally specify a *display name* for the attachment, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

  For the purposes of access control, the DRG attachment is automatically
  placed into the same compartment as the VCN. For more information about
  compartments and access control, see [Overview of the IAM Service].

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique. Avoid entering confidential
                                  information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment delete --help
Usage: oci network drg-attachment delete [OPTIONS]

  Detaches a DRG from a VCN by deleting the corresponding `DrgAttachment`.
  This is an asynchronous operation. The attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --drg-attachment-id TEXT        The OCID of the DRG attachment. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment get --help
Usage: oci network drg-attachment get [OPTIONS]

  Gets the information for the specified `DrgAttachment`.

Options:
  --drg-attachment-id TEXT        The OCID of the DRG attachment. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment list --help
Usage: oci network drg-attachment list [OPTIONS]

  Lists the `DrgAttachment` objects for the specified compartment. You can
  filter the results by VCN or DRG.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN.
  --drg-id TEXT                   The OCID of the DRG.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment update --help
Usage: oci network drg-attachment update [OPTIONS]

  Updates the display name for the specified `DrgAttachment`. Avoid entering
  confidential information.

Options:
  --drg-attachment-id TEXT        The OCID of the DRG attachment. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway --help
Usage: oci network internet-gateway [OPTIONS] COMMAND [ARGS]...

  Represents a router that connects the edge of a VCN with the Internet. For
  an example scenario that uses an Internet Gateway, see [Typical Networking
  Service Scenarios].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Internet Gateway for the...
  delete  Deletes the specified Internet Gateway.
  get     Gets the specified Internet Gateway's...
  list    Lists the Internet Gateways in the specified...
  update  Updates the specified Internet Gateway.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway create --help
Usage: oci network internet-gateway create [OPTIONS]

  Creates a new Internet Gateway for the specified VCN. For more information,
  see [Connectivity to the Internet].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the Internet Gateway to reside. Notice that the
  Internet Gateway doesn't have to be in the same compartment as the VCN or
  other Networking Service components. If you're not sure which compartment to
  use, put the Internet Gateway in the same compartment with the VCN. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the Internet Gateway,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

  For traffic to flow between a subnet and an Internet Gateway, you must
  create a route rule accordingly in the subnet's route table (for example,
  0.0.0.0/0 > Internet Gateway). See [UpdateRouteTable].

  You must specify whether the Internet Gateway is enabled when you create it.
  If it's disabled, that means no traffic will flow to/from the internet even
  if there's a route rule that enables that traffic. You can later use
  [UpdateInternetGateway] to easily disable/enable the gateway without
  changing the route rule.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  Internet Gateway. [required]
  --is-enabled BOOLEAN            Whether the gateway is enabled upon creation.
                                  [required]
  --vcn-id TEXT                   The OCID of the VCN the Internet Gateway is
                                  attached to. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway delete --help
Usage: oci network internet-gateway delete [OPTIONS]

  Deletes the specified Internet Gateway. The Internet Gateway does not have
  to be disabled, but there must not be a route table that lists it as a
  target.

  This is an asynchronous operation. The gateway's `lifecycleState` will
  change to TERMINATING temporarily until the gateway is completely removed.

Options:
  --ig-id TEXT                    The OCID of the Internet Gateway. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway get --help
Usage: oci network internet-gateway get [OPTIONS]

  Gets the specified Internet Gateway's information.

Options:
  --ig-id TEXT                    The OCID of the Internet Gateway. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway list --help
Usage: oci network internet-gateway list [OPTIONS]

  Lists the Internet Gateways in the specified VCN and the specified
  compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway update --help
Usage: oci network internet-gateway update [OPTIONS]

  Updates the specified Internet Gateway. You can disable/enable it, or change
  its display name. Avoid entering confidential information.

  If the gateway is disabled, that means no traffic will flow to/from the
  internet even if there's a route rule that enables that traffic.

Options:
  --ig-id TEXT                    The OCID of the Internet Gateway. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --is-enabled BOOLEAN            Whether the gateway is enabled.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection --help
Usage: oci network ip-sec-connection [OPTIONS] COMMAND [ARGS]...

  A connection between a DRG and CPE. This connection consists of multiple
  IPSec tunnels. Creating this connection is one of the steps required when
  setting up an IPSec VPN. For more information, see [Overview of the
  Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Creates a new IPSec connection between the...
  delete      Deletes the specified IPSec connection.
  get         Gets the specified IPSec connection's basic...
  get-config  Gets the configuration information for the...
  get-status  Gets the status of the specified IPSec...
  list        Lists the IPSec connections for the specified...
  update      Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection create --help
Usage: oci network ip-sec-connection create [OPTIONS]

  Creates a new IPSec connection between the specified DRG and CPE. For more
  information, see [IPSec VPNs].

  In the request, you must include at least one static route to the CPE object
  (you're allowed a maximum of 10). For example: 10.0.8.0/16.

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the IPSec connection to reside. Notice that the
  IPSec connection doesn't have to be in the same compartment as the DRG, CPE,
  or other Networking Service components. If you're not sure which compartment
  to use, put the IPSec connection in the same compartment as the DRG. For
  more information about compartments and access control, see [Overview of the
  IAM Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the IPSec connection,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

  After creating the IPSec connection, you need to configure your on-premises
  router with tunnel-specific information returned by
  [GetIPSecConnectionDeviceConfig]. For each tunnel, that operation gives you
  the IP address of Oracle's VPN headend and the shared secret (that is, the
  pre-shared key). For more information, see [Configuring Your On-Premises
  Router for an IPSec VPN].

  To get the status of the tunnels (whether they're up or down), use
  [GetIPSecConnectionDeviceStatus].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  IPSec connection. [required]
  --cpe-id TEXT                   The OCID of the CPE. [required]
  --drg-id TEXT                   The OCID of the DRG. [required]
  --static-routes TEXT            Static routes to the CPE. At least one route
                                  must be included. The CIDR must not be a
                                  multicast address or class E address. This
                                  must be provided in JSON format.
                                  
                                  Example:
                                  '["10.0.0.0/16"]'
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection delete --help
Usage: oci network ip-sec-connection delete [OPTIONS]

  Deletes the specified IPSec connection. If your goal is to disable the IPSec
  VPN between your VCN and on-premises network, it's easiest to simply detach
  the DRG but keep all the IPSec VPN components intact. If you were to delete
  all the components and then later need to create an IPSec VPN again, you
  would need to configure your on-premises router again with the new
  information returned from [CreateIPSecConnection].

  This is an asynchronous operation. The connection's `lifecycleState` will
  change to TERMINATING temporarily until the connection is completely
  removed.

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection get --help
Usage: oci network ip-sec-connection get [OPTIONS]

  Gets the specified IPSec connection's basic information, including the
  static routes for the on-premises router. If you want the status of the
  connection (whether it's up or down), use [GetIPSecConnectionDeviceStatus].

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection get-config --help
Usage: oci network ip-sec-connection get-config [OPTIONS]

  Gets the configuration information for the specified IPSec connection. For
  each tunnel, the response includes the IP address of Oracle's VPN headend
  and the shared secret.

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection get-status --help
Usage: oci network ip-sec-connection get-status [OPTIONS]

  Gets the status of the specified IPSec connection (whether it's up or down).

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection list --help
Usage: oci network ip-sec-connection list [OPTIONS]

  Lists the IPSec connections for the specified compartment. You can filter
  the results by DRG or CPE.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --drg-id TEXT                   The OCID of the DRG.
  --cpe-id TEXT                   The OCID of the CPE.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection update --help
Usage: oci network ip-sec-connection update [OPTIONS]

  Updates the display name for the specified IPSec connection. Avoid entering
  confidential information.

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip --help
Usage: oci network private-ip [OPTIONS] COMMAND [ARGS]...

  A *private IP* is a conceptual term that refers to a private IP address and
  related properties. The `privateIp` object is the API representation of a
  private IP.

  Each instance has a *primary private IP* that is automatically created and
  assigned to the primary VNIC during instance launch. If you add a secondary
  VNIC to the instance, it also automatically gets a primary private IP. You
  can't remove a primary private IP from its VNIC. The primary private IP is
  automatically deleted when the VNIC is terminated.

  You can add *secondary private IPs* to a VNIC after it's created. For more
  information, see the `privateIp` operations and also [IP Addresses].

  **Note:** Only [ListPrivateIps] and [GetPrivateIp] work with *primary*
  private IPs. To create and update primary private IPs, you instead work with
  instance and VNIC operations. For example, a primary private IP's properties
  come from the values you specify in [CreateVnicDetails] when calling either
  [LaunchInstance] or [AttachVnic]. To update the hostname for a primary
  private IP, you use [UpdateVnic].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Unassigns and deletes the specified private...
  get     Gets the specified private IP.
  list    Lists the [PrivateIp] objects based on one of...
  update  Updates the specified private IP.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip delete --help
Usage: oci network private-ip delete [OPTIONS]

  Unassigns and deletes the specified private IP. You must specify the
  object's OCID. The private IP address is returned to the subnet's pool of
  available addresses.

  This operation cannot be used with primary private IPs, which are
  automatically unassigned and deleted when the VNIC is terminated.

  **Important:** If a secondary private IP is the [target of a route rule],
  unassigning it from the VNIC causes that route rule to blackhole and the
  traffic will be dropped.

Options:
  --private-ip-id TEXT            The private IP's OCID. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip get --help
Usage: oci network private-ip get [OPTIONS]

  Gets the specified private IP. You must specify the object's OCID.
  Alternatively, you can get the object by using [ListPrivateIps] with the
  private IP address (for example, 10.0.3.3) and subnet OCID.

Options:
  --private-ip-id TEXT            The private IP's OCID. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip list --help
Usage: oci network private-ip list [OPTIONS]

  Lists the [PrivateIp] objects based on one of these filters:

      - Subnet OCID.
      - VNIC OCID.
      - Both private IP address and subnet OCID: This lets you get a `privateIP` object
        based on its private IP address (for example, 10.0.3.3)  and not its OCID.
        For comparison, [GetPrivateIp] requires the OCID.

  If you're listing all the private IPs associated with a given subnet or
  VNIC, the response includes both primary and secondary private IPs.

Options:
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --ip-address TEXT               The private IP address of the `privateIp`
                                  object.
                                  
                                  Example: `10.0.3.3`
  --subnet-id TEXT                The OCID of the subnet.
  --vnic-id TEXT                  The OCID of the VNIC.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip update --help
Usage: oci network private-ip update [OPTIONS]

  Updates the specified private IP. You must specify the object's OCID. Use
  this operation if you want to:

      - Change the display name for a secondary private IP.
      - Change the hostname for a secondary private IP.

  To move a secondary private IP to another VNIC, use the `bcms network vnic
  assign-private-ip` command with the --unassign-if-already-assigned switch.

  This operation cannot be used with primary private IPs. To update the
  hostname for the primary IP on a VNIC, use [UpdateVnic].

Options:
  --private-ip-id TEXT            The private IP's OCID. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --hostname-label TEXT           The hostname for the private IP. Used for DNS.
                                  The value is the hostname portion of the
                                  private IP's fully qualified domain name
                                  (FQDN) (for example, `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123].
                                  
                                  For
                                  more information, see [DNS in Your Virtual
                                  Cloud Network].
                                  
                                  Example: `bminstance-1`
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table --help
Usage: oci network route-table [OPTIONS] COMMAND [ARGS]...

  A collection of `RouteRule` objects, which are used to route packets based
  on destination IP to a particular network entity. For more information, see
  [Overview of the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new route table for the specified...
  delete  Deletes the specified route table, but only...
  get     Gets the specified route table's information.
  list    Lists the route tables in the specified VCN...
  update  Updates the specified route table's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table create --help
Usage: oci network route-table create [OPTIONS]

  Creates a new route table for the specified VCN. In the request you must
  also include at least one route rule for the new route table. For
  information on the number of rules you can have in a route table, see
  [Service Limits]. For general information about route tables in your VCN and
  the types of targets you can use in route rules, see [Route Tables].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the route table to reside. Notice that the route
  table doesn't have to be in the same compartment as the VCN, subnets, or
  other Networking Service components. If you're not sure which compartment to
  use, put the route table in the same compartment as the VCN. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the route table, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  route table. [required]
  --route-rules TEXT              The collection of rules used for routing
                                  destination IPs to network devices. [required]
                                  This must be provided in JSON format. See API
                                  reference for additional help.
                                  
                                  Example: '[{"c
                                  idrBlock":"0.0.0.0/0","networkEntityId":"ocid1
                                  .internetgateway.oc1.phx.aaaaaaaaxtfqb2srw7hoi
                                  5cmdum4n6ow2xm2zhrzqqypmlteiiebtmvl75ya"}]'
  --vcn-id TEXT                   The OCID of the VCN the route table belongs
                                  to. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table delete --help
Usage: oci network route-table delete [OPTIONS]

  Deletes the specified route table, but only if it's not associated with a
  subnet. You can't delete a VCN's default route table.

  This is an asynchronous operation. The route table's `lifecycleState` will
  change to TERMINATING temporarily until the route table is completely
  removed.

Options:
  --rt-id TEXT                    The OCID of the route table. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table get --help
Usage: oci network route-table get [OPTIONS]

  Gets the specified route table's information.

Options:
  --rt-id TEXT                    The OCID of the route table. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table list --help
Usage: oci network route-table list [OPTIONS]

  Lists the route tables in the specified VCN and specified compartment. The
  response includes the default route table that automatically comes with each
  VCN, plus any route tables you've created.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table update --help
Usage: oci network route-table update [OPTIONS]

  Updates the specified route table's display name or route rules. Avoid
  entering confidential information.

  Note that the `routeRules` object you provide replaces the entire existing
  set of rules.

Options:
  --rt-id TEXT                    The OCID of the route table. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --route-rules TEXT              The collection of rules used for routing
                                  destination IPs to network devices. This must
                                  be provided in JSON format. See API reference
                                  for additional help.
                                  
                                  Example: '[{"cidrBlock":
                                  "0.0.0.0/0","networkEntityId":"ocid1.internetg
                                  ateway.oc1.phx.aaaaaaaaxtfqb2srw7hoi5cmdum4n6o
                                  w2xm2zhrzqqypmlteiiebtmvl75ya"}]'
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list --help
Usage: oci network security-list [OPTIONS] COMMAND [ARGS]...

  A set of virtual firewall rules for your VCN. Security lists are configured
  at the subnet level, but the rules are applied to the ingress and egress
  traffic for the individual instances in the subnet. The rules can be
  stateful or stateless. For more information, see [Security Lists].

  **Important:** Oracle Bare Metal Cloud Services images automatically include
  firewall rules (for example, Linux iptables, Windows firewall). If there are
  issues with some type of access to an instance, make sure both the security
  lists associated with the instance's subnet and the instance's firewall
  rules are set correctly.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new security list for the specified...
  delete  Deletes the specified security list, but only...
  get     Gets the specified security list's...
  list    Lists the security lists in the specified VCN...
  update  Updates the specified security list's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list create --help
Usage: oci network security-list create [OPTIONS]

  Creates a new security list for the specified VCN. For more information
  about security lists, see [Security Lists]. For information on the number of
  rules you can have in a security list, see [Service Limits].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the security list to reside. Notice that the
  security list doesn't have to be in the same compartment as the VCN,
  subnets, or other Networking Service components. If you're not sure which
  compartment to use, put the security list in the same compartment as the
  VCN. For more information about compartments and access control, see
  [Overview of the IAM Service]. For information about OCIDs, see [Resource
  Identifiers].

  You may optionally specify a *display name* for the security list, otherwise
  a default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  security list. [required]
  --egress-security-rules TEXT    Rules for allowing egress IP packets.
                                  [required] This must be provided in JSON
                                  format. See API reference for additional help.
                                  Example: '[{"destination": "10.0.2.0/24",
                                  "protocol": "6", "isStateless": true,
                                  "tcpOptions": {"destinationPortRange": {"max":
                                  1521, "min": 1521}, "sourcePortRange": {"max":
                                  1521, "min": 1521}}}]'
  --ingress-security-rules TEXT   Rules for allowing ingress IP packets.
                                  [required] This must be provided in JSON
                                  format. See API reference for additional help.
                                  Example: '[{"source": "10.0.2.0/24",
                                  "protocol": "6", "isStateless": true,
                                  "tcpOptions": {"destinationPortRange": {"max":
                                  1521, "min": 1521}, "sourcePortRange": {"max":
                                  1521, "min": 1521}}}]'
  --vcn-id TEXT                   The OCID of the VCN the security list belongs
                                  to. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list delete --help
Usage: oci network security-list delete [OPTIONS]

  Deletes the specified security list, but only if it's not associated with a
  subnet. You can't delete a VCN's default security list.

  This is an asynchronous operation. The security list's `lifecycleState` will
  change to TERMINATING temporarily until the security list is completely
  removed.

Options:
  --security-list-id TEXT         The OCID of the security list. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list get --help
Usage: oci network security-list get [OPTIONS]

  Gets the specified security list's information.

Options:
  --security-list-id TEXT         The OCID of the security list. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list list --help
Usage: oci network security-list list [OPTIONS]

  Lists the security lists in the specified VCN and compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list update --help
Usage: oci network security-list update [OPTIONS]

  Updates the specified security list's display name or rules. Avoid entering
  confidential information.

  Note that the `egressSecurityRules` or `ingressSecurityRules` objects you
  provide replace the entire existing objects.

Options:
  --security-list-id TEXT         The OCID of the security list. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --egress-security-rules TEXT    Rules for allowing egress IP packets. This
                                  must be provided in JSON format. See API
                                  reference for additional help.
                                  
                                  Example:
                                  '[{"destination": "10.0.2.0/24", "protocol":
                                  "6", "isStateless": true, "tcpOptions":
                                  {"destinationPortRange": {"max": 1521, "min":
                                  1521}, "sourcePortRange": {"max": 1521, "min":
                                  1521}}}]'
  --ingress-security-rules TEXT   Rules for allowing ingress IP packets. This
                                  must be provided in JSON format. See API
                                  reference for additional help.
                                  
                                  Example:
                                  '[{"source": "10.0.2.0/24", "protocol": "6",
                                  "isStateless": true, "tcpOptions":
                                  {"destinationPortRange": {"max": 1521, "min":
                                  1521}, "sourcePortRange": {"max": 1521, "min":
                                  1521}}}]'
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet --help
Usage: oci network subnet [OPTIONS] COMMAND [ARGS]...

  A logical subdivision of a VCN. Each subnet exists in a single Availability
  Domain and consists of a contiguous range of IP addresses that do not
  overlap with other subnets in the VCN. Example: 172.16.1.0/24. For more
  information, see [Overview of the Networking Service] and [VCNs and
  Subnets].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new subnet in the specified VCN.
  delete  Deletes the specified subnet, but only if...
  get     Gets the specified subnet's information.
  list    Lists the subnets in the specified VCN and...
  update  Updates the specified subnet's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet create --help
Usage: oci network subnet create [OPTIONS]

  Creates a new subnet in the specified VCN. You can't change the size of the
  subnet after creation, so it's important to think about the size of subnets
  you need before creating them. For more information, see [VCNs and Subnets].
  For information on the number of subnets you can have in a VCN, see [Service
  Limits].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the subnet to reside. Notice that the subnet
  doesn't have to be in the same compartment as the VCN, route tables, or
  other Networking Service components. If you're not sure which compartment to
  use, put the subnet in the same compartment as the VCN. For more information
  about compartments and access control, see [Overview of the IAM Service].
  For information about OCIDs, see [Resource Identifiers].

  You may optionally associate a route table with the subnet. If you don't,
  the subnet will use the VCN's default route table. For more information
  about route tables, see [Route Tables].

  You may optionally associate a security list with the subnet. If you don't,
  the subnet will use the VCN's default security list. For more information
  about security lists, see [Security Lists].

  You may optionally associate a set of DHCP options with the subnet. If you
  don't, the subnet will use the VCN's default set. For more information about
  DHCP options, see [DHCP Options].

  You may optionally specify a *display name* for the subnet, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

  You can also add a DNS label for the subnet, which is required if you want
  the Internet and VCN Resolver to resolve hostnames for instances in the
  subnet. For more information, see [DNS in Your Virtual Cloud Network].

Options:
  --availability-domain TEXT      The Availability Domain to contain the subnet.
                                  Example: `Uocm:PHX-AD-1` [required]
  --cidr-block TEXT               The CIDR IP address range of the subnet.
                                  Example: `172.16.1.0/24` [required]
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  subnet. [required]
  --vcn-id TEXT                   The OCID of the VCN to contain the subnet.
                                  [required]
  --dhcp-options-id TEXT          The OCID of the set of DHCP options the subnet
                                  will use. If you don't provide a value, the
                                  subnet will use the VCN's default set of DHCP
                                  options.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --dns-label TEXT                A DNS label for the subnet, used in
                                  conjunction with the VNIC's hostname and VCN's
                                  DNS label to form a fully qualified domain
                                  name (FQDN) for each VNIC within this subnet
                                  (for example,
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be an alphanumeric string that begins
                                  with a letter and is unique within the VCN.
                                  The value cannot be changed.
                                  
                                  This value must
                                  be set if you want to use the Internet and VCN
                                  Resolver to resolve the hostnames of instances
                                  in the subnet. It can only be set if the VCN
                                  itself was created with a DNS label.
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
                                  
                                  Example: `subnet123`
  --prohibit-public-ip-on-vnic BOOLEAN
                                  Whether VNICs within this subnet can have
                                  public IP addresses. Defaults to false, which
                                  means VNICs created in this subnet will
                                  automatically be assigned public IP addresses
                                  unless specified otherwise during instance
                                  launch (with the `--assign-public-ip` flag).
                                  If `--prohibit-public-ip-on-vnic` is set to
                                  true, VNICs created in this subnet cannot have
                                  public IP addresses (i.e., it's a private
                                  subnet).
                                  
                                  Example: `true`
  --route-table-id TEXT           The OCID of the route table the subnet will
                                  use. If you don't provide a value, the subnet
                                  will use the VCN's default route table.
  --security-list-ids TEXT        OCIDs for the security lists to associate with
                                  the subnet. If you don't provide a value, the
                                  VCN's default security list will be associated
                                  with the subnet. Remember that security lists
                                  are associated at the subnet level, but the
                                  rules are applied to the individual VNICs in
                                  the subnet. This must be provided in JSON
                                  format. See API reference for additional help.
                                  Example: '["ocid1.securitylist.oc1.phx.aaaaaaa
                                  adyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhz
                                  icnzhyq"]'
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet delete --help
Usage: oci network subnet delete [OPTIONS]

  Deletes the specified subnet, but only if there are no instances in the
  subnet. This is an asynchronous operation. The subnet's `lifecycleState`
  will change to TERMINATING temporarily. If there are any instances in the
  subnet, the state will instead change back to AVAILABLE.

Options:
  --subnet-id TEXT                The OCID of the subnet. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet get --help
Usage: oci network subnet get [OPTIONS]

  Gets the specified subnet's information.

Options:
  --subnet-id TEXT                The OCID of the subnet. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet list --help
Usage: oci network subnet list [OPTIONS]

  Lists the subnets in the specified VCN and the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet update --help
Usage: oci network subnet update [OPTIONS]

  Updates the specified subnet's display name. Avoid entering confidential
  information.

Options:
  --subnet-id TEXT                The OCID of the subnet. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn --help
Usage: oci network vcn [OPTIONS] COMMAND [ARGS]...

  A Virtual Cloud Network (VCN). For more information, see [Overview of the
  Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Virtual Cloud Network (VCN).
  delete  Deletes the specified VCN.
  get     Gets the specified VCN's information.
  list    Lists the Virtual Cloud Networks (VCNs) in...
  update  Updates the specified VCN's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn create --help
Usage: oci network vcn create [OPTIONS]

  Creates a new Virtual Cloud Network (VCN). For more information, see [VCNs
  and Subnets].

  For the VCN you must specify a single, contiguous IPv4 CIDR block. Oracle
  recommends using one of the private IP address ranges specified in [RFC
  1918] (10.0.0.0/8, 172.16/12, and 192.168/16). Example: 172.16.0.0/16. The
  CIDR block can range from /16 to /30, and it must not overlap with your on-
  premises network. You can't change the size of the VCN after creation.

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the VCN to reside. Consult an Oracle Bare Metal
  Cloud Services administrator in your organization if you're not sure which
  compartment to use. Notice that the VCN doesn't have to be in the same
  compartment as the subnets or other Networking Service components. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the VCN, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

  You can also add a DNS label for the VCN, which is required if you want the
  instances to use the Interent and VCN Resolver option for DNS in the VCN.
  For more information, see [DNS in Your Virtual Cloud Network].

  The VCN automatically comes with a default route table, default security
  list, and default set of DHCP options. The OCID for each is returned in the
  response. You can't delete these default objects, but you can change their
  contents (that is, change the route rules, security list rules, and so on).

  The VCN and subnets you create are not accessible until you attach an
  Internet Gateway or set up an IPSec VPN or FastConnect. For more
  information, see [Overview of the Networking Service].

Options:
  --cidr-block TEXT               The CIDR IP address block of the VCN.
                                  Example: `172.16.0.0/16` [required]
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  VCN. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --dns-label TEXT                A DNS label for the VCN, used in conjunction
                                  with the VNIC's hostname and subnet's DNS
                                  label to form a fully qualified domain name
                                  (FQDN) for each VNIC within this subnet (for
                                  example,
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Not required to be unique, but it's a best
                                  practice to set unique DNS labels for VCNs in
                                  your tenancy. Must be an alphanumeric string
                                  that begins with a letter. The value cannot be
                                  changed.
                                  
                                  You must set this value if you want
                                  instances to be able to use hostnames to
                                  resolve other instances in the VCN. Otherwise
                                  the Internet and VCN Resolver will not work.
                                  For more information, see [DNS in Your Virtual
                                  Cloud Network].
                                  
                                  Example: `vcn1`
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn delete --help
Usage: oci network vcn delete [OPTIONS]

  Deletes the specified VCN. The VCN must be empty and have no attached
  gateways. This is an asynchronous operation. The VCN's `lifecycleState` will
  change to TERMINATING temporarily until the VCN is completely removed.

Options:
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn get --help
Usage: oci network vcn get [OPTIONS]

  Gets the specified VCN's information.

Options:
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn list --help
Usage: oci network vcn list [OPTIONS]

  Lists the Virtual Cloud Networks (VCNs) in the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn update --help
Usage: oci network vcn update [OPTIONS]

  Updates the specified VCN's display name. Avoid entering confidential
  information.

Options:
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic --help
Usage: oci network vnic [OPTIONS] COMMAND [ARGS]...

  A virtual network interface card. Each VNIC resides in a subnet in a VCN. An
  instance attaches to a VNIC to obtain a network connection into the VCN
  through that subnet. Each instance has a *primary VNIC* that is
  automatically created and attached during launch. You can add *secondary
  VNICs* to an instance after it's launched. For more information, see
  [Virtual Network Interface Cards (VNICs)].

  Each VNIC has a *primary private IP* that is automatically assigned during
  launch. You can add *secondary private IPs* to a VNIC after it's created.
  For more information, see [CreatePrivateIp] and [IP Addresses].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  assign-private-ip    Assigns a secondary private IP address to the...
  get                  Gets the information for the specified...
  unassign-private-ip  Unassigns a secondary private IP address from...
  update               Updates the specified VNIC.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic assign-private-ip --help
Usage: oci network vnic assign-private-ip [OPTIONS]

  Assigns a secondary private IP address to the specified VNIC. The secondary
  private IP must be in the same subnet as the VNIC. This command can also be
  used to move an existing secondary private IP to the specified VNIC.

  For more information about secondary private IPs, see [Managing IP
  Addresses]

Options:
  --vnic-id TEXT                  The OCID of the VNIC to assign the private IP
                                  to. The VNIC and private IP must be in the
                                  same subnet. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --hostname-label TEXT           The hostname for the private IP. Used for DNS.
                                  The value is the hostname portion of the
                                  private IP's fully qualified domain name
                                  (FQDN) (for example, `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123].
                                  
                                  For
                                  more information, see [DNS in Your Virtual
                                  Cloud Network].
                                  
                                  Example: `bminstance-1`
  --ip-address TEXT               A private IP address of your choice. Must be
                                  an available IP address within the subnet's
                                  CIDR. If you don't specify a value, Oracle
                                  automatically assigns a private IP address
                                  from the subnet.
                                  
                                  Example: `10.0.3.3`
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --unassign-if-already-assigned  Force reassignment of the IP address if it's
                                  already assigned to another VNIC in the
                                  subnet. This is only relevant if an IP address
                                  is associated with this command.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic get --help
Usage: oci network vnic get [OPTIONS]

  Gets the information for the specified virtual network interface card
  (VNIC). You can get the VNIC OCID from the [ListVnicAttachments] operation.

Options:
  --vnic-id TEXT                  The OCID of the VNIC. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic unassign-private-ip --help
Usage: oci network vnic unassign-private-ip [OPTIONS]

  Unassigns a secondary private IP address from a VNIC. After the IP address
  is unassigned, you can assign to another VNIC in the subnet.

  This operation cannot be used with primary private IPs, which are
  automatically unassigned, and then deleted when the VNIC is terminated.

  For more information about secondary private IPs, see [Managing IP
  Addresses]

Options:
  --vnic-id TEXT                  The OCID of the VNIC to unassign the private
                                  IP from. [required]
  --ip-address TEXT               The secondary private IP to unassign from the
                                  VNIC. [required]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic update --help
Usage: oci network vnic update [OPTIONS]

  Updates the specified VNIC.

Options:
  --vnic-id TEXT                  The OCID of the VNIC. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
  --hostname-label TEXT           The hostname for the VNIC's primary private
                                  IP. Used for DNS. The value is the hostname
                                  portion of the primary private IP's fully
                                  qualified domain name (FQDN) (for example,
                                  `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123]. The
                                  value appears in the [Vnic] object and also
                                  the [PrivateIp] object returned by
                                  [ListPrivateIps] and [GetPrivateIp].
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
  --skip-source-dest-check BOOLEAN
                                  Whether the source/destination check is
                                  disabled on the VNIC. Defaults to `false`,
                                  which means the check is performed. For
                                  information about why you would skip the
                                  source/destination check, see [Using a Private
                                  IP as a Route Target].
                                  
                                  Example: `true`
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os --help
Usage: oci os [OPTIONS] COMMAND [ARGS]...

  Object Storage Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  bucket
  multipart
  ns
  object
  preauth-request  Operations on pre-authenticated requests.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket --help
Usage: oci os bucket [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a bucket in the given namespace with...
  delete  Deletes a bucket if it is already empty.
  get     Gets the current representation of the given...
  list    Lists the `BucketSummary`s in a namespace.
  update  Updates a bucket's user-defined metadata.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket create --help
Usage: oci os bucket create [OPTIONS]

  Creates a bucket in the given namespace with a bucket name and optional
  user-defined metadata.

  Example:     oci os bucket create -ns mynamespace --name mybucket
  --compartment-id ocid1.compartment.oc1..aaaaaaaarhifmvrvuqtye5q65flzp3pp2joj
  dc6rck6copzqck3ukcypxfga --metadata '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -c, --compartment-id TEXT       The ID of the compartment in which to create
                                  the bucket. [required]
  --name TEXT                     The name of the bucket.
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --public-access-type [NoPublicAccess|ObjectRead]
                                  The type of public access available on this
                                  bucket. Allows authenticated caller to access
                                  the bucket or contents of this bucket. By
                                  default a bucket is set to NoPublicAccess. It
                                  is treated as NoPublicAccess when this value
                                  is not specified. When the type is
                                  NoPublicAccess the bucket does not allow any
                                  public access. When the type is ObjectRead the
                                  bucket allows public access to the GetObject
                                  operation only.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket delete --help
Usage: oci os bucket delete [OPTIONS]

  Deletes a bucket if it is already empty.

  Example:     oci os bucket delete -ns mynamespace --name mybucket

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  --name TEXT                     The name of the bucket. [required]
  --if-match TEXT                 The entity tag to match.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket get --help
Usage: oci os bucket get [OPTIONS]

  Gets the current representation of the given bucket in the given namespace.

  Example:     oci os bucket get -ns mynamespace --name mybucket

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  --name TEXT                     The name of the bucket. [required]
  --if-match TEXT                 The entity tag to match.
  --if-none-match TEXT            The entity tag to avoid matching.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket list --help
Usage: oci os bucket list [OPTIONS]

  Lists the `BucketSummary`s in a namespace. A `BucketSummary` contains only
  summary fields for the bucket and not fields such as the user-defined
  metadata.

  Example:     oci os bucket list -ns mynamespace --compartment-id ocid1.compa
  rtment.oc1..aaaaaaaarhifmvrvuqtye5q65flzp3pp2jojdc6rck6copzqck3ukcypxfga

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -c, --compartment-id TEXT       The compartment ID to return buckets for.
                                  [required]
  --limit INTEGER                 The maximum number of items to return.
                                  [default: 100]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket update --help
Usage: oci os bucket update [OPTIONS]

  Updates a bucket's user-defined metadata.

  Example:     oci os bucket update -ns mynamespace --name mybucket --metadata
  '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  --name TEXT                     The name of the bucket. [required]
  --if-match TEXT                 The entity tag to match.
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Values will be appended to existing metadata.
                                  To remove a key, set it to null. Example:
                                  '{"key1":"value1","key2":null}'
  --public-access-type [NoPublicAccess|ObjectRead]
                                  The type of public access available on this
                                  bucket. Allows authenticated caller to access
                                  the bucket or contents of this bucket. By
                                  default a bucket is set to NoPublicAccess. It
                                  is treated as NoPublicAccess when this value
                                  is not specified. When the type is
                                  NoPublicAccess the bucket does not allow any
                                  public access. When the type is ObjectRead the
                                  bucket allows public access to the GetObject
                                  operation only.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart --help
Usage: oci os multipart [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  abort  Aborts an uncommitted multipart upload...
  list   List uncommitted multipart uploads for a...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart abort --help
Usage: oci os multipart abort [OPTIONS]

  Aborts an uncommitted multipart upload

  Example:     oci os multipart abort -ns mynamespace -bn mybucket --name
  myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  -on, --object-name TEXT         The name of the object. [required]
  --upload-id TEXT                Upload ID to abort. [required]
  --force                         Abort the existing multipart upload without a
                                  confirmation prompt.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart list --help
Usage: oci os multipart list [OPTIONS]

  List uncommitted multipart uploads for a namespace and bucket

  Example:     oci os multipart list -ns mynamespace -bn mybucket

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --limit INTEGER                 The maximum number of items to return.
                                  [default: 100]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns --help
Usage: oci os ns [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get  Gets the name of the namespace for the user...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns get --help
Usage: oci os ns get [OPTIONS]

  Gets the name of the namespace for the user making the request.

  Example:     oci os ns get

Options:
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object --help
Usage: oci os object [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  bulk-delete    Deletes all objects in a bucket which match...
  bulk-download  Downloads all objects which match the given...
  bulk-upload    Uploads all objects in a given directory and...
  delete         Deletes an object.
  get            Gets the metadata and body of an object.
  head           Gets the user-defined metadata and entity tag...
  list           Lists the objects in a bucket.
  put            Creates a new object or overwrites an...
  resume-put     Resume a previous multipart put.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-delete --help
Usage: oci os object bulk-delete [OPTIONS]

  Deletes all objects in a bucket which match the provided criteria

  Examples
  ========

  Deleting all objects in the bucket
  ----------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket

  Delete all objects that match a given prefix
  --------------------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --prefix myprefix

  You can delete all objects that match a given prefix by specifying the --prefix flag. In the above example, "--prefix myprefix" would
  match object names such as myprefix_textfile1.txt, myprefix_myImage.png etc.

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, then you
  can delete objects at a given level (and all sub levels) by specifying a prefix:

  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/

  This will delete all objects of the form level1/level2/<object name>, level1/level2/leve3/<object name>,
  level1/level2/leve3/level4/<object name> etc.

  Limiting deleted objects using a prefix and delimiter
  -----------------------------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter /

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, and you only
  want to delete objects at a given level of the hierarchy, e.g. example everything of the form level1/level2/<object name> but not
  level1/level2/leve3/<object name> or any other sub-levels, you can specify a prefix and delimiter. Currently the only supported delimiter
  is /

  Previewing what would be deleted
  ----------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --dry-run
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --dry-run
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter / --dry-run

  For any bulk-delete command you can get a list of all objects which would be deleted, but without actually deleting them, by using the --dry-run
  flag

  Do not prompt for delete
  ------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --force
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --force
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter / --force

  By default, the bulk-delete command will prompt you prior to deleting objects. To suppress this prompt, pass the --force option.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Delete all objects with the given prefix. Omit
                                  this parameter to delete all objects in the
                                  bucket.
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  deleted. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --dry-run                       Displays a list of objects which would be
                                  deleted by this command, if it were run
                                  without --dry-run. If --dry-run is passed, no
                                  objects will actually be deleted.
  --force                         Do not ask for confirmation prior to
                                  performing the bulk delete.
  --parallel-operations-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk deletes
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  delete times, but the upload process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --include TEXT                  Only delete objects which match the provided
                                  pattern. Patterns are taken relative to the
                                  bucket root. This option can be provided
                                  mulitple times to match on mulitple patterns.
                                  Supported pattern symbols are:
                                  
                                  *: Matches
                                  everything
                                  ?: Matches any single character
                                  [sequence]: Matches any character in sequence
                                  [!sequence]: Matches any character not in
                                  sequence
  --exclude TEXT                  Only download objects which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the bucket root. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  *:
                                  Matches everything
                                  ?: Matches any single
                                  character
                                  [sequence]: Matches any character in
                                  sequence
                                  [!sequence]: Matches any character
                                  not in sequence
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-download --help
Usage: oci os object bulk-download [OPTIONS]

  Downloads all objects which match the given prefix to a given directory.

  Examples
  ========

  Download all objects in the bucket
  ------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory

  Download all objects that match a given prefix
  ----------------------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix myprefix

  You can download all objects that match a given prefix by specifying the --prefix flag. In the above example, "--prefix myprefix" would
  match object names such as myPrefix_textfile1.txt, myPrefix_myImage.png etc.

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, then you
  can download objects at a given level (and all sub levels) by specifying a prefix:

  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix level1/level2/

  This will download all objects of the form level1/level2/<object name>, level1/level2/leve3/<object name>,
  level1/level2/leve3/level4/<object name> etc.

  Limiting downloaded objects using a prefix and delimiter
  --------------------------------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix level1/level2/ --delimiter /

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, and you only
  want to download objects at a given level of the hierarchy, e.g. example everything of the form level1/level2/<object name> but not
  level1/level2/leve3/<object name> or any other sub-levels, you can specify a prefix and delimiter. Currently the only supported delimiter
  is /

  Overwriting or skipping files
  ------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --overwrite
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --no-overwrite

  If files with the same name as the objects being downloaded already exist in the download directory, you can opt to overwrite them with the
  --overwrite option, or preserve them with the --no-overwrite option.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Retrieve all objects with the given prefix.
                                  Omit this parameter to get all objects in the
                                  bucket
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  returned. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --download-dir TEXT             The directory where retrieved objects will be
                                  placed as files. This directory will be
                                  created if it does not exist. [required]
  --overwrite                     If a file with the same name as an object
                                  already exists in the download directory,
                                  overwrite it. If neither this flag nor --no-
                                  overwrite is specified, you will be prompted
                                  each time a file would be overwritten.
  --no-overwrite                  If a file with the same name as an object
                                  already exists in the download directory, do
                                  not overwite it. If neither this flag nor
                                  --overwrite is specified, you will be prompted
                                  each time a file would be overwritten
  --parallel-operations-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk downloads
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  download times, but the upload process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --include TEXT                  Only download objects which match the provided
                                  pattern. Patterns are taken relative to the
                                  DOWNLOAD directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  *:
                                  Matches everything
                                  ?: Matches any single
                                  character
                                  [sequence]: Matches any character in
                                  sequence
                                  [!sequence]: Matches any character
                                  not in sequence
  --exclude TEXT                  Only download objects which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the DOWNLOAD directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  *:
                                  Matches everything
                                  ?: Matches any single
                                  character
                                  [sequence]: Matches any character in
                                  sequence
                                  [!sequence]: Matches any character
                                  not in sequence
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-upload --help
Usage: oci os object bulk-upload [OPTIONS]

  Uploads all objects in a given directory and all subdirectories.

  Examples
  ========

  Upload all files from a given directory
  -----------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory

  Upload all files and prefix the object names in Object Storage
  --------------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --object-prefix my-prefix/

  In the above example command, all files uploaded to Object Storage will have
  their object names prefixed with "my-prefix/". This will allow you to
  further group uploaded files together or potentially avoid name collisions
  when uploading files.

  Forcing object overwrite to resolve object name collision
  ----------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --overwrite

  If a file being uploaded already exists in Object Storage, it can be overwritten without a prompt by
  using the --overwrite flag.

  Prevent object overwrite to resolve object name collision
  ----------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --no-overwrite

  If a file being uploaded already exists in Object Storage, it can be preserved (not overwritten) without a
  prompt by using the --no-overwrite flag.

Options:
  -ns, --namespace TEXT           Object Storage namespace. [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --src-dir TEXT                  The directory which contains files to upload.
                                  Files in the directory and all subdirectories
                                  will be uploaded. [required]
  --object-prefix TEXT            A prefix to apply to the names of all files
                                  being uploaded
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. This will be applied to all
                                  files being uploaded. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The content type to apply to all files being
                                  uploaded.
  --content-language TEXT         The content language to apply to all files
                                  being uploaded.
  --content-encoding TEXT         The content encoding to apply to all files
                                  being uploaded.
  --overwrite                     If a file being uploaded already exists in
                                  Object Storage, overwrite the existing object
                                  in Object Storage without a confirmation
                                  prompt. If neither this flag nor --no-
                                  overwrite is specified, you will be prompted
                                  each time an object would be overwritten
  --no-overwrite                  If a file being uploaded already exists in
                                  Object Storage, do not overwite it. If neither
                                  this flag nor --overwrite is specified, you
                                  will be prompted each time an object would be
                                  overwritten
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side. This applies to all
                                  files being uploaded
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations. This applies to
                                  all files which will be uploaded in multiple
                                  parts. Part size must be greater than 10 MiB
  --disable-parallel-uploads      [DEPRECATED] This option is no longer used. If
                                  a file in the directory will be uploaded in
                                  multiple parts, this option disables those
                                  parts from being uploaded in parallel. This
                                  applies to all files being uploaded in
                                  multiple parts
  --parallel-upload-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk uploads
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  upload times, but the upload process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --include TEXT                  Only upload files which match the provided
                                  pattern. Patterns are taken relative to the
                                  CURRENT directory. This option can be provided
                                  mulitple times to match on mulitple patterns.
                                  Supported pattern symbols are:
                                  
                                  *: Matches
                                  everything
                                  ?: Matches any single character
                                  [sequence]: Matches any character in sequence
                                  [!sequence]: Matches any character not in
                                  sequence
  --exclude TEXT                  Only upload files which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the CURRENT directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  *:
                                  Matches everything
                                  ?: Matches any single
                                  character
                                  [sequence]: Matches any character in
                                  sequence
                                  [!sequence]: Matches any character
                                  not in sequence
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object delete --help
Usage: oci os object delete [OPTIONS]

  Deletes an object.

  Example:     oci os object delete -ns mynamespace -bn mybucket --name
  myfile.txt

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object to delete. [required]
  --if-match TEXT                 The entity tag to match.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object get --help
Usage: oci os object get [OPTIONS]

  Gets the metadata and body of an object.

  Example:     oci os object get -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object. [required]
  --file FILENAME                 The name of the file that will receive the
                                  object content, or '-' to write to STDOUT.
                                  [required]
  --if-match TEXT                 The entity tag to match.
  --if-none-match TEXT            The entity tag to avoid matching.
  --range TEXT                    Byte range to fetch. Follows https://tools.iet
                                  f.org/html/rfc7233#section-2.1. Example:
                                  bytes=2-10
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object head --help
Usage: oci os object head [OPTIONS]

  Gets the user-defined metadata and entity tag for an object.

  Example:     oci os object head -ns mynamespace -bn mybucket --name
  myfile.txt

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object. [required]
  --if-match TEXT                 The entity tag to match.
  --if-none-match TEXT            The entity tag to avoid matching.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object list --help
Usage: oci os object list [OPTIONS]

  Lists the objects in a bucket.

  Example:     oci os object list -ns mynamespace -bn mybucket --fields
  name,size,timeCreated

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Only object names that begin with this prefix
                                  will be returned.
  --start TEXT                    Only object names greater or equal to this
                                  parameter will be returned.
  --end TEXT                      Only object names less than this parameter
                                  will be returned.
  --limit INTEGER                 The maximum number of items to return.
                                  [default: 100]
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  returned. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --fields TEXT                   Object summary in list of objects includes the
                                  'name' field. This parameter may also include
                                  'size' (object size in bytes), 'md5', and
                                  'timeCreated' (object creation date and time)
                                  fields. Value of this parameter should be a
                                  comma separated, case-insensitive list of
                                  those field names.  [default:
                                  name,size,timeCreated,md5]
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object put --help
Usage: oci os object put [OPTIONS]

  Creates a new object or overwrites an existing one.

  Example:     oci os object put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --metadata
  '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --file FILENAME                 The file to load as the content of the object,
                                  or '-' to read from STDIN. [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path. Required if
                                  reading object from STDIN.
  --if-match TEXT                 The entity tag to match.
  --content-md5 TEXT              The base-64 encoded MD5 hash of the body.
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The content type of the object.
  --content-language TEXT         The content language of the object.
  --content-encoding TEXT         The content encoding of the object.
  --force                         If the object already exists, overwrite the
                                  existing object without a confirmation prompt.
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side.
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER
                                  If the object will be uploaded in multiple
                                  parts, this option allows you to specify the
                                  maximum number of parts that can be uploaded
                                  in parallel. This option cannot be used with
                                  --disable-parallel-uploads or --no-multipart.
                                  Defaults to 3.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object resume-put --help
Usage: oci os object resume-put [OPTIONS]

  Resume a previous multipart put.

  Example:     oci os object resume-put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --file FILENAME                 The file to load as the content of the object.
                                  [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path.
  --upload-id TEXT                Upload ID to resume. [required]
  --part-size INTEGER             Part size in MiB
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER
                                  This option allows you to specify the maximum
                                  number of parts that can be uploaded in
                                  parallel. This option cannot be used with
                                  --disable-parallel-uploads. Defaults to 3.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request --help
Usage: oci os preauth-request [OPTIONS] COMMAND [ARGS]...

  Pre-authenticated requests provide a way to allow access to specified object
  operations for a fixed amount of time without performing authentication.

  The access-uri will only be returned from the create operation for a pre-
  authenticated request (not get or list).  Note the access-uri value upon
  creation in order to use the pre-authenticated request later.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a pre-authenticated request.
  delete  Deletes a pre-authenticateted request.
  get     Gets a pre-authenticated request.
  list    Lists pre-authenticated requests for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request create --help
Usage: oci os preauth-request create [OPTIONS]

  Creates a pre-authenticated request.

  The access-uri will only be returned from the create operation for a pre-
  authenticated request (not get or list).  Note the access-uri value upon
  creation in order to use the pre-authenticated request later.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.
                                  
                                  Example: `my-new-
                                  bucket1` [required]
  --name TEXT                     The user specified name for pre-authenticated
                                  request. Helpful for management purposes.
                                  [required]
  --access-type [ObjectRead|ObjectWrite|ObjectReadWrite|AnyObjectWrite]
                                  The operation that can be performed on this
                                  resource e.g PUT or GET. [required]
  --time-expires DATETIME         The expiration date after which the pre-
                                  authenticated request will no longer be valid.
                                  The following datetime formats are supported:
                                  
                                  UTC with milliseconds
                                  ----------------------
                                  Format:
                                  YYYY-MM-DDTHH:mm:ss.sssTZD
                                  Example:
                                  2017-09-15T20:30:00.123Z
                                  
                                  
                                  UTC without
                                  milliseconds
                                  ----------------------
                                  Format:
                                  YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T20:30:00Z
                                  
                                  
                                  Timezone with
                                  milliseconds
                                  ----------------------
                                  Format:
                                  YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00.456-08:00
                                  
                                  Timezone
                                  without milliseconds
                                  ----------------------
                                  Format:
                                  YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00-08:00
                                  
                                  
                                  Date Only
                                  ---------
                                  This date will be taken as midnight
                                  UTC of that day
                                  
                                  Format:
                                  YYYY-MM-DD
                                  Example:
                                  2017-09-15
                                  
                                  
                                  Epoch seconds
                                  -------------
                                  Example: 1412195400
                                  
                                  [required]
  -on, --object-name TEXT         Name of object that is being granted access to
                                  by the pre-authenticated request. This option
                                  must be specified if --access-type is
                                  ObjectRead, ObjectWrite, or ObjectReadWrite.
                                  This option cannot be specified if the
                                  --access-type is AnyObjectWrite.
  --opc-client-request-id TEXT    The client request ID for tracing.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request delete --help
Usage: oci os preauth-request delete [OPTIONS]

  Deletes a pre-authenticateted request.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.
                                  
                                  Example: `my-new-
                                  bucket1` [required]
  --par-id TEXT                   The unique identifier for the pre-
                                  authenticated request (PAR). This can be used
                                  to manage the PAR such as GET or DELETE the
                                  PAR. [required]
  --opc-client-request-id TEXT    The client request ID for tracing.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request get --help
Usage: oci os preauth-request get [OPTIONS]

  Gets a pre-authenticated request.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.
                                  
                                  Example: `my-new-
                                  bucket1` [required]
  --par-id TEXT                   The unique identifier for the pre-
                                  authenticated request (PAR). This can be used
                                  to manage the PAR such as GET or DELETE the
                                  PAR. [required]
  --opc-client-request-id TEXT    The client request ID for tracing.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request list --help
Usage: oci os preauth-request list [OPTIONS]

  Lists pre-authenticated requests for the bucket

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.
                                  
                                  Example: `my-new-
                                  bucket1` [required]
  --object-name-prefix TEXT       Pre-authenticated requests returned by the
                                  list must have object names starting with
                                  prefix
  --limit TEXT                    The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --opc-client-request-id TEXT    The client request ID for tracing.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup --help
Usage: oci setup [OPTIONS] COMMAND [ARGS]...

  Setup commands for CLI

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  autocomplete  Interactive script to set up tab completion...
  config        Interactive script to generate oci config...
  keys          Generates an RSA key pair.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup autocomplete --help
Usage: oci setup autocomplete [OPTIONS]

  Interactive script to set up tab completion for commands and parameters.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup config --help
Usage: oci setup config [OPTIONS]

  Interactive script to generate oci config file.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup keys --help
Usage: oci setup keys [OPTIONS]

  Generates an RSA key pair. A passphrase for the private key can be provided
  using either the 'passphrase' or 'passphrase-file' option. If neither option
  is provided, the user will be prompted for a passphrase via stdin.

Options:
  --key-name TEXT             A name for the key. Generated key files will be
                              {key-name}.pem and {key-name}_public.pem
  --output-dir PATH           An optional directory to output the generated
                              keys.
  --passphrase TEXT           An optional passphrase to encrypt the private key.
  --passphrase-file FILENAME  An optional file with the first line specifying a
                              passphrase to encrypt the private key (or '-' to
                              read from stdin).
  --overwrite                 An option to overwrite existing files without a
                              confirmation prompt.
  -?, -h, --help              Show this message and exit.

