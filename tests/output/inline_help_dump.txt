This file contains all the help for every possible command in version 2.4.16 of the CLI.

This file is generated by running test_help.py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci --help
Usage: oci [OPTIONS] COMMAND [ARGS]...

  Oracle Cloud Infrastructure command line interface, with support for Block
  Volume, Compute, Database, IAM, Load Balancing, Networking, and Object
  Storage Services.

  Most commands must specify a service, followed by a resource type and then
  an action. For example, to list users (where $T contains the OCID of the
  current tenant):

    oci iam user list --compartment-id $T

  Output is in JSON format.

  For information on configuration, see https://docs.us-
  phoenix-1.oraclecloud.com/Content/API/Concepts/sdkconfig.htm.

Options:
  -v, --version                   Show the version and exit.
  --config-file TEXT              The path to the config file.  [default:
                                  ~/.oci/config]
  --profile TEXT                  The profile in the config file to load. This
                                  profile will also be used to locate any
                                  default parameter values which have been
                                  specified in the OCI CLI-specific
                                  configuration file.  [default: DEFAULT]
  --cli-rc-file, --defaults-file TEXT
                                  The path to the OCI CLI-specific configuration
                                  file, containing parameter default values and
                                  other configuration information such as
                                  command aliases and predefined queries. The
                                  --defaults-file option is deprecated and you
                                  should use the --cli-rc-file option instead.
                                  [default: ~/.oci/oci_cli_rc]
  --opc-request-id, --opc-client-request-id, --request-id TEXT
                                  The request id to use for tracking the
                                  request.
  --region TEXT                   The region to make calls against.  For a list
                                  of valid region names use the command: "oci
                                  iam region list".
  --endpoint TEXT                 The value to use as the service endpoint,
                                  including any required API version path. For
                                  example: "https://iaas.us-
                                  phoenix-1.oracle.com/20160918". This will
                                  override the default service endpoint / API
                                  version path. Note: The --region parameter is
                                  the recommended way of targeting different
                                  regions.
  --cert-bundle TEXT              The full path to a CA certificate bundle to be
                                  used for SSL verification. This will override
                                  the default CA certificate bundle.
  --output [json|table]           The output format. [Default is json]
  --query TEXT                    JMESPath query [http://jmespath.org/] to run
                                  on the response JSON before output.
                                  
                                  Queries
                                  can be entered directly on the command line or
                                  referenced from the [OCI_CLI_COMMAND_ALIASES]
                                  section of your configuration file by using
                                  the syntax query://<query_name>, for example
                                  query://get_id_and_name
  --raw-output                    If the output of a given query is a single
                                  string value, this will return the string
                                  without surrounding quotes
  --auth [api_key|instance_principal]
                                  The type of auth to use for the API request.
                                  By default the API key in your config file
                                  will be used.  This value can also be provided
                                  in the OCI_CLI_AUTH environment variable.
  --generate-full-command-json-input
                                  Prints out a JSON document which represents
                                  all possible options that can be provided to
                                  this command.
                                  
                                  This JSON document can be saved
                                  to a file, modified with the appropriate
                                  option values, and then passed back via the
                                  --from-json option. This provides an
                                  alternative to typing options out on the
                                  command line.
  --generate-param-json-input TEXT
                                  Complex input, such as arrays and objects, are
                                  passed in JSON format.
                                  
                                  When passed the name
                                  of an option which takes complex input, this
                                  will print out example JSON of what needs to
                                  be passed to that option.
  -d, --debug                     Show additional debug information.
  -?, -h, --help                  Show this message and exit.

Commands:
  audit    Audit Service
  bv       Block Volume Service
  compute  Compute Service
  db       Database Service
  dns      API for managing DNS zones, records, and...
  iam      Identity and Access Management Service
  lb       Load Balancing Service
  network  Networking Service
  os       Object Storage Service
  setup    Setup commands for CLI

++++++++++++++++++++++++++++++++++++++++++++++
$ oci audit --help
Usage: oci audit [OPTIONS] COMMAND [ARGS]...

  Audit Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  config
  event

++++++++++++++++++++++++++++++++++++++++++++++
$ oci audit config --help
Usage: oci audit config [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get     Get the configuration
  update  Update the configuration

++++++++++++++++++++++++++++++++++++++++++++++
$ oci audit config get --help
Usage: oci audit config get [OPTIONS]

  Get the configuration

Options:
  -c, --compartment-id TEXT  ID of the root compartment (tenancy) [required]
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci audit config update --help
Usage: oci audit config update [OPTIONS]

  Update the configuration

Options:
  -c, --compartment-id TEXT       ID of the root compartment (tenancy)
                                  [required]
  --retention-period-days INTEGER
                                  The retention period days
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci audit event --help
Usage: oci audit event [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Returns all audit events for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci audit event list --help
Usage: oci audit event list [OPTIONS]

  Returns all audit events for the specified compartment that were processed
  within the specified time range.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --start-time DATETIME      Returns events that were processed at or after this
                             start date and time, expressed in [RFC 3339]
                             timestamp format. For example, a start value of
                             `2017-01-15T11:30:00Z` will retrieve a list of all
                             events processed since 30 minutes after the 11th
                             hour of January 15, 2017, in Coordinated Universal
                             Time (UTC). You can specify a value with
                             granularity to the minute. Seconds (and
                             milliseconds, if included) must be set to `0`.
                             [required]
  --end-time DATETIME        Returns events that were processed before this end
                             date and time, expressed in [RFC 3339] timestamp
                             format. For example, a start value of
                             `2017-01-01T00:00:00Z` and an end value of
                             `2017-01-02T00:00:00Z` will retrieve a list of all
                             events processed on January 1, 2017. Similarly, a
                             start value of `2017-01-01T00:00:00Z` and an end
                             value of `2017-02-01T00:00:00Z` will result in a
                             list of all events processed between January 1,
                             2017 and January 31, 2017. You can specify a value
                             with granularity to the minute. Seconds (and
                             milliseconds, if included) must be set to `0`.
                             [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous list query.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv --help
Usage: oci bv [OPTIONS] COMMAND [ARGS]...

  Block Volume Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  backup                          A point-in-time copy of a volume that can...
  boot-volume                     A detachable boot volume device that
                                  contains...
  volume                          A detachable block volume device that
                                  allows...
  volume-backup-policy            A policy for automatically creating volume...
  volume-backup-policy-assignment
                                  Specifies that a particular volume backup...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup --help
Usage: oci bv backup [OPTIONS] COMMAND [ARGS]...

  A point-in-time copy of a volume that can then be used to create a new block
  volume or recover a block volume. For more information, see [Overview of
  Cloud Volume Storage].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new backup of the specified volume.
  delete  Deletes a volume backup.
  get     Gets information for the specified volume...
  list    Lists the volume backups in the specified...
  update  Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup create --help
Usage: oci bv backup create [OPTIONS]

  Creates a new backup of the specified volume. For general information about
  volume backups, see [Overview of Block Volume Service Backups]

  When the request is received, the backup object is in a REQUEST_RECEIVED
  state. When the data is imaged, it goes into a CREATING state. After the
  backup is fully uploaded to the cloud, it goes into an AVAILABLE state.

Options:
  --volume-id TEXT                The OCID of the volume that needs to be backed
                                  up. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name for the volume backup.
                                  Does not have to be unique and it's
                                  changeable. Avoid entering confidential
                                  information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --type [FULL|INCREMENTAL]       The type of backup to create. If omitted,
                                  defaults to INCREMENTAL.
  --wait-for-state [CREATING|AVAILABLE|TERMINATING|TERMINATED|FAULTY|REQUEST_RECEIVED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup delete --help
Usage: oci bv backup delete [OPTIONS]

  Deletes a volume backup.

Options:
  --volume-backup-id TEXT         The OCID of the volume backup. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|AVAILABLE|TERMINATING|TERMINATED|FAULTY|REQUEST_RECEIVED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup get --help
Usage: oci bv backup get [OPTIONS]

  Gets information for the specified volume backup.

Options:
  --volume-backup-id TEXT  The OCID of the volume backup. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup list --help
Usage: oci bv backup list [OPTIONS]

  Lists the volume backups in the specified compartment. You can filter the
  results by volume.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --volume-id TEXT                The OCID of the volume.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [CREATING|AVAILABLE|TERMINATING|TERMINATED|FAULTY|REQUEST_RECEIVED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv backup update --help
Usage: oci bv backup update [OPTIONS]

  Updates the display name for the specified volume backup. Avoid entering
  confidential information.

Options:
  --volume-backup-id TEXT         The OCID of the volume backup. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A friendly user-specified name for the volume
                                  backup. Avoid entering confidential
                                  information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [CREATING|AVAILABLE|TERMINATING|TERMINATED|FAULTY|REQUEST_RECEIVED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv boot-volume --help
Usage: oci bv boot-volume [OPTIONS] COMMAND [ARGS]...

  A detachable boot volume device that contains the image used to boot an
  Compute instance. For more information, see [Overview of Boot Volumes].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Deletes the specified boot volume.
  get     Gets information for the specified boot...
  list    Lists the boot volumes in the specified...
  update  Updates the specified boot volume's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv boot-volume delete --help
Usage: oci bv boot-volume delete [OPTIONS]

  Deletes the specified boot volume. The volume cannot have an active
  connection to an instance. To disconnect the boot volume from a connected
  instance, see [Disconnecting From a Boot Volume]. **Warning:** All data on
  the boot volume will be permanently lost when the boot volume is deleted.

Options:
  --boot-volume-id TEXT           The OCID of the boot volume. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|RESTORING|AVAILABLE|TERMINATING|TERMINATED|FAULTY]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv boot-volume get --help
Usage: oci bv boot-volume get [OPTIONS]

  Gets information for the specified boot volume.

Options:
  --boot-volume-id TEXT  The OCID of the boot volume. [required]
  --from-json TEXT       Provide input to this command as a JSON document from a
                         file.
                         
                         Options can still be provided on the command
                         line. If an option exists in both the JSON document and
                         the command line then the command line specified value
                         will be used
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv boot-volume list --help
Usage: oci bv boot-volume list [OPTIONS]

  Lists the boot volumes in the specified compartment and Availability Domain.

Options:
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1` [required]
  -c, --compartment-id TEXT   The OCID of the compartment. [required]
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv boot-volume update --help
Usage: oci bv boot-volume update [OPTIONS]

  Updates the specified boot volume's display name.

Options:
  --boot-volume-id TEXT           The OCID of the boot volume. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|RESTORING|AVAILABLE|TERMINATING|TERMINATED|FAULTY]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume --help
Usage: oci bv volume [OPTIONS] COMMAND [ARGS]...

  A detachable block volume device that allows you to dynamically expand the
  storage capacity of an instance. For more information, see [Overview of
  Cloud Volume Storage].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new volume in the specified...
  delete  Deletes the specified volume.
  get     Gets information for the specified volume.
  list    Lists the volumes in the specified...
  update  Updates the specified volume's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume create --help
Usage: oci bv volume create [OPTIONS]

  Creates a new volume in the specified compartment. Volumes can be created in
  sizes ranging from 50 GB (51200 MB) to 16 TB (16777216 MB), in 1 GB (1024
  MB) increments. By default, volumes are 1 TB (1048576 MB). For general
  information about block volumes, see [Overview of Block Volume Service].

  A volume and instance can be in separate compartments but must be in the
  same Availability Domain. For information about access control and
  compartments, see [Overview of the IAM Service]. For information about
  Availability Domains, see [Regions and Availability Domains]. To get a list
  of Availability Domains, use the `ListAvailabilityDomains` operation in the
  Identity and Access Management Service API.

  You may optionally specify a *display name* for the volume, which is simply
  a friendly name or description. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

Options:
  --backup-policy-id TEXT         If provided, specifies the ID of the volume
                                  backup policy to assign to the newly created
                                  volume. If omitted, no policy will be
                                  assigned.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --size-in-gbs INTEGER           The size of the volume in GBs. This option
                                  cannot be supplied when cloning a volume or
                                  restoring a volume from a backup
  --size-in-mbs INTEGER           [DEPRECATED] The size of the volume in MBs.
                                  The value must be a multiple of 1024. This
                                  field is deprecated. Use --size-in-gbs
                                  instead. This option cannot be supplied when
                                  cloning a volume or restoring a volume from a
                                  backup
  --wait-for-state [PROVISIONING|RESTORING|AVAILABLE|TERMINATING|TERMINATED|FAULTY]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --availability-domain TEXT      The Availability Domain of the volume.
                                  Example: `Uocm:PHX-AD-1`
  -c, --compartment-id TEXT       The OCID of the compartment that contains the
                                  volume. [required]
  --source-volume-id TEXT         The OCID of a Block volume in the same
                                  Availability Domain from which the data should
                                  be cloned to the newly created volume. You can
                                  specify either this or --volume-backup-id but
                                  not both. If neither is specified then the new
                                  Block volume will be empty.
  --volume-backup-id TEXT         The OCID of the volume backup from which the
                                  data should be restored on the newly created
                                  volume. You can specify either this or
                                  --source-volume-id but not both. If neither is
                                  specified then the new Block volume will be
                                  empty.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume delete --help
Usage: oci bv volume delete [OPTIONS]

  Deletes the specified volume. The volume cannot have an active connection to
  an instance. To disconnect the volume from a connected instance, see
  [Disconnecting From a Volume]. **Warning:** All data on the volume will be
  permanently lost when the volume is deleted.

Options:
  --volume-id TEXT                The OCID of the volume. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|RESTORING|AVAILABLE|TERMINATING|TERMINATED|FAULTY]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume get --help
Usage: oci bv volume get [OPTIONS]

  Gets information for the specified volume.

Options:
  --volume-id TEXT  The OCID of the volume. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume list --help
Usage: oci bv volume list [OPTIONS]

  Lists the volumes in the specified compartment and Availability Domain.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|RESTORING|AVAILABLE|TERMINATING|TERMINATED|FAULTY]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume update --help
Usage: oci bv volume update [OPTIONS]

  Updates the specified volume's display name. Avoid entering confidential
  information.

Options:
  --volume-id TEXT                The OCID of the volume. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|RESTORING|AVAILABLE|TERMINATING|TERMINATED|FAULTY]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy --help
Usage: oci bv volume-backup-policy [OPTIONS] COMMAND [ARGS]...

  A policy for automatically creating volume backups according to a recurring
  schedule. Has a set of one or more schedules that control when and how
  backups are created.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets information for the specified volume...
  list  Lists all volume backup policies available to...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy get --help
Usage: oci bv volume-backup-policy get [OPTIONS]

  Gets information for the specified volume backup policy.

Options:
  --policy-id TEXT  The OCID of the volume backup policy. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy list --help
Usage: oci bv volume-backup-policy list [OPTIONS]

  Lists all volume backup policies available to the caller.

Options:
  --limit INTEGER      The maximum number of items to return in a paginated
                       "List" call.
                       
                       Example: `500`
  --page TEXT          The value of the `opc-next-page` response header from the
                       previous "List" call.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy-assignment --help
Usage: oci bv volume-backup-policy-assignment [OPTIONS] COMMAND [ARGS]...

  Specifies that a particular volume backup policy is assigned to an asset
  such as a volume.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create                          Assigns a policy to the specified asset,
                                  such...
  delete                          Deletes a volume backup policy assignment...
  get                             Gets information for the specified volume...
  get-volume-backup-policy-asset-assignment
                                  Gets the volume backup policy assignment
                                  for...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy-assignment create --help
Usage: oci bv volume-backup-policy-assignment create [OPTIONS]

  Assigns a policy to the specified asset, such as a volume. Note that a given
  asset can only have one policy assigned to it; if this method is called for
  an asset that previously has a different policy assigned, the prior
  assignment will be silently deleted.

Options:
  --asset-id TEXT   The OCID of the asset (e.g. a volume) to which to assign the
                    policy. [required]
  --policy-id TEXT  The OCID of the volume backup policy to assign to an asset.
                    [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy-assignment delete --help
Usage: oci bv volume-backup-policy-assignment delete [OPTIONS]

  Deletes a volume backup policy assignment (i.e. unassigns the policy from an
  asset).

Options:
  --policy-assignment-id TEXT  The OCID of the volume backup policy assignment.
                               [required]
  --if-match TEXT              For optimistic concurrency control. In the PUT or
                               DELETE call for a resource, set the `if-match`
                               parameter to the value of the etag from a
                               previous GET or POST response for that resource.
                               The resource will be updated or deleted only if
                               the etag you provide matches the resource's
                               current etag value.
  --force                      Perform deletion without prompting for
                               confirmation.
  --from-json TEXT             Provide input to this command as a JSON document
                               from a file.
                               
                               Options can still be provided on
                               the command line. If an option exists in both the
                               JSON document and the command line then the
                               command line specified value will be used
  -?, -h, --help               Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy-assignment get --help
Usage: oci bv volume-backup-policy-assignment get [OPTIONS]

  Gets information for the specified volume backup policy assignment.

Options:
  --policy-assignment-id TEXT  The OCID of the volume backup policy assignment.
                               [required]
  --from-json TEXT             Provide input to this command as a JSON document
                               from a file.
                               
                               Options can still be provided on
                               the command line. If an option exists in both the
                               JSON document and the command line then the
                               command line specified value will be used
  -?, -h, --help               Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci bv volume-backup-policy-assignment get-volume-backup-policy-asset-assignment --help
Usage: oci bv volume-backup-policy-assignment get-volume-backup-policy-asset-assignment 
           [OPTIONS]

  Gets the volume backup policy assignment for the specified asset. Note that
  the assetId query parameter is required, and that the returned list will
  contain at most one item (since any given asset can only have one policy
  assigned to it).

Options:
  --asset-id TEXT   The OCID of an asset (e.g. a volume). [required]
  --limit INTEGER   The maximum number of items to return in a paginated "List"
                    call.
                    
                    Example: `500`
  --page TEXT       The value of the `opc-next-page` response header from the
                    previous "List" call.
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute --help
Usage: oci compute [OPTIONS] COMMAND [ARGS]...

  Compute Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  boot-volume-attachment       Represents an attachment between a boot...
  console-history              An instance's serial console data.
  image                        A boot disk image for launching an instance.
  instance                     A compute host.
  instance-console-connection  The `InstanceConsoleConnection` API provides...
  shape                        A compute instance shape that can be used in...
  vnic-attachment              Represents an attachment between a VNIC and...
  volume-attachment            A base object for all types of attachments...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute boot-volume-attachment --help
Usage: oci compute boot-volume-attachment [OPTIONS] COMMAND [ARGS]...

  Represents an attachment between a boot volume and an instance.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  attach  Attaches the specified boot volume to the...
  detach  Detaches a boot volume from an instance.
  get     Gets information about the specified boot...
  list    Lists the boot volume attachments in the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute boot-volume-attachment attach --help
Usage: oci compute boot-volume-attachment attach [OPTIONS]

  Attaches the specified boot volume to the specified instance.

Options:
  --boot-volume-id TEXT           The OCID of the  boot volume. [required]
  --instance-id TEXT              The OCID of the instance. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it cannot be changed. Avoid
                                  entering confidential information.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute boot-volume-attachment detach --help
Usage: oci compute boot-volume-attachment detach [OPTIONS]

  Detaches a boot volume from an instance. You must specify the OCID of the
  boot volume attachment.

  This is an asynchronous operation. The attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --boot-volume-attachment-id TEXT
                                  The OCID of the boot volume attachment.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute boot-volume-attachment get --help
Usage: oci compute boot-volume-attachment get [OPTIONS]

  Gets information about the specified boot volume attachment.

Options:
  --boot-volume-attachment-id TEXT
                                  The OCID of the boot volume attachment.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute boot-volume-attachment list --help
Usage: oci compute boot-volume-attachment list [OPTIONS]

  Lists the boot volume attachments in the specified compartment. You can
  filter the list by specifying an instance OCID, boot volume OCID, or both.

Options:
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1` [required]
  -c, --compartment-id TEXT   The OCID of the compartment. [required]
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --instance-id TEXT          The OCID of the instance.
  --boot-volume-id TEXT       The OCID of the boot volume.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history --help
Usage: oci compute console-history [OPTIONS] COMMAND [ARGS]...

  An instance's serial console data. It includes configuration messages that
  occur when the instance boots, such as kernel and BIOS messages, and is
  useful for checking the status of the instance or diagnosing problems. The
  console data is minimally formatted ASCII text.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  capture      Captures the most recent serial console data...
  delete       Deletes the specified console history...
  get          Shows the metadata for the specified console...
  get-content  Gets the actual console history data (not the...
  list         Lists the console history metadata for the...
  update       Updates the specified console history...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history capture --help
Usage: oci compute console-history capture [OPTIONS]

  Captures the most recent serial console data (up to a megabyte) for the
  specified instance.

  The `CaptureConsoleHistory` operation works with the other console history
  operations as described below.

  1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of
  the most recent console history. This call returns a `ConsoleHistory`
  object. The object will have a state of REQUESTED. 2. Wait for the capture
  operation to succeed by polling `GetConsoleHistory` with the identifier of
  the console history metadata. The state of the `ConsoleHistory` object will
  go from REQUESTED to GETTING-HISTORY and then SUCCEEDED (or FAILED). 3. Use
  `GetConsoleHistoryContent` to get the actual console history data (not the
  metadata). 4. Optionally, use `DeleteConsoleHistory` to delete the console
  history metadata and the console history data.

Options:
  --instance-id TEXT              The OCID of the instance to get the console
                                  history from. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [REQUESTED|GETTING-HISTORY|SUCCEEDED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history delete --help
Usage: oci compute console-history delete [OPTIONS]

  Deletes the specified console history metadata and the console history data.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [REQUESTED|GETTING-HISTORY|SUCCEEDED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history get --help
Usage: oci compute console-history get [OPTIONS]

  Shows the metadata for the specified console history. See
  [CaptureConsoleHistory] for details about using the console history
  operations.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history get-content --help
Usage: oci compute console-history get-content [OPTIONS]

  Gets the actual console history data (not the metadata). See
  [CaptureConsoleHistory] for details about using the console history
  operations.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --file FILENAME                 The name of the file that will receive the
                                  response data, or '-' to write to STDOUT.
                                  [required]
  --offset INTEGER                Offset of the snapshot data to retrieve.
  --length INTEGER                Length of the snapshot data to retrieve.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history list --help
Usage: oci compute console-history list [OPTIONS]

  Lists the console history metadata for the specified compartment or
  instance.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --instance-id TEXT              The OCID of the instance.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [REQUESTED|GETTING-HISTORY|SUCCEEDED|FAILED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute console-history update --help
Usage: oci compute console-history update [OPTIONS]

  Updates the specified console history metadata.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [REQUESTED|GETTING-HISTORY|SUCCEEDED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image --help
Usage: oci compute image [OPTIONS] COMMAND [ARGS]...

  A boot disk image for launching an instance. For more information, see
  [Overview of the Compute Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a boot disk image for the specified...
  delete  Deletes an image.
  export  Exports an image to the Oracle Cloud...
  get     Gets the specified image.
  import  Imports an exported image from the Oracle...
  list    Lists the available images in the specified...
  update  Updates the display name of the image.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image create --help
Usage: oci compute image create [OPTIONS]

  Creates a boot disk image for the specified instance or imports an exported
  image from the Oracle Cloud Infrastructure Object Storage service.

  When creating a new image, you must provide the OCID of the instance you
  want to use as the basis for the image, and the OCID of the compartment
  containing that instance. For more information about images, see [Managing
  Custom Images].

  When importing an exported image from Object Storage, you specify the source
  information in [ImageSourceDetails].

  When importing an image based on the namespace, bucket name, and object
  name, use [ImageSourceViaObjectStorageTupleDetails].

  When importing an image based on the Object Storage URL, use
  [ImageSourceViaObjectStorageUriDetails]. See [Object Storage URLs] and [pre-
  authenticated requests] for constructing URLs for image import/export.

  For more information about importing exported images, see [Image
  Import/Export].

  You may optionally specify a *display name* for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  instance you want to use as the basis for the
                                  image. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name for the image. It does
                                  not have to be unique, and it's changeable.
                                  Avoid entering confidential information.
                                  
                                  You
                                  cannot use an Oracle-provided image name as a
                                  custom image name.
                                  
                                  Example: `My Oracle Linux
                                  image`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --image-source-details COMPLEX TYPE
                                  [DEPRECATED] The use of the `oci compute image
                                  create` command to import an image from Object
                                  Storage is deprecated.
                                  
                                  
                                  Please use the `oci
                                  compute image import` command instead.
                                  Details for creating an image through import
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax. 
                                  
                                  Example: '{ "objectName": "image-to-
                                  import.qcow2", "bucketName": "MyBucket",
                                  "namespaceName": "MyNamespace", "sourceType":
                                  "objectStorageTuple" }'
                                  
                                  or
                                  
                                  '{ "sourceUri":
                                  "https://objectstorage.us-phoenix-1.oracleclou
                                  d.com/n/MyNamespace/b/MyBucket/o/image-to-
                                  import.qcow2", "sourceType":
                                  "objectStorageUri" }'
  --instance-id TEXT              The OCID of the instance you want to use as
                                  the basis for the image.
  --launch-mode [NATIVE|EMULATED|CUSTOM]
                                  Specifies the configuration mode for launching
                                  virtual machine (VM) instances. The
                                  configuration modes are: * `NATIVE` - VM
                                  instances launch with iSCSI boot and VFIO
                                  devices. The default value for Oracle-provided
                                  images. * `EMULATED` - VM instances launch
                                  with emulated devices, such as the E1000
                                  network driver and emulated SCSI disk
                                  controller. * `CUSTOM` - VM instances launch
                                  with custom configuration settings specified
                                  in the `LaunchOptions` parameter.
  --wait-for-state [PROVISIONING|IMPORTING|AVAILABLE|EXPORTING|DISABLED|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image delete --help
Usage: oci compute image delete [OPTIONS]

  Deletes an image.

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|IMPORTING|AVAILABLE|EXPORTING|DISABLED|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image export --help
Usage: oci compute image export [OPTIONS] COMMAND [ARGS]...

  Exports an image to the Oracle Cloud Infrastructure Object Storage Service.
  You can use the Object Storage Service URL, or the namespace, bucket name,
  and object name when specifying the location to export to.

  For more information about exporting images, see [Image Import/Export].

  To perform an image export, you need write access to the Object Storage
  Service bucket for the image, see [Let Users Write Objects to Object Storage
  Buckets].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  to-object      Exports the specified image to the Oracle...
  to-object-uri  Exports the specified image to the Oracle...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image export to-object --help
Usage: oci compute image export to-object [OPTIONS]

  Exports the specified image to the Oracle Cloud Infrastructure Object
  Storage Service using the namespace, bucket name, and object name to
  identify the location to export to.

  For more information about exporting images, see [Image Import/Export].

  To perform an image export, you need write access to the Object Storage
  Service bucket for the image, see [Let Users Write Objects to Object Storage
  Buckets].

Options:
  --image-id TEXT          The OCID of the image. [required]
  --if-match TEXT          For optimistic concurrency control. In the PUT or
                           DELETE call for a resource, set the `if-match`
                           parameter to the value of the etag from a previous
                           GET or POST response for that resource.  The resource
                           will be updated or deleted only if the etag you
                           provide matches the resource's current etag value.
  -ns, --namespace TEXT    The Object Storage Service namespace to export the
                           image to. [required]
  -bn, --bucket-name TEXT  The name of the bucket to export the image to.
                           [required]
  --name TEXT              The name which will be given to the exported image
                           object. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image export to-object-uri --help
Usage: oci compute image export to-object-uri [OPTIONS]

  Exports the specified image to the Oracle Cloud Infrastructure Object
  Storage Service using the Object Storage Service URL to identify the
  location to export to.

  For more information about exporting images, see [Image Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

Options:
  --image-id TEXT   The OCID of the image. [required]
  --if-match TEXT   For optimistic concurrency control. In the PUT or DELETE
                    call for a resource, set the `if-match` parameter to the
                    value of the etag from a previous GET or POST response for
                    that resource.  The resource will be updated or deleted only
                    if the etag you provide matches the resource's current etag
                    value.
  --uri TEXT        The Object Storage URL to export the image to.
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image get --help
Usage: oci compute image get [OPTIONS]

  Gets the specified image.

Options:
  --image-id TEXT   The OCID of the image. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image import --help
Usage: oci compute image import [OPTIONS] COMMAND [ARGS]...

  Imports an exported image from the Oracle Cloud Infrastructure Object
  Storage Service. You can use the Object Storage Service URL, or the
  namespace, bucket name, and object name when specifying the location to
  import from.

  For more information about importing exported images, see [Image
  Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  from-object      Imports an exported image from the Oracle...
  from-object-uri  Imports an exported image from the Oracle...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image import from-object --help
Usage: oci compute image import from-object [OPTIONS]

  Imports an exported image from the Oracle Cloud Infrastructure Object
  Storage Service using the namespace, bucket name, and object name to
  identify the location to import from.

  For more information about importing exported images, see [Image
  Import/Export].

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  instance you want to use as the basis for the
                                  image. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name for the image. It does
                                  not have to be unique, and it's changeable.
                                  Avoid entering confidential information.
                                  
                                  You
                                  cannot use an Oracle-provided image name as a
                                  custom image name.
                                  
                                  Example: `My Oracle Linux
                                  image`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --launch-mode [NATIVE|EMULATED|CUSTOM]
                                  Specifies the configuration mode for launching
                                  virtual machine (VM) instances. The
                                  configuration modes are: * `NATIVE` - VM
                                  instances launch with iSCSI boot and VFIO
                                  devices. The default value for Oracle-provided
                                  images. * `EMULATED` - VM instances launch
                                  with emulated devices, such as the E1000
                                  network driver and emulated SCSI disk
                                  controller. * `CUSTOM` - VM instances launch
                                  with custom configuration settings specified
                                  in the `LaunchOptions` parameter.
  -ns, --namespace TEXT           The Object Storage Service namespace to import
                                  the image from. [required]
  -bn, --bucket-name TEXT         The name of the bucket to import the image
                                  from. [required]
  --name TEXT                     The name of the object identifying the image
                                  to import. [required]
  --source-image-type [QCOW2|VMDK]
                                  The format of the image to be imported.
                                  Exported Oracle images are QCOW2. Only
                                  monolithic images are supported.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image import from-object-uri --help
Usage: oci compute image import from-object-uri [OPTIONS]

  Imports an exported image from the Oracle Cloud Infrastructure Object
  Storage Service using the Object Storage Service URL to identify the
  location to import from.

  For more information about importing exported images, see [Image
  Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  instance you want to use as the basis for the
                                  image. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name for the image. It does
                                  not have to be unique, and it's changeable.
                                  Avoid entering confidential information.
                                  
                                  You
                                  cannot use an Oracle-provided image name as a
                                  custom image name.
                                  
                                  Example: `My Oracle Linux
                                  image`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --launch-mode [NATIVE|EMULATED|CUSTOM]
                                  Specifies the configuration mode for launching
                                  virtual machine (VM) instances. The
                                  configuration modes are: * `NATIVE` - VM
                                  instances launch with iSCSI boot and VFIO
                                  devices. The default value for Oracle-provided
                                  images. * `EMULATED` - VM instances launch
                                  with emulated devices, such as the E1000
                                  network driver and emulated SCSI disk
                                  controller. * `CUSTOM` - VM instances launch
                                  with custom configuration settings specified
                                  in the `LaunchOptions` parameter.
  --uri TEXT                      The Object Storage URL to import the image
                                  from. [required]
  --source-image-type [QCOW2|VMDK]
                                  The format of the image to be imported.
                                  Exported Oracle images are QCOW2. Only
                                  monolithic images are supported.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image list --help
Usage: oci compute image list [OPTIONS]

  Lists the available images in the specified compartment. If you specify a
  value for the `sortBy` parameter, Oracle-provided images appear first in the
  list, followed by custom images. For more information about images, see
  [Managing Custom Images].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --operating-system TEXT         The image's operating system.
                                  
                                  Example:
                                  `Oracle Linux`
  --operating-system-version TEXT
                                  The image's operating system version.
                                  Example: `7.2`
  --shape TEXT                    Shape name.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|IMPORTING|AVAILABLE|EXPORTING|DISABLED|DELETED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute image update --help
Usage: oci compute image update [OPTIONS]

  Updates the display name of the image. Avoid entering confidential
  information.

Options:
  --image-id TEXT                 The OCID of the image. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My custom
                                  Oracle Linux image`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|IMPORTING|AVAILABLE|EXPORTING|DISABLED|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance --help
Usage: oci compute instance [OPTIONS] COMMAND [ARGS]...

  A compute host. The image used to launch the instance determines its
  operating system and other software. The shape specified during the launch
  process determines the number of CPUs and memory allocated to the instance.
  For more information, see [Overview of the Compute Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  action                     Performs one of the power actions (start,...
  attach-vnic                Creates a secondary VNIC and attaches it to...
  detach-vnic                Detaches and deletes the specified secondary...
  get                        Gets information about the specified...
  get-windows-initial-creds  Gets the generated credentials for the...
  launch                     Creates a new instance in the specified...
  list                       Lists the instances in the specified...
  list-vnics                 Lists the VNICs that are attached to the...
  terminate                  Terminates the specified instance.
  update                     Updates the display name of the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance action --help
Usage: oci compute instance action [OPTIONS]

  Performs one of the power actions (start, stop, softreset, or reset) on the
  specified instance.

  **start** - power on

  **stop** - power off

  **softreset** - ACPI shutdown and power on

  **reset** - power off and power on

  Note that the **stop** state has no effect on the resources you consume.
  Billing continues for instances that you stop, and related resources
  continue to apply against any relevant quotas. You must terminate an
  instance ([TerminateInstance]) to remove its resources from billing and
  quotas.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --action TEXT                   The action to perform on the instance. Allowed
                                  values are: STOP, START, SOFTRESET, RESET
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|RUNNING|STARTING|STOPPING|STOPPED|CREATING_IMAGE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance attach-vnic --help
Usage: oci compute instance attach-vnic [OPTIONS]

  Creates a secondary VNIC and attaches it to the specified instance. For more
  information about secondary VNICs, see [Managing Virtual Network Interface
  Cards (VNICs)].

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --subnet-id TEXT                The OCID of the subnet to create the VNIC in.
                                  [required]
  --vnic-display-name TEXT        A user-friendly name for the VNIC. Does not
                                  have to be unique.
  --assign-public-ip BOOLEAN      Whether the VNIC should be assigned a public
                                  IP address. Defaults to whether the subnet is
                                  public or private. If not set and the VNIC is
                                  being created in a private subnet (i.e., where
                                  prohibitPublicIpOnVnic=true in the Subnet),
                                  then no public IP address is assigned. If not
                                  set and the subnet is public
                                  (prohibitPublicIpOnVnic=false), then a public
                                  IP address is assigned. If set to true and
                                  prohibitPublicIpOnVnic=true, an error is
                                  returned.
  --skip-source-dest-check BOOLEAN
                                  Indicates whether Source/Destination check is
                                  disabled on the VNIC. Defaults to `false`, in
                                  which case we enable Source/Destination check
                                  on the VNIC.
  --private-ip TEXT               A private IP address of your choice to assign
                                  to the VNIC. Must be an available IP address
                                  within the subnet's CIDR. If no value is
                                  specified, a private IP address from the
                                  subnet will be automatically assigned.
  --hostname-label TEXT           The hostname for the VNIC. Used for DNS. The
                                  value is the hostname portion of the VNIC's
                                  fully qualified domain name (FQDN) (e.g.,
                                  `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC
                                  952](https://tools.ietf.org/html/rfc952) and
                                  [RFC
                                  1123](https://tools.ietf.org/html/rfc1123).
                                  The value can be retrieved from the
                                  [Vnic](#/en/iaas/20160918/Vnic/).
  --nic-index INTEGER             Which physical network interface card (NIC)
                                  the VNIC will use. Defaults to 0. Certain bare
                                  metal instance shapes have two active physical
                                  NICs (0 and 1). If you add a secondary VNIC to
                                  one of these instances, you can specify which
                                  NIC the VNIC will use.
  --wait                          If set, then wait for the attachment to
                                  complete and return the newly attached VNIC.
                                  If not set, then the command will not wait and
                                  will return nothing on success.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance detach-vnic --help
Usage: oci compute instance detach-vnic [OPTIONS]

  Detaches and deletes the specified secondary VNIC. This operation cannot be
  used on the instance's primary VNIC. When you terminate an instance, all
  attached VNICs (primary and secondary) are automatically detached and
  deleted.

Options:
  --vnic-id TEXT                  The OCID of the VNIC. [required]
  -c, --compartment-id TEXT       The OCID of the instance's compartment.
                                  [required]
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance get --help
Usage: oci compute instance get [OPTIONS]

  Gets information about the specified instance.

Options:
  --instance-id TEXT  The OCID of the instance. [required]
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance get-windows-initial-creds --help
Usage: oci compute instance get-windows-initial-creds [OPTIONS]

  Gets the generated credentials for the instance. Only works for Windows
  instances. The returned credentials are only valid for the initial login.

Options:
  --instance-id TEXT  The OCID of the instance. [required]
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance launch --help
Usage: oci compute instance launch [OPTIONS]

  Creates a new instance in the specified compartment and the specified
  Availability Domain. For general information about instances, see [Overview
  of the Compute Service].

  For information about access control and compartments, see [Overview of the
  IAM Service].

  For information about Availability Domains, see [Regions and Availability
  Domains]. To get a list of Availability Domains, use the
  `ListAvailabilityDomains` operation in the Identity and Access Management
  Service API.

  All Oracle Cloud Infrastructure resources, including instances, get an
  Oracle-assigned, unique ID called an Oracle Cloud Identifier (OCID). When
  you create a resource, you can find its OCID in the response. You can also
  retrieve a resource's OCID by using a List API operation on that resource
  type, or by viewing the resource in the Console.

  To launch an instance using an image or a boot volume use the
  `sourceDetails` parameter in [LaunchInstanceDetails].

  When you launch an instance, it is automatically attached to a virtual
  network interface card (VNIC), called the *primary VNIC*. The VNIC has a
  private IP address from the subnet's CIDR. You can either assign a private
  IP address of your choice or let Oracle automatically assign one. You can
  choose whether the instance has a public IP address. To retrieve the
  addresses, use the [ListVnicAttachments] operation to get the VNIC ID for
  the instance, and then call [GetVnic] with the VNIC ID.

  You can later add secondary VNICs to an instance. For more information, see
  [Virtual Network Interface Cards (VNICs)].

Options:
  --availability-domain TEXT      The Availability Domain of the instance.
                                  Example: `Uocm:PHX-AD-1` [required]
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --shape TEXT                    The shape of an instance. The shape determines
                                  the number of CPUs, amount of memory, and
                                  other resources allocated to the instance.
                                  You can enumerate all available shapes by
                                  calling [ListShapes]. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My bare
                                  metal instance`
  --extended-metadata COMPLEX TYPE
                                  Additional metadata key/value pairs that you
                                  provide.  They serve a similar purpose and
                                  functionality from fields in the 'metadata'
                                  object.
                                  
                                  They are distinguished from
                                  'metadata' fields in that these can be nested
                                  JSON objects (whereas 'metadata' fields are
                                  string/string maps only).
                                  
                                  If you don't need
                                  nested metadata values, it is strongly advised
                                  to avoid using this object and use the
                                  Metadata object instead.
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --hostname-label TEXT           The hostname for the VNIC that is created
                                  during instance launch. Used for DNS. The
                                  value is the hostname portion of the
                                  instance's fully qualified domain name (FQDN)
                                  (e.g., `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123]. The
                                  value cannot be changed, and it can be
                                  retrieved from the [Vnic object].
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
                                  
                                  Example: `bminstance-1`
  --image-id TEXT                 The OCID of the image used to boot the
                                  instance. This is a shortcut for specifying an
                                  image source via the --source-details complex
                                  JSON parameter. If this parameter is provided,
                                  you cannot provide the --source-details or
                                  --source-boot-volume-id parameters.
  --ipxe-script-file FILENAME     This is an advanced option.
                                  
                                  When a bare metal
                                  or virtual machine instance boots, the iPXE
                                  firmware that runs on the instance is
                                  configured to run an iPXE script to continue
                                  the boot process.
                                  
                                  If you want more control
                                  over the boot process, you can provide your
                                  own custom iPXE script that will run when the
                                  instance boots; however, you should be aware
                                  that the same iPXE script will run every time
                                  an instance boots; not only after the initial
                                  LaunchInstance call.
                                  
                                  The default iPXE script
                                  connects to the instance's local boot volume
                                  over iSCSI and performs a network boot. If you
                                  use a custom iPXE script and want to network-
                                  boot from the instance's local boot volume
                                  over iSCSI the same way as the default iPXE
                                  script, you should use the following iSCSI IP
                                  address: 169.254.0.2, and boot volume IQN:
                                  iqn.2015-02.oracle.boot.
                                  
                                  For more information
                                  about the Bring Your Own Image feature of
                                  Oracle Cloud Infrastructure, see [Bring Your
                                  Own Image].
                                  
                                  For more information about iPXE,
                                  see http://ipxe.org.
  --metadata COMPLEX TYPE         Custom metadata key/value pairs that you
                                  provide, such as the SSH public key required
                                  to connect to the instance. For more info see
                                  documentation: https://docs.us-phoenix-1.oracl
                                  ecloud.com/api/#/en/iaas/20160918/requests/Lau
                                  nchInstanceDetails. This must be provided in
                                  JSON format.
                                  
                                  Note: user_data and
                                  ssh_authorized_keys can instead be specified
                                  using the parameters --user-data-file and
                                  --ssh-authorized-keys-file.
                                  
                                  Example:
                                  '{"ssh_authorized_keys": "ssh-rsa AAAAB3NzaC1y
                                  c2EAAAADAQABAAABAQDbVpuGODmhsRZOLWNgm0aEYUoWID
                                  SPNWHmg2M6mZpmZNHfiNfx2dSofxUpKOiu5S8Th52AuAHS
                                  mkzNe6lXBO9wxnjOvkowe1mAleRTEl8zPI8Jkz6HrmJCzH
                                  EtS04kC4bx+tXRZhIfRq1uGaPcriKyquTnQs52Ahoxgw5v
                                  dXXQMwxWZLAcyaP01JrZwcUqPlB/GRiBFSTj0E/AIiVW3A
                                  PNME5HjreOd/djjPRpvWu7AUpOqskG38kr8lhxo1hJifqe
                                  Mg5W7cQsecTLJHgTDAPJD68ujM93jdzV2llIXwR1zyl80i
                                  6c3lDLyLgUrCLM0R1xex/zITTdT6/Z84buS/Xl my
                                  public key"}'
  --source-details COMPLEX TYPE   Use this parameter to specify whether a boot
                                  volume or an image should be used to launch a
                                  new instance.
                                  This is a complex type whose
                                  value must be valid JSON. The value can be
                                  provided as a string on the command line or
                                  passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --subnet-id TEXT                The OCID of the subnet where the VNIC attached
                                  to this instance will be created.
  --wait-for-state [PROVISIONING|RUNNING|STARTING|STOPPING|STOPPED|CREATING_IMAGE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --vnic-display-name TEXT        A user-friendly name for the default VNIC
                                  attached to this instance. Does not have to be
                                  unique.
  --assign-public-ip BOOLEAN      Whether the default VNIC attached to this
                                  instance should be assigned a public IP
                                  address. Defaults to whether the subnet is
                                  public or private. If not set and the VNIC is
                                  being created in a private subnet (i.e., where
                                  prohibitPublicIpOnVnic=true in the Subnet),
                                  then no public IP address is assigned. If not
                                  set and the subnet is public
                                  (prohibitPublicIpOnVnic=false), then a public
                                  IP address is assigned. If set to true and
                                  prohibitPublicIpOnVnic=true, an error is
                                  returned.
  --private-ip TEXT               A private IP address of your choice to assign
                                  to the default VNIC attached to this instance.
                                  Must be an available IP address within the
                                  subnet's CIDR. If no value is specified, a
                                  private IP address from the subnet will be
                                  automatically assigned.
  --skip-source-dest-check BOOLEAN
                                  Indicates whether Source/Destination check is
                                  disabled on the VNIC. Defaults to `false`, in
                                  which case we enable Source/Destination check
                                  on the VNIC.
  --user-data-file FILENAME       A file containing data that Cloud-Init can use
                                  to run custom scripts or provide custom Cloud-
                                  Init configuration. This parameter is a
                                  convenience wrapper around the 'user_data'
                                  field of the --metadata parameter.  Populating
                                  both values in the same call will result in an
                                  error. For more info see Cloud-Init
                                  documentation: https://cloudinit.readthedocs.o
                                  rg/en/latest/topics/format.html.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to be included in the ~/.ssh/authorized_keys
                                  file for the default user on the instance. Use
                                  a newline character to separate multiple keys.
                                  The SSH keys must be in the format necessary
                                  for the authorized_keys file. This parameter
                                  is a convenience wrapper around the
                                  'ssh_authorized_keys' field of the --metadata
                                  parameter. Populating both values in the same
                                  call will result in an error. For more info
                                  see documentation: https://docs.us-phoenix-1.o
                                  raclecloud.com/api/#/en/iaas/20160918/requests
                                  /LaunchInstanceDetails.
  --source-boot-volume-id TEXT    The OCID of the boot volume used to boot the
                                  instance. This is a shortcut for specifying a
                                  boot volume source via the --source-details
                                  complex JSON parameter. If this parameter is
                                  provided, you cannot provide the --source-
                                  details or --image-id parameters.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance list --help
Usage: oci compute instance list [OPTIONS]

  Lists the instances in the specified compartment and the specified
  Availability Domain. You can filter the results by specifying an instance
  name (the list will include all the identically-named instances in the
  compartment).

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|RUNNING|STARTING|STOPPING|STOPPED|CREATING_IMAGE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance list-vnics --help
Usage: oci compute instance list-vnics [OPTIONS]

  Lists the VNICs that are attached to the specified instance. VNICs that are
  in the process of attaching or detaching will not be returned.

Options:
  --instance-id TEXT   The OCID of the instance. [required]
  --limit INTEGER      The maximum number of items to return in a paginated
                       "List" call.
                       
                       Example: `500`
  --page TEXT          The value of the `opc-next-page` response header from the
                       previous "List" call.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance terminate --help
Usage: oci compute instance terminate [OPTIONS]

  Terminates the specified instance. Any attached VNICs and volumes are
  automatically detached when the instance terminates.

  To preserve the boot volume associated with the instance, specify `true` for
  `PreserveBootVolumeQueryParam`. To delete the boot volume when the instance
  is deleted, specify `false` or do not specify a value for
  `PreserveBootVolumeQueryParam`.

  This is an asynchronous operation. The instance's `lifecycleState` will
  change to TERMINATING temporarily until the instance is completely removed.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --preserve-boot-volume BOOLEAN  Specifies whether to delete or preserve the
                                  boot volume when terminating an instance. The
                                  default value is false. Defaults to true.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|RUNNING|STARTING|STOPPING|STOPPED|CREATING_IMAGE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance update --help
Usage: oci compute instance update [OPTIONS]

  Updates the display name of the specified instance. Avoid entering
  confidential information. The OCID of the instance remains the same.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My bare
                                  metal instance`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|RUNNING|STARTING|STOPPING|STOPPED|CREATING_IMAGE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection --help
Usage: oci compute instance-console-connection [OPTIONS] COMMAND [ARGS]...

  The `InstanceConsoleConnection` API provides you with console access to
  virtual machine (VM) instances, enabling you to troubleshoot malfunctioning
  instances remotely.

  For more information about console access, see [Accessing the Console].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new serial console connection to...
  delete  Deletes the specified instance console...
  get     Gets the specified instance console...
  list    Lists the console connections for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection create --help
Usage: oci compute instance-console-connection create [OPTIONS]

  Creates a new serial console connection to the specified instance. Once the
  serial console connection has been created and is available, you connect to
  the serial console using an SSH client.

  The default number of enabled serial console connections per tenancy is 10.

  For more information about serial console access, see [Accessing the Serial
  Console].

Options:
  --instance-id TEXT              The OCID of the instance to create the console
                                  connection to. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [ACTIVE|CREATING|DELETED|DELETING|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --ssh-public-key-file FILENAME  A file containing the SSH public key used to
                                  authenticate the serial console connection
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection delete --help
Usage: oci compute instance-console-connection delete [OPTIONS]

  Deletes the specified instance console connection.

Options:
  --instance-console-connection-id TEXT
                                  The OCID of the intance console connection
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACTIVE|CREATING|DELETED|DELETING|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection get --help
Usage: oci compute instance-console-connection get [OPTIONS]

  Gets the specified instance console connection's information.

Options:
  --instance-console-connection-id TEXT
                                  The OCID of the intance console connection
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute instance-console-connection list --help
Usage: oci compute instance-console-connection list [OPTIONS]

  Lists the console connections for the specified compartment or instance.

  For more information about console access, see [Accessing the Instance
  Console].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --instance-id TEXT         The OCID of the instance.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute shape --help
Usage: oci compute shape [OPTIONS] COMMAND [ARGS]...

  A compute instance shape that can be used in [LaunchInstance]. For more
  information, see [Overview of the Compute Service].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the shapes that can be used to launch...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute shape list --help
Usage: oci compute shape list [OPTIONS]

  Lists the shapes that can be used to launch an instance within the specified
  compartment. You can filter the list by compatibility with a specific image.

Options:
  -c, --compartment-id TEXT   The OCID of the compartment. [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --image-id TEXT             The OCID of an image.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute vnic-attachment --help
Usage: oci compute vnic-attachment [OPTIONS] COMMAND [ARGS]...

  Represents an attachment between a VNIC and an instance. For more
  information, see [Virtual Network Interface Cards (VNICs)].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets the information for the specified VNIC...
  list  Lists the VNIC attachments in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute vnic-attachment get --help
Usage: oci compute vnic-attachment get [OPTIONS]

  Gets the information for the specified VNIC attachment.

Options:
  --vnic-attachment-id TEXT  The OCID of the VNIC attachment. [required]
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute vnic-attachment list --help
Usage: oci compute vnic-attachment list [OPTIONS]

  Lists the VNIC attachments in the specified compartment. A VNIC attachment
  resides in the same compartment as the attached instance. The list can be
  filtered by instance, VNIC, or Availability Domain.

Options:
  -c, --compartment-id TEXT   The OCID of the compartment. [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --instance-id TEXT          The OCID of the instance.
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --vnic-id TEXT              The OCID of the VNIC.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment --help
Usage: oci compute volume-attachment [OPTIONS] COMMAND [ARGS]...

  A base object for all types of attachments between a storage volume and an
  instance. For specific details about iSCSI attachments, see
  [IScsiVolumeAttachment Reference].

  For general information about volume attachments, see [Overview of Block
  Volume Storage].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  attach  Attaches the specified storage volume to the...
  detach  Detaches a storage volume from an instance.
  get     Gets information about the specified volume...
  list    Lists the volume attachments in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment attach --help
Usage: oci compute volume-attachment attach [OPTIONS]

  Attaches the specified storage volume to the specified instance.

Options:
  --instance-id TEXT              The OCID of the instance. [required]
  --type TEXT                     The type of volume. The only supported value
                                  is "iscsi". [required]
  --volume-id TEXT                The OCID of the volume. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it cannot be changed. Avoid
                                  entering confidential information.
  --is-read-only BOOLEAN          Whether the attachment was created in read-
                                  only mode.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment detach --help
Usage: oci compute volume-attachment detach [OPTIONS]

  Detaches a storage volume from an instance. You must specify the OCID of the
  volume attachment.

  This is an asynchronous operation. The attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --volume-attachment-id TEXT     The OCID of the volume attachment. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment get --help
Usage: oci compute volume-attachment get [OPTIONS]

  Gets information about the specified volume attachment.

Options:
  --volume-attachment-id TEXT  The OCID of the volume attachment. [required]
  --from-json TEXT             Provide input to this command as a JSON document
                               from a file.
                               
                               Options can still be provided on
                               the command line. If an option exists in both the
                               JSON document and the command line then the
                               command line specified value will be used
  -?, -h, --help               Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci compute volume-attachment list --help
Usage: oci compute volume-attachment list [OPTIONS]

  Lists the volume attachments in the specified compartment. You can filter
  the list by specifying an instance OCID, volume OCID, or both.

  Currently, the only supported volume attachment type is
  [IScsiVolumeAttachment].

Options:
  -c, --compartment-id TEXT   The OCID of the compartment. [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --instance-id TEXT          The OCID of the instance.
  --volume-id TEXT            The OCID of the volume.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db --help
Usage: oci db [OPTIONS] COMMAND [ARGS]...

  Database Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  backup                  A database backup To use any of the API...
  data-guard-association  The properties that define a Data Guard...
  database                An Oracle database on a DB System.
  node                    A server where Oracle database software is...
  patch                   A Patch for a DB System or DB Home.
  patch-history           The record of a patch action on a specified...
  system                  The Database Service supports several types...
  system-shape            The shape of the DB System.
  version                 The Oracle database software version.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db backup --help
Usage: oci db backup [OPTIONS] COMMAND [ARGS]...

  A database backup To use any of the API operations, you must be authorized
  in an IAM policy. If you're not authorized, talk to an administrator. If
  you're an administrator who needs to write policies to give users access,
  see [Getting Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new backup in the specified...
  delete  Deletes a full backup.
  get     Gets information about the specified backup.
  list    Gets a list of backups based on the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db backup create --help
Usage: oci db backup create [OPTIONS]

  Creates a new backup in the specified database based on the request
  parameters you provide. If you previously used RMAN or dbcli to configure
  backups and then you switch to using the Console or the API for backups, a
  new backup configuration is created and associated with your database. This
  means that you can no longer rely on your previously configured unmanaged
  backups to work.

Options:
  --database-id TEXT              The OCID of the database. [required]
  --display-name TEXT             The user-friendly name for the backup. It does
                                  not have to be unique. [required]
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED|FAILED|RESTORING]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db backup delete --help
Usage: oci db backup delete [OPTIONS]

  Deletes a full backup. You cannot delete automatic backups using this API.

Options:
  --backup-id TEXT                The backup OCID. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED|FAILED|RESTORING]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db backup get --help
Usage: oci db backup get [OPTIONS]

  Gets information about the specified backup.

Options:
  --backup-id TEXT  The backup OCID. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db backup list --help
Usage: oci db backup list [OPTIONS]

  Gets a list of backups based on the databaseId or compartmentId specified.
  Either one of the query parameters must be provided.

Options:
  --database-id TEXT         The OCID of the database.
  -c, --compartment-id TEXT  The compartment OCID.
  --limit INTEGER            The maximum number of items to return.
  --page TEXT                The pagination token to continue listing from.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association --help
Usage: oci db data-guard-association [OPTIONS] COMMAND [ARGS]...

  The properties that define a Data Guard association.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

  For information about endpoints and signing API requests, see [About the
  API]. For information about available SDKs and tools, see [SDKS and Other
  Tools].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Creates a new Data Guard association.
  failover    Performs a failover to transition the standby...
  get         Gets the specified Data Guard association's...
  list        Lists all Data Guard associations for the...
  reinstate   Reinstates the database identified by the...
  switchover  Performs a switchover to transition the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association create --help
Usage: oci db data-guard-association create [OPTIONS] COMMAND [ARGS]...

  Creates a new Data Guard association.  A Data Guard association represents
  the replication relationship between the specified database and a peer
  database. For more information, see [Using Oracle Data Guard].

  All Oracle Cloud Infrastructure resources, including Data Guard
  associations, get an Oracle-assigned, unique ID called an Oracle Cloud
  Identifier (OCID). When you create a resource, you can find its OCID in the
  response. You can also retrieve a resource's OCID by using a List API
  operation on that resource type, or by viewing the resource in the Console.
  Fore more information, see [Resource Identifiers].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  from-existing-db-system  Creates a new Data Guard association using an...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association create from-existing-db-system --help
Usage: oci db data-guard-association create from-existing-db-system 
           [OPTIONS]

  Creates a new Data Guard association using an existing DB System.  A Data
  Guard association represents the replication relationship between the
  specified database and a peer database. For more information, see [Using
  Oracle Data Guard].

  All Oracle Cloud Infrastructue resources, including Data Guard associations,
  get an Oracle-assigned, unique ID called an Oracle Cloud Identifier (OCID).
  When you create a resource, you can find its OCID in the response. You can
  also retrieve a resource's OCID by using a List API operation on that
  resource type, or by viewing the resource in the Console. Fore more
  information, see [Resource Identifiers].

Options:
  --database-id TEXT              The database [OCID]. [required]
  --creation-type TEXT            Specifies where to create the associated
                                  database. "ExistingDbSystem" is the only
                                  supported `creationType` value. [required]
  --database-admin-password TEXT  A strong password for the `SYS`, `SYSTEM`, and
                                  `PDB Admin` users to apply during standby
                                  creation.
                                  
                                  The password must contain no fewer
                                  than nine characters and include:
                                  
                                  * At least
                                  two uppercase characters.
                                  
                                  * At least two
                                  lowercase characters.
                                  
                                  * At least two numeric
                                  characters.
                                  
                                  * At least two special
                                  characters. Valid special characters include
                                  "_", "#", and "-" only.
                                  
                                  **The password MUST
                                  be the same as the primary admin password.**
                                  [required]
  --protection-mode [MAXIMUM_AVAILABILITY|MAXIMUM_PERFORMANCE|MAXIMUM_PROTECTION]
                                  The protection mode to set up between the
                                  primary and standby databases. For more
                                  information, see [Oracle Data Guard Protection
                                  Modes] in the Oracle Data Guard documentation.
                                  **IMPORTANT** - The only protection mode
                                  currently supported by the Database Service is
                                  MAXIMUM_PERFORMANCE. [required]
  --transport-type [SYNC|ASYNC|FASTSYNC]
                                  The redo transport type to use for this Data
                                  Guard association.  Valid values depend on the
                                  specified `protectionMode`:
                                  
                                  *
                                  MAXIMUM_AVAILABILITY - SYNC or FASTSYNC *
                                  MAXIMUM_PERFORMANCE - ASYNC *
                                  MAXIMUM_PROTECTION - SYNC
                                  
                                  For more
                                  information, see [Redo Transport Services] in
                                  the Oracle Data Guard documentation.
                                  **IMPORTANT** - The only transport type
                                  currently supported by the Database Service is
                                  ASYNC. [required]
  --peer-db-system-id TEXT        The OCID of the DB System to create the
                                  standby database on. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association failover --help
Usage: oci db data-guard-association failover [OPTIONS]

  Performs a failover to transition the standby database identified by the
  `databaseId` parameter into the specified Data Guard association's primary
  role after the existing primary database fails or becomes unreachable.

  A failover might result in data loss depending on the protection mode in
  effect at the time of the primary database failure.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --database-admin-password TEXT  The DB System administrator password.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association get --help
Usage: oci db data-guard-association get [OPTIONS]

  Gets the specified Data Guard association's configuration information.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association list --help
Usage: oci db data-guard-association list [OPTIONS]

  Lists all Data Guard associations for the specified database.

Options:
  --database-id TEXT   The database [OCID]. [required]
  --limit INTEGER      The maximum number of items to return.
  --page TEXT          The pagination token to continue listing from.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association reinstate --help
Usage: oci db data-guard-association reinstate [OPTIONS]

  Reinstates the database identified by the `databaseId` parameter into the
  standby role in a Data Guard association.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --database-admin-password TEXT  The DB System administrator password.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db data-guard-association switchover --help
Usage: oci db data-guard-association switchover [OPTIONS]

  Performs a switchover to transition the primary database of a Data Guard
  association into a standby role. The standby database associated with the
  `dataGuardAssociationId` assumes the primary database role.

  A switchover guarantees no data loss.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --data-guard-association-id TEXT
                                  The Data Guard association's [OCID].
                                  [required]
  --database-admin-password TEXT  The DB System administrator password.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database --help
Usage: oci db database [OPTIONS] COMMAND [ARGS]...

  An Oracle database on a DB System. For more information, see [Managing
  Oracle Databases].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create              Creates a new database in the given DB...
  create-from-backup  Creates a new database in the given DB System...
  delete              Deletes a database.
  get                 Gets information about a specific database.
  list                Lists all databases in a given DB System.
  patch               Perform a patch action for a given patch and...
  restore             Restore a Database based on the request...
  update              Update a Database based on the request...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database create --help
Usage: oci db database create [OPTIONS]

  Creates a new database in the given DB System.

Options:
  --db-system-id TEXT             The OCID of the DB System. [required]
  --source [NONE|DB_BACKUP]       Source of database:   NONE for creating a new
                                  database   DB_BACKUP for creating a new
                                  database by restoring a backup
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --admin-password TEXT           A strong password for SYS, SYSTEM, and PDB
                                  Admin. The password must be at least nine
                                  characters and contain at least two uppercase,
                                  two lowercase, two numbers, and two special
                                  characters. The special characters must be _,
                                  #, or -. [required]
  --character-set TEXT            The character set for the database. The
                                  default is AL32UTF8. Allowed values are:
                                  AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715,
                                  AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6,
                                  AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711,
                                  AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707,
                                  AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921,
                                  BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775,
                                  BN8BSCII, CDN8PC863, CEL8ISO8859P14,
                                  CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U,
                                  CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2,
                                  EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250,
                                  EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS,
                                  EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869,
                                  ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII,
                                  IS8PC861, IW8ISO8859P8, IW8MACHEBREWS,
                                  IW8MSWIN1255, IW8PC1507, JA16EUC,
                                  JA16EUCTILDE, JA16SJIS, JA16SJISTILDE,
                                  JA16VMS, KO16KSCCS, KO16MSWIN949, LA8ISO6937,
                                  LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774,
                                  LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865,
                                  NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA,
                                  RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS,
                                  TH8TISASCII, TR8DEC, TR8MACTURKISHS,
                                  TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437,
                                  UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG,
                                  WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S,
                                  WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP,
                                  WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8,
                                  ZHS16CGB231280, ZHS16GBK, ZHT16BIG5,
                                  ZHT16CCDC, ZHT16DBT, ZHT16HKSCS,
                                  ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS.
  --db-name TEXT                  The database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. [required]
  --db-workload TEXT              Database workload type. Allowed values are:
                                  OLTP, DSS
  --ncharacter-set TEXT           National character set for the database. The
                                  default is AL16UTF16. Allowed values are:
                                  AL16UTF16 or UTF8.
  --pdb-name TEXT                 Pluggable database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. Pluggable
                                  database should not be same as database name.
  --db-version TEXT               A valid Oracle database version. To get a list
                                  of supported versions, use the command 'oci db
                                  version list'. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database create-from-backup --help
Usage: oci db database create-from-backup [OPTIONS]

  Creates a new database in the given DB System from a backup.

Options:
  --db-system-id TEXT             The OCID of the DB System. [required]
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --admin-password TEXT           A strong password for SYS, SYSTEM, and PDB
                                  Admin. The password must be at least nine
                                  characters and contain at least two uppercase,
                                  two lowercase, two numbers, and two special
                                  characters. The special characters must be _,
                                  #, or -. [required]
  --backup-id TEXT                The backup OCID.  [required]
  --backup-tde-password TEXT      The password to open the TDE wallet.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database delete --help
Usage: oci db database delete [OPTIONS]

  Deletes a database.

Options:
  --database-id TEXT  The OCID of the database to delete.
  --force             Perform deletion without prompting for confirmation.
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database get --help
Usage: oci db database get [OPTIONS]

  Gets information about a specific database.

Options:
  --database-id TEXT  The database [OCID]. [required]
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database list --help
Usage: oci db database list [OPTIONS]

  Lists all databases in a given DB System.

Options:
  -c, --compartment-id TEXT  The compartment [OCID]. [required]
  --db-system-id TEXT        The [OCID] of the DB System. [required]
  --limit INTEGER            The maximum number of items to return.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database patch --help
Usage: oci db database patch [OPTIONS]

  Perform a patch action for a given patch and database.

Options:
  --database-id TEXT   The OCID of the database.
  --patch-action TEXT  The action to perform on the patch.
  --patch-id TEXT      The OCID of the patch.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database restore --help
Usage: oci db database restore [OPTIONS]

  Restore a Database based on the request parameters you provide.

Options:
  --database-id TEXT    The database [OCID]. [required]
  --database-scn TEXT   Restores using the backup with the System Change Number
                        (SCN) specified.
  --latest BOOLEAN      Restores to the last known good state with the least
                        possible data loss.
  --timestamp DATETIME  Restores to the timestamp specified.
  --if-match TEXT       For optimistic concurrency control. In the PUT or DELETE
                        call for a resource, set the `if-match` parameter to the
                        value of the etag from a previous GET or POST response
                        for that resource.  The resource will be updated or
                        deleted only if the etag you provide matches the
                        resource's current etag value.
  --from-json TEXT      Provide input to this command as a JSON document from a
                        file.
                        
                        Options can still be provided on the command
                        line. If an option exists in both the JSON document and
                        the command line then the command line specified value
                        will be used
  -?, -h, --help        Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db database update --help
Usage: oci db database update [OPTIONS]

  Update a Database based on the request parameters you provide.

Options:
  --database-id TEXT              The database [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|BACKUP_IN_PROGRESS|TERMINATING|TERMINATED|RESTORE_FAILED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --auto-backup-enabled BOOLEAN   If set to true, schedules backups
                                  automatically. Default is false.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node --help
Usage: oci db node [OPTIONS] COMMAND [ARGS]...

  A server where Oracle database software is running.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get         Gets information about the specified database...
  list        Gets a list of database nodes in the...
  reset       Powers off and powers on the specified DB...
  soft-reset  Performs an ACPI shutdown and powers on the...
  start       Powers on the specified DB node.
  stop        Powers off the specified DB node.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node get --help
Usage: oci db node get [OPTIONS]

  Gets information about the specified database node.

Options:
  --db-node-id TEXT  The database node [OCID]. [required]
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file.
                     
                     Options can still be provided on the command line.
                     If an option exists in both the JSON document and the
                     command line then the command line specified value will be
                     used
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node list --help
Usage: oci db node list [OPTIONS]

  Gets a list of database nodes in the specified DB System and compartment. A
  database node is a server running database software.

Options:
  -c, --compartment-id TEXT  The compartment [OCID]. [required]
  --db-system-id TEXT        The [OCID] of the DB System. [required]
  --limit INTEGER            The maximum number of items to return.
  --page TEXT                The pagination token to continue listing from.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node reset --help
Usage: oci db node reset [OPTIONS]

  Powers off and powers on the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|STOPPING|STOPPED|STARTING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node soft-reset --help
Usage: oci db node soft-reset [OPTIONS]

  Performs an ACPI shutdown and powers on the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|STOPPING|STOPPED|STARTING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node start --help
Usage: oci db node start [OPTIONS]

  Powers on the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|STOPPING|STOPPED|STARTING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db node stop --help
Usage: oci db node stop [OPTIONS]

  Powers off the specified DB node.

Options:
  --db-node-id TEXT               The database node [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|STOPPING|STOPPED|STARTING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch --help
Usage: oci db patch [OPTIONS] COMMAND [ARGS]...

  A Patch for a DB System or DB Home.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets information about a specified patch...
  list  Lists patches applicable to the requested...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch get --help
Usage: oci db patch get [OPTIONS] COMMAND [ARGS]...

  Gets information about a specified patch package.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  by-database   Get patch for a given database
  by-db-system  Gets information about a specified patch...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch get by-database --help
Usage: oci db patch get by-database [OPTIONS]

  Get patch for a given database

Options:
  --patch-id TEXT     The OCID of the patch. [required]
  --database-id TEXT  The database [OCID]. [required]
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch get by-db-system --help
Usage: oci db patch get by-db-system [OPTIONS]

  Gets information about a specified patch package.

Options:
  --db-system-id TEXT  The DB System [OCID]. [required]
  --patch-id TEXT      The OCID of the patch. [required]
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch list --help
Usage: oci db patch list [OPTIONS] COMMAND [ARGS]...

  Lists patches applicable to the requested database home.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  by-database   List patches for a given database
  by-db-system  Lists the patches applicable to the requested...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch list by-database --help
Usage: oci db patch list by-database [OPTIONS]

  List patches for a given database

Options:
  --limit INTEGER      The maximum number of items to return.
  --page TEXT          The pagination token to continue listing from.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --database-id TEXT   The database [OCID]. [required]
  -?, -h, --help       Show this message and exit.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch list by-db-system --help
Usage: oci db patch list by-db-system [OPTIONS]

  Lists the patches applicable to the requested DB System.

Options:
  --db-system-id TEXT  The DB System [OCID]. [required]
  --limit INTEGER      The maximum number of items to return.
  --page TEXT          The pagination token to continue listing from.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history --help
Usage: oci db patch-history [OPTIONS] COMMAND [ARGS]...

  The record of a patch action on a specified target.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets the patch history details for the...
  list  Gets history of the actions taken for patches...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history get --help
Usage: oci db patch-history get [OPTIONS] COMMAND [ARGS]...

  Gets the patch history details for the specified patchHistoryEntryId

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  by-database   Get patch history for a given database
  by-db-system  Gets the patch history details for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history get by-database --help
Usage: oci db patch-history get by-database [OPTIONS]

  Get patch history for a given database

Options:
  --patch-history-entry-id TEXT  The OCID of the patch history entry. [required]
  --database-id TEXT             The database [OCID]. [required]
  --from-json TEXT               Provide input to this command as a JSON
                                 document from a file.
                                 
                                 Options can still be
                                 provided on the command line. If an option
                                 exists in both the JSON document and the
                                 command line then the command line specified
                                 value will be used
  -?, -h, --help                 Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history get by-db-system --help
Usage: oci db patch-history get by-db-system [OPTIONS]

  Gets the patch history details for the specified patchHistoryEntryId.

Options:
  --db-system-id TEXT            The DB System [OCID]. [required]
  --patch-history-entry-id TEXT  The OCID of the patch history entry. [required]
  --from-json TEXT               Provide input to this command as a JSON
                                 document from a file.
                                 
                                 Options can still be
                                 provided on the command line. If an option
                                 exists in both the JSON document and the
                                 command line then the command line specified
                                 value will be used
  -?, -h, --help                 Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history list --help
Usage: oci db patch-history list [OPTIONS] COMMAND [ARGS]...

  Gets history of the actions taken for patches for the specified database
  home.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  by-database   List patch history entries for a given...
  by-db-system  Gets the history of the patch actions...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history list by-database --help
Usage: oci db patch-history list by-database [OPTIONS]

  List patch history entries for a given database

Options:
  --limit INTEGER      The maximum number of items to return.
  --page TEXT          The pagination token to continue listing from.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --database-id TEXT   The database [OCID]. [required]
  -?, -h, --help       Show this message and exit.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db patch-history list by-db-system --help
Usage: oci db patch-history list by-db-system [OPTIONS]

  Gets the history of the patch actions performed on the specified DB System.

Options:
  --db-system-id TEXT  The DB System [OCID]. [required]
  --limit INTEGER      The maximum number of items to return.
  --page TEXT          The pagination token to continue listing from.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system --help
Usage: oci db system [OPTIONS] COMMAND [ARGS]...

  The Database Service supports several types of DB Systems, ranging in size,
  price, and performance. For details about each type of system, see:

  - [Exadata DB Systems] - [Bare Metal or VM DB Systems]

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

  For information about access control and compartments, see [Overview of the
  Identity Service].

  For information about Availability Domains, see [Regions and Availability
  Domains].

  To get a list of Availability Domains, use the `ListAvailabilityDomains`
  operation in the Identity Service API.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get        Gets information about the specified DB...
  launch     Launches a new DB System in the specified...
  list       Gets a list of the DB Systems in the...
  patch      Perform an action on a Patch for a DB System.
  terminate  Terminates a DB System and permanently...
  update     Updates the properties of a DB System, such...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system get --help
Usage: oci db system get [OPTIONS]

  Gets information about the specified DB System.

Options:
  --db-system-id TEXT  The DB System [OCID]. [required]
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system launch --help
Usage: oci db system launch [OPTIONS]

  Launches a new DB System in the specified compartment and Availability
  Domain. You'll specify a single Oracle Database Edition that applies to all
  the databases on that DB System. The selected edition cannot be changed.

  An initial database is created on the DB System based on the request
  parameters you provide and some default options. For more information, see
  [Default Options for the Initial Database].

  The DB System will include a command line interface (CLI) that you can use
  to create additional databases and manage existing databases. For more
  information, see the [Oracle Database CLI Reference].

Options:
  --availability-domain TEXT      The Availability Domain where the DB System is
                                  located. [required]
  -c, --compartment-id TEXT       The Oracle Cloud ID (OCID) of the compartment
                                  the DB System  belongs in. [required]
  --cpu-core-count INTEGER        The number of CPU cores to enable. The valid
                                  values depend on the specified shape:
                                  
                                  -
                                  BM.DenseIO1.36 and BM.HighIO1.36 - Specify a
                                  multiple of 2, from 2 to 36. -
                                  BM.RACLocalStorage1.72 - Specify a multiple of
                                  4, from 4 to 72. - Exadata.Quarter1.84 -
                                  Specify a multiple of 2, from 22 to 84. -
                                  Exadata.Half1.168 - Specify a multiple of 4,
                                  from 44 to 168. - Exadata.Full1.336 - Specify
                                  a multiple of 8, from 88 to 336. [required]
  --database-edition [STANDARD_EDITION|ENTERPRISE_EDITION|ENTERPRISE_EDITION_EXTREME_PERFORMANCE|ENTERPRISE_EDITION_HIGH_PERFORMANCE]
                                  The Oracle Database Edition that applies to
                                  all the databases on the DB System.
                                  
                                  Exadata
                                  DB Systems and 2-node RAC DB Systems require
                                  ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
                                  [required]
  --hostname TEXT                 The host name for the DB System. The host name
                                  must begin with an alphabetic character and
                                  can contain a maximum of 30 alphanumeric
                                  characters, including hyphens (-).
                                  
                                  The
                                  maximum length of the combined hostname and
                                  domain is 63 characters.
                                  
                                  **Note:** The
                                  hostname must be unique within the subnet. If
                                  it is not unique, the DB System will fail to
                                  provision. [required]
  --shape TEXT                    The shape of the DB System. The shape
                                  determines resources allocated to the DB
                                  System - CPU cores and memory for VM shapes;
                                  CPU cores, memory and storage for non-VM (or
                                  bare metal) shapes. To get a list of shapes,
                                  use the [ListDbSystemShapes] operation.
                                  [required]
  --subnet-id TEXT                The OCID of the subnet the DB System is
                                  associated with.
                                  
                                  **Subnet Restrictions:** -
                                  For single node and 2-node (RAC) DB Systems,
                                  do not use a subnet that overlaps with
                                  192.168.16.16/28 - For Exadata and VM-based
                                  RAC DB Systems, do not use a subnet that
                                  overlaps with 192.168.128.0/20
                                  
                                  These subnets
                                  are used by the Oracle Clusterware private
                                  interconnect on the database instance.
                                  Specifying an overlapping subnet will cause
                                  the private interconnect to malfunction. This
                                  restriction applies to both the client subnet
                                  and backup subnet. [required]
  --backup-subnet-id TEXT         The OCID of the backup network subnet the DB
                                  System is associated with. Applicable only to
                                  Exadata.
                                  
                                  **Subnet Restrictions:** See above
                                  subnetId's **Subnet Restriction**.
  --cluster-name TEXT             Cluster name for Exadata and 2-node RAC DB
                                  Systems. The cluster name must begin with an
                                  an alphabetic character, and may contain
                                  hyphens (-). Underscores (_) are not
                                  permitted. The cluster name can be no longer
                                  than 11 characters and is not case sensitive.
  --data-storage-percentage INTEGER
                                  The percentage assigned to DATA storage (user
                                  data and database files). The remaining
                                  percentage is assigned to RECO storage
                                  (database redo logs, archive logs, and
                                  recovery manager backups). Specify 80 or 40.
                                  The default is 80 percent assigned to DATA
                                  storage. This is not applicable for VM based
                                  DB systems.
  --disk-redundancy [HIGH|NORMAL]
                                  The type of redundancy configured for the DB
                                  System. Normal is 2-way redundancy,
                                  recommended for test and development systems.
                                  High is 3-way redundancy, recommended for
                                  production systems.
  --display-name TEXT             The user-friendly name for the DB System. It
                                  does not have to be unique.
  --domain TEXT                   A domain name used for the DB System. If the
                                  Oracle-provided Internet and VCN Resolver is
                                  enabled for the specified subnet, the domain
                                  name for the subnet is used (don't provide
                                  one). Otherwise, provide a valid DNS domain
                                  name. Hyphens (-) are not permitted.
  --initial-data-storage-size-in-gb INTEGER
                                  Size, in GBs, of the initial data volume that
                                  will be created and attached to VM-shape based
                                  DB system. This storage can later be scaled up
                                  if needed. Note that the total storage size
                                  attached will be more than what is requested,
                                  to account for REDO/RECO space and software
                                  volume.
  --license-model [LICENSE_INCLUDED|BRING_YOUR_OWN_LICENSE]
                                  The Oracle license model that applies to all
                                  the databases on the DB System. The default is
                                  LICENSE_INCLUDED.
  --node-count INTEGER            Number of nodes to launch for a VM-shape based
                                  RAC DB system.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --admin-password TEXT           A strong password for SYS, SYSTEM, and PDB
                                  Admin. The password must be at least nine
                                  characters and contain at least two uppercase,
                                  two lowercase, two numbers, and two special
                                  characters. The special characters must be _,
                                  #, or -. [required]
  --character-set TEXT            The character set for the database. The
                                  default is AL32UTF8. Allowed values are:
                                  AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715,
                                  AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6,
                                  AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711,
                                  AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707,
                                  AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921,
                                  BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775,
                                  BN8BSCII, CDN8PC863, CEL8ISO8859P14,
                                  CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U,
                                  CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2,
                                  EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250,
                                  EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS,
                                  EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869,
                                  ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII,
                                  IS8PC861, IW8ISO8859P8, IW8MACHEBREWS,
                                  IW8MSWIN1255, IW8PC1507, JA16EUC,
                                  JA16EUCTILDE, JA16SJIS, JA16SJISTILDE,
                                  JA16VMS, KO16KSCCS, KO16MSWIN949, LA8ISO6937,
                                  LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774,
                                  LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865,
                                  NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA,
                                  RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS,
                                  TH8TISASCII, TR8DEC, TR8MACTURKISHS,
                                  TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437,
                                  UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG,
                                  WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S,
                                  WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP,
                                  WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8,
                                  ZHS16CGB231280, ZHS16GBK, ZHT16BIG5,
                                  ZHT16CCDC, ZHT16DBT, ZHT16HKSCS,
                                  ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS.
  --db-name TEXT                  The database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. [required]
  --db-version TEXT               A valid Oracle database version. To get a list
                                  of supported versions, use the command 'oci db
                                  version list'. [required]
  --db-workload TEXT              Database workload type. Allowed values are:
                                  OLTP, DSS
  --ncharacter-set TEXT           National character set for the database. The
                                  default is AL16UTF16. Allowed values are:
                                  AL16UTF16 or UTF8.
  --pdb-name TEXT                 Pluggable database name. It must begin with an
                                  alphabetic character and can contain a maximum
                                  of eight alphanumeric characters. Special
                                  characters are not permitted. Pluggable
                                  database should not be same as database name.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to use for SSH access to the DB System. Use a
                                  newline character to separate multiple keys.
                                  The length of the combined keys cannot exceed
                                  10,000 characters. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system list --help
Usage: oci db system list [OPTIONS]

  Gets a list of the DB Systems in the specified compartment.

Options:
  -c, --compartment-id TEXT  The compartment [OCID]. [required]
  --limit INTEGER            The maximum number of items to return.
  --page TEXT                The pagination token to continue listing from.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system patch --help
Usage: oci db system patch [OPTIONS]

  Perform an action on a Patch for a DB System.

Options:
  --db-system-id TEXT  The OCID of the DB System.
  --patch-action TEXT  The action to perform on the patch.
  --patch-id TEXT      The OCID of the patch.
  -?, -h, --help       Show this message and exit.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system terminate --help
Usage: oci db system terminate [OPTIONS]

  Terminates a DB System and permanently deletes it and any databases running
  on it, and any storage volumes attached to it. The database data is local to
  the DB System and will be lost when the system is terminated. Oracle
  recommends that you back up any data in the DB System prior to terminating
  it.

Options:
  --db-system-id TEXT             The DB System [OCID]. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system update --help
Usage: oci db system update [OPTIONS]

  Updates the properties of a DB System, such as the CPU core count.

Options:
  --db-system-id TEXT             The DB System [OCID]. [required]
  --cpu-core-count INTEGER        The number of CPU Cores to be set on the DB
                                  System. Applicable only for non-VM based DB
                                  systems.
  --data-storage-size-in-gbs INTEGER
                                  Size, in GBs, to which the currently attached
                                  storage needs to be scaled up to for VM based
                                  DB system. This must be greater than current
                                  storage size. Note that the total storage size
                                  attached will be more than what is requested,
                                  to account for REDO/RECO space and software
                                  volume.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|UPDATING|TERMINATING|TERMINATED|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --patch-action TEXT             The action to perform on the patch.
  --patch-id TEXT                 The OCID of the patch.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to use for SSH access to the DB System. Use a
                                  newline character to separate multiple keys.
                                  The length of the combined keys cannot exceed
                                  10,000 characters.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system-shape --help
Usage: oci db system-shape [OPTIONS] COMMAND [ARGS]...

  The shape of the DB System. The shape determines resources to allocate to
  the DB system - CPU cores and memory for VM shapes; CPU cores, memory and
  storage for non-VM (or bare metal) shapes. For a description of shapes, see
  [DB System Launch Options]. To use any of the API operations, you must be
  authorized in an IAM policy. If you're not authorized, talk to an
  administrator. If you're an administrator who needs to write policies to
  give users access, see [Getting Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Gets a list of the shapes that can be used to...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db system-shape list --help
Usage: oci db system-shape list [OPTIONS]

  Gets a list of the shapes that can be used to launch a new DB System. The
  shape determines resources to allocate to the DB system - CPU cores and
  memory for VM shapes; CPU cores, memory and storage for non-VM (or bare
  metal) shapes.

Options:
  --availability-domain TEXT  The name of the Availability Domain. [required]
  -c, --compartment-id TEXT   The compartment [OCID]. [required]
  --limit INTEGER             The maximum number of items to return.
  --page TEXT                 The pagination token to continue listing from.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db version --help
Usage: oci db version [OPTIONS] COMMAND [ARGS]...

  The Oracle database software version.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Gets a list of supported Oracle database...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci db version list --help
Usage: oci db version list [OPTIONS]

  Gets a list of supported Oracle database versions.

Options:
  -c, --compartment-id TEXT  The compartment [OCID]. [required]
  --limit INTEGER            The maximum number of items to return.
  --page TEXT                The pagination token to continue listing from.
  --db-system-shape TEXT     If provided, filters the results to the set of
                             database versions which are supported for the given
                             shape.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns --help
Usage: oci dns [OPTIONS] COMMAND [ARGS]...

  API for managing DNS zones, records, and policies.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  record  A DNS record.
  zone    A DNS zone.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record --help
Usage: oci dns record [OPTIONS] COMMAND [ARGS]...

  A DNS record.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  domain  A collection of DNS records for the same...
  rrset   A collection of DNS records of the same...
  zone    A collection of DNS records for the same...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record domain --help
Usage: oci dns record domain [OPTIONS] COMMAND [ARGS]...

  A collection of DNS records for the same domain.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Deletes all records at the specified zone and...
  get     Gets a list of all records at the specified...
  patch   Replaces records in the specified zone at a...
  update  Replaces records in the specified zone at a...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record domain delete --help
Usage: oci dns record domain delete [OPTIONS]

  Deletes all records at the specified zone and domain.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --domain TEXT               The target fully-qualified domain name (FQDN)
                              within the target zone. [required]
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --force                     Perform deletion without prompting for
                              confirmation.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record domain get --help
Usage: oci dns record domain get [OPTIONS]

  Gets a list of all records at the specified zone and domain. The results are
  sorted by `rtype` in alphabetical order by default. You can optionally
  filter and/or sort the results using the listed parameters.

Options:
  --zone-name-or-id TEXT     The name or OCID of the target zone. [required]
  --domain TEXT              The target fully-qualified domain name (FQDN)
                             within the target zone. [required]
  --if-none-match TEXT       The `If-None-Match` header field makes the request
                             method conditional on the absence of any current
                             representation of the target resource, when the
                             field-value is `*`, or having a selected
                             representation with an entity-tag that does not
                             match any of those listed in the field-value.
  --if-modified-since TEXT   The `If-Modified-Since` header field makes a GET or
                             HEAD request method conditional on the selected
                             representation's modification date being more
                             recent than the date provided in the field-value.
                             Transfer of the selected representation's data is
                             avoided if that data has not changed.
  --limit INTEGER            The maximum number of items to return in a page of
                             the collection.
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --zone-version TEXT        The version of the zone for which data is
                             requested.
  --rtype TEXT               Search by record type. Will match any record whose
                             [type] (case-insensitive) equals the provided
                             value.
  --sort-by [rtype|ttl]      The field by which to sort records.
  --sort-order [ASC|DESC]    The order to sort the resources.
  -c, --compartment-id TEXT  The OCID of the compartment the resource belongs
                             to.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record domain patch --help
Usage: oci dns record domain patch [OPTIONS]

  Replaces records in the specified zone at a domain. You can update one
  record or all records for the specified zone depending on the changes
  provided in the request body. You can also add or remove records using this
  function.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --domain TEXT               The target fully-qualified domain name (FQDN)
                              within the target zone. [required]
  --items COMPLEX TYPE        This option is a JSON list with items of type
                              RecordOperation.  For documentation on
                              RecordOperation please see our API reference:
                              https://docs.us-phoenix-1.oraclecloud.com/api/#.
                              This is a complex type whose value must be valid
                              JSON. The value can be provided as a string on the
                              command line or passed in as a file using
                              the
                              file://path/to/file syntax.
                              
                              The --generate-param-
                              json-input option can be used to generate an
                              example of the JSON which must be provided. We
                              recommend storing this example
                              in a file,
                              modifying it as needed and then passing it back in
                              via the file:// syntax.
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record domain update --help
Usage: oci dns record domain update [OPTIONS]

  Replaces records in the specified zone at a domain with the records
  specified in the request body. If a specified record does not exist, it will
  be created. If the record exists, then it will be updated to represent the
  record in the body of the request. If a record in the zone does not exist in
  the request body, the record will be removed from the zone.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --domain TEXT               The target fully-qualified domain name (FQDN)
                              within the target zone. [required]
  --items COMPLEX TYPE        This option is a JSON list with items of type
                              RecordDetails.  For documentation on RecordDetails
                              please see our API reference: https://docs.us-
                              phoenix-1.oraclecloud.com/api/#.
                              This is a complex
                              type whose value must be valid JSON. The value can
                              be provided as a string on the command line or
                              passed in as a file using
                              the file://path/to/file
                              syntax.
                              
                              The --generate-param-json-input option
                              can be used to generate an example of the JSON
                              which must be provided. We recommend storing this
                              example
                              in a file, modifying it as needed and then
                              passing it back in via the file:// syntax.
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --force                     Perform update without prompting for confirmation.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record rrset --help
Usage: oci dns record rrset [OPTIONS] COMMAND [ARGS]...

  A collection of DNS records of the same domain and type. For more
  information about record types, see [Resource Record (RR) TYPEs].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Deletes all records in the specified RRSet.
  get     Gets a list of all records in the specified...
  patch   Updates records in the specified RRSet.
  update  Replaces records in the specified RRSet.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record rrset delete --help
Usage: oci dns record rrset delete [OPTIONS]

  Deletes all records in the specified RRSet.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --domain TEXT               The target fully-qualified domain name (FQDN)
                              within the target zone. [required]
  --rtype TEXT                The type of the target RRSet within the target
                              zone. [required]
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --force                     Perform deletion without prompting for
                              confirmation.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record rrset get --help
Usage: oci dns record rrset get [OPTIONS]

  Gets a list of all records in the specified RRSet. The results are sorted by
  `recordHash` by default.

Options:
  --zone-name-or-id TEXT     The name or OCID of the target zone. [required]
  --domain TEXT              The target fully-qualified domain name (FQDN)
                             within the target zone. [required]
  --rtype TEXT               The type of the target RRSet within the target
                             zone. [required]
  --if-none-match TEXT       The `If-None-Match` header field makes the request
                             method conditional on the absence of any current
                             representation of the target resource, when the
                             field-value is `*`, or having a selected
                             representation with an entity-tag that does not
                             match any of those listed in the field-value.
  --if-modified-since TEXT   The `If-Modified-Since` header field makes a GET or
                             HEAD request method conditional on the selected
                             representation's modification date being more
                             recent than the date provided in the field-value.
                             Transfer of the selected representation's data is
                             avoided if that data has not changed.
  --limit INTEGER            The maximum number of items to return in a page of
                             the collection.
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --zone-version TEXT        The version of the zone for which data is
                             requested.
  -c, --compartment-id TEXT  The OCID of the compartment the resource belongs
                             to.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record rrset patch --help
Usage: oci dns record rrset patch [OPTIONS]

  Updates records in the specified RRSet.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --domain TEXT               The target fully-qualified domain name (FQDN)
                              within the target zone. [required]
  --rtype TEXT                The type of the target RRSet within the target
                              zone. [required]
  --items COMPLEX TYPE        This option is a JSON list with items of type
                              RecordOperation.  For documentation on
                              RecordOperation please see our API reference:
                              https://docs.us-phoenix-1.oraclecloud.com/api/#.
                              This is a complex type whose value must be valid
                              JSON. The value can be provided as a string on the
                              command line or passed in as a file using
                              the
                              file://path/to/file syntax.
                              
                              The --generate-param-
                              json-input option can be used to generate an
                              example of the JSON which must be provided. We
                              recommend storing this example
                              in a file,
                              modifying it as needed and then passing it back in
                              via the file:// syntax.
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record rrset update --help
Usage: oci dns record rrset update [OPTIONS]

  Replaces records in the specified RRSet.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --domain TEXT               The target fully-qualified domain name (FQDN)
                              within the target zone. [required]
  --rtype TEXT                The type of the target RRSet within the target
                              zone. [required]
  --items COMPLEX TYPE        This option is a JSON list with items of type
                              RecordDetails.  For documentation on RecordDetails
                              please see our API reference: https://docs.us-
                              phoenix-1.oraclecloud.com/api/#.
                              This is a complex
                              type whose value must be valid JSON. The value can
                              be provided as a string on the command line or
                              passed in as a file using
                              the file://path/to/file
                              syntax.
                              
                              The --generate-param-json-input option
                              can be used to generate an example of the JSON
                              which must be provided. We recommend storing this
                              example
                              in a file, modifying it as needed and then
                              passing it back in via the file:// syntax.
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --force                     Perform update without prompting for confirmation.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record zone --help
Usage: oci dns record zone [OPTIONS] COMMAND [ARGS]...

  A collection of DNS records for the same zone.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get     Gets all records in the specified zone.
  patch   Updates a collection of records in the...
  update  Replaces records in the specified zone with...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record zone get --help
Usage: oci dns record zone get [OPTIONS]

  Gets all records in the specified zone. The results are sorted by `domain`
  in alphabetical order by default. For more information about records, please
  see [Resource Record (RR) TYPEs].

Options:
  --zone-name-or-id TEXT        The name or OCID of the target zone. [required]
  --if-none-match TEXT          The `If-None-Match` header field makes the
                                request method conditional on the absence of any
                                current representation of the target resource,
                                when the field-value is `*`, or having a
                                selected representation with an entity-tag that
                                does not match any of those listed in the field-
                                value.
  --if-modified-since TEXT      The `If-Modified-Since` header field makes a GET
                                or HEAD request method conditional on the
                                selected representation's modification date
                                being more recent than the date provided in the
                                field-value.  Transfer of the selected
                                representation's data is avoided if that data
                                has not changed.
  --limit INTEGER               The maximum number of items to return in a page
                                of the collection.
  --page TEXT                   The value of the `opc-next-page` response header
                                from the previous "List" call.
  --zone-version TEXT           The version of the zone for which data is
                                requested.
  --domain TEXT                 Search by domain. Will match any record whose
                                domain (case-insensitive) equals the provided
                                value.
  --domain-contains TEXT        Search by domain. Will match any record whose
                                domain (case-insensitive) contains the provided
                                value.
  --rtype TEXT                  Search by record type. Will match any record
                                whose [type] (case-insensitive) equals the
                                provided value.
  --sort-by [domain|rtype|ttl]  The field by which to sort records.
  --sort-order [ASC|DESC]       The order to sort the resources.
  -c, --compartment-id TEXT     The OCID of the compartment the resource belongs
                                to.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record zone patch --help
Usage: oci dns record zone patch [OPTIONS]

  Updates a collection of records in the specified zone. You can update one
  record or all records for the specified zone depending on the changes
  provided in the request body. You can also add or remove records using this
  function.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --items COMPLEX TYPE        This option is a JSON list with items of type
                              RecordOperation.  For documentation on
                              RecordOperation please see our API reference:
                              https://docs.us-phoenix-1.oraclecloud.com/api/#.
                              This is a complex type whose value must be valid
                              JSON. The value can be provided as a string on the
                              command line or passed in as a file using
                              the
                              file://path/to/file syntax.
                              
                              The --generate-param-
                              json-input option can be used to generate an
                              example of the JSON which must be provided. We
                              recommend storing this example
                              in a file,
                              modifying it as needed and then passing it back in
                              via the file:// syntax.
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns record zone update --help
Usage: oci dns record zone update [OPTIONS]

  Replaces records in the specified zone with the records specified in the
  request body. If a specified record does not exist, it will be created. If
  the record exists, then it will be updated to represent the record in the
  body of the request. If a record in the zone does not exist in the request
  body, the record will be removed from the zone.

Options:
  --zone-name-or-id TEXT      The name or OCID of the target zone. [required]
  --items COMPLEX TYPE        This option is a JSON list with items of type
                              RecordDetails.  For documentation on RecordDetails
                              please see our API reference: https://docs.us-
                              phoenix-1.oraclecloud.com/api/#.
                              This is a complex
                              type whose value must be valid JSON. The value can
                              be provided as a string on the command line or
                              passed in as a file using
                              the file://path/to/file
                              syntax.
                              
                              The --generate-param-json-input option
                              can be used to generate an example of the JSON
                              which must be provided. We recommend storing this
                              example
                              in a file, modifying it as needed and then
                              passing it back in via the file:// syntax.
  --if-match TEXT             The `If-Match` header field makes the request
                              method conditional on the existence of at least
                              one current representation of the target resource,
                              when the field-value is `*`, or having a current
                              representation of the target resource that has an
                              entity-tag matching a member of the list of
                              entity-tags provided in the field-value.
  --if-unmodified-since TEXT  The `If-Unmodified-Since` header field makes the
                              request method conditional on the selected
                              representation's last modification date being
                              earlier than or equal to the date provided in the
                              field-value.  This field accomplishes the same
                              purpose as If-Match for cases where the user agent
                              does not have an entity-tag for the
                              representation.
  -c, --compartment-id TEXT   The OCID of the compartment the resource belongs
                              to.
  --force                     Perform update without prompting for confirmation.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file.
                              
                              Options can still be provided on the
                              command line. If an option exists in both the JSON
                              document and the command line then the command
                              line specified value will be used
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns zone --help
Usage: oci dns zone [OPTIONS] COMMAND [ARGS]...

  A DNS zone.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new zone in the specified...
  delete  Deletes the specified zone.
  get     Gets information about the specified zone,...
  list    Gets a list of all zones in the specified...
  update  Updates the specified secondary zone with...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns zone create --help
Usage: oci dns zone create [OPTIONS]

  Creates a new zone in the specified compartment. The `compartmentId` query
  parameter is required if the `Content-Type` header for the request is
  `text/dns`.

Options:
  --name TEXT                     The name of the zone. [required]
  --zone-type [PRIMARY|SECONDARY]
                                  The type of the zone. Must be either `PRIMARY`
                                  or `SECONDARY`. [required]
  --external-masters COMPLEX TYPE
                                  External master servers for the zone.
                                  
                                  This
                                  option is a JSON list with items of type
                                  ExternalMaster.  For documentation on
                                  ExternalMaster please see our API reference:
                                  https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  -c, --compartment-id TEXT       The OCID of the compartment the resource
                                  belongs to.  [required]
  --wait-for-state [ACTIVE|CREATING|DELETED|DELETING|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns zone delete --help
Usage: oci dns zone delete [OPTIONS]

  Deletes the specified zone. A `204` response indicates that zone has been
  successfully deleted.

Options:
  --zone-name-or-id TEXT          The name or OCID of the target zone.
                                  [required]
  --if-match TEXT                 The `If-Match` header field makes the request
                                  method conditional on the existence of at
                                  least one current representation of the target
                                  resource, when the field-value is `*`, or
                                  having a current representation of the target
                                  resource that has an entity-tag matching a
                                  member of the list of entity-tags provided in
                                  the field-value.
  --if-unmodified-since TEXT      The `If-Unmodified-Since` header field makes
                                  the request method conditional on the selected
                                  representation's last modification date being
                                  earlier than or equal to the date provided in
                                  the field-value.  This field accomplishes the
                                  same purpose as If-Match for cases where the
                                  user agent does not have an entity-tag for the
                                  representation.
  -c, --compartment-id TEXT       The OCID of the compartment the resource
                                  belongs to.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACTIVE|CREATING|DELETED|DELETING|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns zone get --help
Usage: oci dns zone get [OPTIONS]

  Gets information about the specified zone, including its creation date, zone
  type, and serial.

Options:
  --zone-name-or-id TEXT     The name or OCID of the target zone. [required]
  --if-none-match TEXT       The `If-None-Match` header field makes the request
                             method conditional on the absence of any current
                             representation of the target resource, when the
                             field-value is `*`, or having a selected
                             representation with an entity-tag that does not
                             match any of those listed in the field-value.
  --if-modified-since TEXT   The `If-Modified-Since` header field makes a GET or
                             HEAD request method conditional on the selected
                             representation's modification date being more
                             recent than the date provided in the field-value.
                             Transfer of the selected representation's data is
                             avoided if that data has not changed.
  -c, --compartment-id TEXT  The OCID of the compartment the resource belongs
                             to.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns zone list --help
Usage: oci dns zone list [OPTIONS]

  Gets a list of all zones in the specified compartment. The collection can be
  filtered by name, time created, and zone type.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment the resource
                                  belongs to. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  page of the collection.
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --name TEXT                     A case-sensitive filter for zone names. Will
                                  match any zone with a name that equals the
                                  provided value.
  --name-contains TEXT            Search by zone name. Will match any zone whose
                                  name (case-insensitive) contains the provided
                                  value.
  --zone-type [PRIMARY|SECONDARY]
                                  Search by zone type, `PRIMARY` or `SECONDARY`.
                                  Will match any zone whose type equals the
                                  provided value.
  --time-created-greater-than-or-equal-to DATETIME
                                  An [RFC 3339] timestamp that states all
                                  returned resources were created on or after
                                  the indicated time.
  --time-created-less-than DATETIME
                                  An [RFC 3339] timestamp that states all
                                  returned resources were created before the
                                  indicated time.
  --sort-by [name|zoneType|timeCreated]
                                  The field by which to sort zones.
  --sort-order [ASC|DESC]         The order to sort the resources.
  --lifecycle-state [ACTIVE|CREATING|DELETED|DELETING|FAILED]
                                  The state of a resource.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci dns zone update --help
Usage: oci dns zone update [OPTIONS]

  Updates the specified secondary zone with your new external master server
  information. For more information about secondary zone, see [Manage DNS
  Service Zone].

Options:
  --zone-name-or-id TEXT          The name or OCID of the target zone.
                                  [required]
  --external-masters COMPLEX TYPE
                                  External master servers for the zone.
                                  
                                  This
                                  option is a JSON list with items of type
                                  ExternalMaster.  For documentation on
                                  ExternalMaster please see our API reference:
                                  https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 The `If-Match` header field makes the request
                                  method conditional on the existence of at
                                  least one current representation of the target
                                  resource, when the field-value is `*`, or
                                  having a current representation of the target
                                  resource that has an entity-tag matching a
                                  member of the list of entity-tags provided in
                                  the field-value.
  --if-unmodified-since TEXT      The `If-Unmodified-Since` header field makes
                                  the request method conditional on the selected
                                  representation's last modification date being
                                  earlier than or equal to the date provided in
                                  the field-value.  This field accomplishes the
                                  same purpose as If-Match for cases where the
                                  user agent does not have an entity-tag for the
                                  representation.
  -c, --compartment-id TEXT       The OCID of the compartment the resource
                                  belongs to.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [ACTIVE|CREATING|DELETED|DELETING|FAILED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam --help
Usage: oci iam [OPTIONS] COMMAND [ARGS]...

  Identity and Access Management Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  availability-domain  One or more isolated, fault-tolerant Oracle...
  compartment          A collection of related resources.
  customer-secret-key  A `CustomerSecretKey` is an Oracle-provided...
  dynamic-group        An dynamic group defines a matching rule.
  group                A collection of users who all need the same...
  policy               A document that specifies the type of access...
  region               A localized geographic area, such as Phoenix,...
  region-subscription  An object that represents your tenancy's...
  tag                  A tag definition that belongs to a specific...
  tag-namespace        A managed container for defined tags.
  user                 An individual employee or system that needs...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam availability-domain --help
Usage: oci iam availability-domain [OPTIONS] COMMAND [ARGS]...

  One or more isolated, fault-tolerant Oracle data centers that host cloud
  resources such as instances, volumes, and subnets. A region contains several
  Availability Domains. For more information, see [Regions and Availability
  Domains].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the Availability Domains in your...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam availability-domain list --help
Usage: oci iam availability-domain list [OPTIONS]

  Lists the Availability Domains in your tenancy. Specify the OCID of either
  the tenancy or another of your compartments as the value for the compartment
  ID (remember that the tenancy is simply the root compartment). See [Where to
  Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment --help
Usage: oci iam compartment [OPTIONS] COMMAND [ARGS]...

  A collection of related resources. Compartments are a fundamental component
  of Oracle Cloud Infrastructure for organizing and isolating your cloud
  resources. You use them to clearly separate resources for the purposes of
  measuring usage and billing, access (through the use of IAM Service
  policies), and isolation (separating the resources for one project or
  business unit from another). A common approach is to create a compartment
  for each major part of your organization. For more information, see
  [Overview of the IAM Service] and also [Setting Up Your Tenancy].

  To place a resource in a compartment, simply specify the compartment ID in
  the "Create" request object when initially creating the resource. For
  example, to launch an instance into a particular compartment, specify that
  compartment's OCID in the `LaunchInstance` request. You can't move an
  existing resource from one compartment to another.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new compartment in your tenancy.
  get     Gets the specified compartment's information.
  list    Lists the compartments in your tenancy.
  update  Updates the specified compartment's...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment create --help
Usage: oci iam compartment create [OPTIONS]

  Creates a new compartment in your tenancy.

  **Important:** Compartments cannot be deleted.

  You must specify your tenancy's OCID as the compartment ID in the request
  object. Remember that the tenancy is simply the root compartment. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the compartment, which must be unique
  across all compartments in your tenancy. You can use this name or the OCID
  when writing policies that apply to the compartment. For more information
  about policies, see [How Policies Work].

  You must also specify a *description* for the compartment (although it can
  be an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateCompartment].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the
                                  compartment. [required]
  --name TEXT                     The name you assign to the compartment during
                                  creation. The name must be unique across all
                                  compartments in the tenancy. [required]
  --description TEXT              The description you assign to the compartment
                                  during creation. Does not have to be unique,
                                  and it's changeable. [required]
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment get --help
Usage: oci iam compartment get [OPTIONS]

  Gets the specified compartment's information.

  This operation does not return a list of all the resources inside the
  compartment. There is no single API operation that does that. Compartments
  can contain multiple types of resources (instances, block storage volumes,
  etc.). To find out what's in a compartment, you must call the "List"
  operation for each resource type and specify the compartment's OCID as a
  query parameter in the request. For example, call the [ListInstances]
  operation in the Cloud Compute Service or the [ListVolumes] operation in
  Cloud Block Storage.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment list --help
Usage: oci iam compartment list [OPTIONS]

  Lists the compartments in your tenancy. You must specify your tenancy's OCID
  as the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam compartment update --help
Usage: oci iam compartment update [OPTIONS]

  Updates the specified compartment's description or name. You can't update
  the root compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --description TEXT              The description you assign to the compartment.
                                  Does not have to be unique, and it's
                                  changeable.
  --name TEXT                     The new name you assign to the compartment.
                                  The name must be unique across all
                                  compartments in the tenancy.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key --help
Usage: oci iam customer-secret-key [OPTIONS] COMMAND [ARGS]...

  A `CustomerSecretKey` is an Oracle-provided key for using the Object Storage
  Service's [Amazon S3 compatible API]. A user can have up to two secret keys
  at a time.

  **Note:** The secret key is always an Oracle-generated string; you can't
  change it to a string of your choice.

  For more information, see [Managing User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new secret key for the specified...
  delete  Deletes the specified secret key for the...
  list    Lists the secret keys for the specified user.
  update  Updates the specified secret key's...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key create --help
Usage: oci iam customer-secret-key create [OPTIONS]

  Creates a new secret key for the specified user. Secret keys are used for
  authentication with the Object Storage Service's Amazon S3 compatible API.
  For information, see [Managing User Credentials].

  You must specify a *description* for the secret key (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateCustomerSecretKey].

  Every user has permission to create a secret key for *their own user ID*. An
  administrator in your organization does not need to write a policy to give
  users this ability. To compare, administrators who have permission to the
  tenancy can use this operation to create a secret key for any user,
  including themselves.

Options:
  --display-name TEXT  The name you assign to the secret key during creation.
                       Does not have to be unique, and it's changeable.
                       [required]
  --user-id TEXT       The OCID of the user. [required]
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key delete --help
Usage: oci iam customer-secret-key delete [OPTIONS]

  Deletes the specified secret key for the specified user.

Options:
  --user-id TEXT                 The OCID of the user. [required]
  --customer-secret-key-id TEXT  The OCID of the secret key. [required]
  --if-match TEXT                For optimistic concurrency control. In the PUT
                                 or DELETE call for a resource, set the `if-
                                 match` parameter to the value of the etag from
                                 a previous GET or POST response for that
                                 resource.  The resource will be updated or
                                 deleted only if the etag you provide matches
                                 the resource's current etag value.
  --force                        Perform deletion without prompting for
                                 confirmation.
  --from-json TEXT               Provide input to this command as a JSON
                                 document from a file.
                                 
                                 Options can still be
                                 provided on the command line. If an option
                                 exists in both the JSON document and the
                                 command line then the command line specified
                                 value will be used
  -?, -h, --help                 Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key list --help
Usage: oci iam customer-secret-key list [OPTIONS]

  Lists the secret keys for the specified user. The returned object contains
  the secret key's OCID, but not the secret key itself. The actual secret key
  is returned only upon creation.

Options:
  --user-id TEXT    The OCID of the user. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam customer-secret-key update --help
Usage: oci iam customer-secret-key update [OPTIONS]

  Updates the specified secret key's description.

Options:
  --user-id TEXT                 The OCID of the user. [required]
  --customer-secret-key-id TEXT  The OCID of the secret key. [required]
  --display-name TEXT            The description you assign to the secret key.
                                 Does not have to be unique, and it's
                                 changeable.
  --if-match TEXT                For optimistic concurrency control. In the PUT
                                 or DELETE call for a resource, set the `if-
                                 match` parameter to the value of the etag from
                                 a previous GET or POST response for that
                                 resource.  The resource will be updated or
                                 deleted only if the etag you provide matches
                                 the resource's current etag value.
  --from-json TEXT               Provide input to this command as a JSON
                                 document from a file.
                                 
                                 Options can still be
                                 provided on the command line. If an option
                                 exists in both the JSON document and the
                                 command line then the command line specified
                                 value will be used
  -?, -h, --help                 Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam dynamic-group --help
Usage: oci iam dynamic-group [OPTIONS] COMMAND [ARGS]...

  An dynamic group defines a matching rule. Every bare metal/vm instance is
  deployed with an instance certificate. The certificate contains metadata
  about the instance. It contains the instance OCID and the compartment OCID,
  along with a few other optional properties. When an API call is made using
  this instance certificate as the authenticator, the certificate may be
  matched to one or multiple dynamic groups. Depending on policies written
  against these dynamic groups, the instance will get access to that API.

  This works like regular user/group memebership. But in that case the
  membership is a static relationship, whereas in dynamic group, the
  membership of an instance certificate to dynamic groups are determined
  during runtime.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new dynamic group in your tenancy.
  delete  Deletes the specified dynamic group.
  get     Gets the specified dynamic group's...
  list    Lists the dynamic groups in your tenancy.
  update  Updates the specified dynamic group.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam dynamic-group create --help
Usage: oci iam dynamic-group create [OPTIONS]

  Creates a new dynamic group in your tenancy.

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the dynamic group, which must be unique
  across all dynamic groups in your tenancy, and cannot be changed. Note that
  this name has to be also unique accross all groups in your tenancy. You can
  use this name or the OCID when writing policies that apply to the dynamic
  group. For more information about policies, see [How Policies Work].

  You must also specify a *description* for the dynamic group (although it can
  be an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateDynamicGroup].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the group.
                                  [required]
  --name TEXT                     The name you assign to the group during
                                  creation. The name must be unique across all
                                  groups in the tenancy and cannot be changed.
                                  [required]
  --matching-rule TEXT            The matching rule to dynamically match an
                                  instance certificate to this dynamic group
                                  [required]
  --description TEXT              The description you assign to the group during
                                  creation. Does not have to be unique, and it's
                                  changeable. [required]
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam dynamic-group delete --help
Usage: oci iam dynamic-group delete [OPTIONS]

  Deletes the specified dynamic group.

Options:
  --dynamic-group-id TEXT         The OCID of the dynamic group. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam dynamic-group get --help
Usage: oci iam dynamic-group get [OPTIONS]

  Gets the specified dynamic group's information.

Options:
  --dynamic-group-id TEXT  The OCID of the dynamic group. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam dynamic-group list --help
Usage: oci iam dynamic-group list [OPTIONS]

  Lists the dynamic groups in your tenancy. You must specify your tenancy's
  OCID as the value for the compartment ID (remember that the tenancy is
  simply the root compartment). See [Where to Get the Tenancy's OCID and
  User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam dynamic-group update --help
Usage: oci iam dynamic-group update [OPTIONS]

  Updates the specified dynamic group.

Options:
  --dynamic-group-id TEXT         The OCID of the dynamic group. [required]
  --description TEXT              The description you assign to the dynamic
                                  group. Does not have to be unique, and it's
                                  changeable.
  --matching-rule TEXT            The matching rule to dynamically match an
                                  instance certificate to this dynamic group
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group --help
Usage: oci iam group [OPTIONS] COMMAND [ARGS]...

  A collection of users who all need the same type of access to a particular
  set of resources or compartment. For conceptual information about groups and
  other IAM Service components, see [Overview of the IAM Service].

  If you're federating with an identity provider (IdP), you need to create
  mappings between the groups defined in the IdP and groups you define in the
  IAM service. For more information, see [Identity Providers and Federation].
  Also see [IdentityProvider] and [IdpGroupMapping].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  add-user     Adds the specified user to the specified...
  create       Creates a new group in your tenancy.
  delete       Deletes the specified group.
  get          Gets the specified group's information.
  list         Lists the groups in your tenancy.
  list-users   Lists the users in the specified group.
  remove-user  Removes a user from a group.
  update       Updates the specified group.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group add-user --help
Usage: oci iam group add-user [OPTIONS]

  Adds the specified user to the specified group.

Options:
  --user-id TEXT    The OCID of the user. [required]
  --group-id TEXT   The OCID of the group. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group create --help
Usage: oci iam group create [OPTIONS]

  Creates a new group in your tenancy.

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the group, which must be unique across
  all groups in your tenancy and cannot be changed. You can use this name or
  the OCID when writing policies that apply to the group. For more information
  about policies, see [How Policies Work].

  You must also specify a *description* for the group (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateGroup].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  After creating the group, you need to put users in it and write policies for
  it. See [AddUserToGroup] and [CreatePolicy].

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the group.
                                  [required]
  --name TEXT                     The name you assign to the group during
                                  creation. The name must be unique across all
                                  groups in the tenancy and cannot be changed.
                                  [required]
  --description TEXT              The description you assign to the group during
                                  creation. Does not have to be unique, and it's
                                  changeable. [required]
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group delete --help
Usage: oci iam group delete [OPTIONS]

  Deletes the specified group. The group must be empty.

Options:
  --group-id TEXT                 The OCID of the group. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group get --help
Usage: oci iam group get [OPTIONS]

  Gets the specified group's information.

  This operation does not return a list of all the users in the group. To do
  that, use [ListUserGroupMemberships] and provide the group's OCID as a query
  parameter in the request.

Options:
  --group-id TEXT   The OCID of the group. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group list --help
Usage: oci iam group list [OPTIONS]

  Lists the groups in your tenancy. You must specify your tenancy's OCID as
  the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group list-users --help
Usage: oci iam group list-users [OPTIONS]

  Lists the users in the specified group. You must specify your tenancy's OCID
  as the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --group-id TEXT            The OCID of the user. [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group remove-user --help
Usage: oci iam group remove-user [OPTIONS]

  Removes a user from a group.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --user-id TEXT             The OCID of the user. [required]
  --group-id TEXT            The OCID of the group. [required]
  --force                    Perform removal without prompting for confirmation.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam group update --help
Usage: oci iam group update [OPTIONS]

  Updates the specified group.

Options:
  --group-id TEXT                 The OCID of the group. [required]
  --description TEXT              The description you assign to the group. Does
                                  not have to be unique, and it's changeable.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy --help
Usage: oci iam policy [OPTIONS] COMMAND [ARGS]...

  A document that specifies the type of access a group has to the resources in
  a compartment. For information about policies and other IAM Service
  components, see [Overview of the IAM Service]. If you're new to policies,
  see [Getting Started with Policies].

  The word "policy" is used by people in different ways:

    * An individual statement written in the policy language   * A collection
    of statements in a single, named "policy" document (which has an Oracle
    Cloud ID (OCID) assigned to it)   * The overall body of policies your
    organization uses to control access to resources

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new policy in the specified...
  delete  Deletes the specified policy.
  get     Gets the specified policy's information.
  list    Lists the policies in the specified...
  update  Updates the specified policy.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy create --help
Usage: oci iam policy create [OPTIONS]

  Creates a new policy in the specified compartment (either the tenancy or
  another of your compartments). If you're new to policies, see [Getting
  Started with Policies].

  You must specify a *name* for the policy, which must be unique across all
  policies in your tenancy and cannot be changed.

  You must also specify a *description* for the policy (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdatePolicy].

  You must specify one or more policy statements in the statements array. For
  information about writing policies, see [How Policies Work] and [Common
  Policies].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  New policies take effect typically within 10 seconds.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  policy (either the tenancy or another
                                  compartment). [required]
  --name TEXT                     The name you assign to the policy during
                                  creation. The name must be unique across all
                                  policies in the tenancy and cannot be changed.
                                  [required]
  --statements COMPLEX TYPE       An array of policy statements written in the
                                  policy language. See [How Policies Work] and
                                  [Common Policies]. [required]
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
                                  This must be provided in JSON format. See API
                                  reference for additional help.
                                  
                                  Example:
                                  '["statement 1","statement 2"]'
  --description TEXT              The description you assign to the policy
                                  during creation. Does not have to be unique,
                                  and it's changeable. [required]
  --version-date TEXT             The version of the policy. If null or set to
                                  an empty string, when a request comes in for
                                  authorization, the policy will be evaluated
                                  according to the current behavior of the
                                  services at that moment. If set to a
                                  particular date (YYYY-MM-DD), the policy will
                                  be evaluated according to the behavior of the
                                  services on that date.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy delete --help
Usage: oci iam policy delete [OPTIONS]

  Deletes the specified policy. The deletion takes effect typically within 10
  seconds.

Options:
  --policy-id TEXT                The OCID of the policy. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy get --help
Usage: oci iam policy get [OPTIONS]

  Gets the specified policy's information.

Options:
  --policy-id TEXT  The OCID of the policy. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy list --help
Usage: oci iam policy list [OPTIONS]

  Lists the policies in the specified compartment (either the tenancy or
  another of your compartments). See [Where to Get the Tenancy's OCID and
  User's OCID].

  To determine which policies apply to a particular group or compartment, you
  must view the individual statements inside all your policies. There isn't a
  way to automatically obtain that information via the API.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam policy update --help
Usage: oci iam policy update [OPTIONS]

  Updates the specified policy. You can update the description or the policy
  statements themselves.

  Policy changes take effect typically within 10 seconds.

Options:
  --policy-id TEXT              The OCID of the policy. [required]
  --description TEXT            The description you assign to the policy. Does
                                not have to be unique, and it's changeable.
  --statements TEXT             A JSON array of policy statements written in the
                                policy language. See [How Policies Work] and
                                [Common Policies]. Example: '["statement
                                1","statement 2"]' (The single quotes are
                                required.)
  --version-date TEXT           The version of the policy. If set to an empty
                                string, when a request comes in for
                                authorization, the policy will be evaluated
                                according to the current behavior of the
                                services at that moment. If set to a particular
                                date (YYYY-MM-DD), the policy will be evaluated
                                according to the behavior of the services on
                                that date.
  --if-match TEXT               For optimistic concurrency control. In the PUT
                                or DELETE call for a resource, set the `if-
                                match` parameter to the value of the etag from a
                                previous GET or POST response for that resource.
                                The resource will be updated or deleted only if
                                the etag you provide matches the resource's
                                current etag value.
  --force                       Perform update without prompting for
                                confirmation.
  --freeform-tags COMPLEX TYPE  Simple key-value pair that is applied without
                                any predefined name, type or scope. Exists for
                                cross-compatibility only. Example: `{"bar-key":
                                "value"}`
                                This is a complex type whose value
                                must be valid JSON. The value can be provided as
                                a string on the command line or passed in as a
                                file using
                                the file://path/to/file syntax.
                                
                                The
                                --generate-param-json-input option can be used
                                to generate an example of the JSON which must be
                                provided. We recommend storing this example
                                in a
                                file, modifying it as needed and then passing it
                                back in via the file:// syntax.
  --defined-tags COMPLEX TYPE   Usage of predefined tag keys. These predefined
                                keys are scoped to namespaces. Example: `{"foo-
                                namespace": {"bar-key": "foo-value"}}`
                                This is a
                                complex type whose value must be valid JSON. The
                                value can be provided as a string on the command
                                line or passed in as a file using
                                the
                                file://path/to/file syntax.
                                
                                The --generate-
                                param-json-input option can be used to generate
                                an example of the JSON which must be provided.
                                We recommend storing this example
                                in a file,
                                modifying it as needed and then passing it back
                                in via the file:// syntax.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region --help
Usage: oci iam region [OPTIONS] COMMAND [ARGS]...

  A localized geographic area, such as Phoenix, AZ. Oracle Cloud
  Infrastructure is hosted in regions and Availability Domains. A region is
  composed of several Availability Domains. An Availability Domain is one or
  more data centers located within a region. For more information, see
  [Regions and Availability Domains].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists all the regions offered by Oracle Cloud...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region list --help
Usage: oci iam region list [OPTIONS]

  Lists all the regions offered by Oracle Cloud Infrastructure.

Options:
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region-subscription --help
Usage: oci iam region-subscription [OPTIONS] COMMAND [ARGS]...

  An object that represents your tenancy's access to a particular region
  (i.e., a subscription), the status of that access, and whether that region
  is the home region. For more information, see [Managing Regions].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a subscription to a region for a...
  list    Lists the region subscriptions for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region-subscription create --help
Usage: oci iam region-subscription create [OPTIONS]

  Creates a subscription to a region for a tenancy.

Options:
  --region-key TEXT  The regions's key.
                     
                     Allowed values are: - `PHX` - `IAD` -
                     `FRA`
                     
                     Example: `PHX` [required]
  --tenancy-id TEXT  The OCID of the tenancy. [required]
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file.
                     
                     Options can still be provided on the command line.
                     If an option exists in both the JSON document and the
                     command line then the command line specified value will be
                     used
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam region-subscription list --help
Usage: oci iam region-subscription list [OPTIONS]

  Lists the region subscriptions for the specified tenancy.

Options:
  --tenancy-id TEXT  The OCID of the tenancy. [required]
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file.
                     
                     Options can still be provided on the command line.
                     If an option exists in both the JSON document and the
                     command line then the command line specified value will be
                     used
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag --help
Usage: oci iam tag [OPTIONS] COMMAND [ARGS]...

  A tag definition that belongs to a specific tag namespace.  "Defined tags"
  must be set up in your tenancy before you can apply them to resources. For
  more information, see [Managing Tags and Tag Namespaces].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Create new tag in a given tagNamespace
  get         Gets the specified tags information
  list        List tags in a given tagNamespace
  reactivate  Reactivate tag so it can be used
  retire      Retire tag and related rules
  update      Updates the the specified tag

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag create --help
Usage: oci iam tag create [OPTIONS]

  Creates a new tag in the specified tag namespace.

  You must specify either the OCID or the name of the tag namespace that will
  contain this tag definition.

  You must also specify a *name* for the tag, which must be unique across all
  tags in the tag namespace and cannot be changed. The name can contain any
  ASCII character except the space (_) or period (.) characters. Names are
  case insensitive. That means, for example, "myTag" and "mytag" are not
  allowed in the same namespace. If you specify a name that's already in use
  in the tag namespace, a 409 error is returned.

  You must also specify a *description* for the tag. It does not have to be
  unique, and you can change it with [UpdateTag].

Options:
  --tag-namespace-id TEXT       The OCID of the tag namespace. [required]
  --name TEXT                   The name you assign to the tag during creation.
                                The name must be unique within the tag namespace
                                and cannot be changed. [required]
  --description TEXT            The description you assign to the tag during
                                creation. [required]
  --freeform-tags COMPLEX TYPE  Free-form tags for this resource. Each tag is a
                                simple key-value pair with no predefined name,
                                type, or namespace. For more information, see
                                [Resource Tags]. Example: `{"Department":
                                "Finance"}`
                                This is a complex type whose value
                                must be valid JSON. The value can be provided as
                                a string on the command line or passed in as a
                                file using
                                the file://path/to/file syntax.
                                
                                The
                                --generate-param-json-input option can be used
                                to generate an example of the JSON which must be
                                provided. We recommend storing this example
                                in a
                                file, modifying it as needed and then passing it
                                back in via the file:// syntax.
  --defined-tags COMPLEX TYPE   Defined tags for this resource. Each key is
                                predefined and scoped to a namespace. For more
                                information, see [Resource Tags]. Example:
                                `{"Operations": {"CostCenter": "42"}}`
                                This is a
                                complex type whose value must be valid JSON. The
                                value can be provided as a string on the command
                                line or passed in as a file using
                                the
                                file://path/to/file syntax.
                                
                                The --generate-
                                param-json-input option can be used to generate
                                an example of the JSON which must be provided.
                                We recommend storing this example
                                in a file,
                                modifying it as needed and then passing it back
                                in via the file:// syntax.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag get --help
Usage: oci iam tag get [OPTIONS]

  Gets the specified tag's information.

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --tag-name TEXT          The name of the tag. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag list --help
Usage: oci iam tag list [OPTIONS]

  Lists the tag definitions in the specified tag namespace.

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --page TEXT              The value of the `opc-next-page` response header from
                           the previous "List" call.
  --limit INTEGER          The maximum number of items to return in a paginated
                           "List" call.
  --all                    Fetches all pages of results. If you provide this
                           option, then you cannot provide the --limit option.
  --page-size INTEGER      When fetching results, the number of results to fetch
                           per call. Only valid when used with --all or --limit,
                           and ignored otherwise.
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag reactivate --help
Usage: oci iam tag reactivate [OPTIONS]

  Reactivate tag so it can be used

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --tag-name TEXT          The name of the tag. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag retire --help
Usage: oci iam tag retire [OPTIONS]

  Retires a tag so that it cannot be used to tag resources. Retiring a tag
  will also retire the related rules. You can not a tag with the same name as
  a retired tag. Tags must be unique within their tag namespace but can be
  repeated across namespaces. You cannot add a tag with the same name as a
  retired tag in the same tag namespace.

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --tag-name TEXT          The name of the tag. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag update --help
Usage: oci iam tag update [OPTIONS]

  Updates the the specified tag

Options:
  --tag-namespace-id TEXT       The OCID of the tag namespace. [required]
  --tag-name TEXT               The name of the tag. [required]
  --description TEXT            The description you assign to the tag during
                                creation.
  --freeform-tags COMPLEX TYPE  Free-form tags for this resource. Each tag is a
                                simple key-value pair with no predefined name,
                                type, or namespace. For more information, see
                                [Resource Tags]. Example: `{"Department":
                                "Finance"}`
                                This is a complex type whose value
                                must be valid JSON. The value can be provided as
                                a string on the command line or passed in as a
                                file using
                                the file://path/to/file syntax.
                                
                                The
                                --generate-param-json-input option can be used
                                to generate an example of the JSON which must be
                                provided. We recommend storing this example
                                in a
                                file, modifying it as needed and then passing it
                                back in via the file:// syntax.
  --defined-tags COMPLEX TYPE   Defined tags for this resource. Each key is
                                predefined and scoped to a namespace. For more
                                information, see [Resource Tags]. Example:
                                `{"Operations": {"CostCenter": "42"}}`
                                This is a
                                complex type whose value must be valid JSON. The
                                value can be provided as a string on the command
                                line or passed in as a file using
                                the
                                file://path/to/file syntax.
                                
                                The --generate-
                                param-json-input option can be used to generate
                                an example of the JSON which must be provided.
                                We recommend storing this example
                                in a file,
                                modifying it as needed and then passing it back
                                in via the file:// syntax.
  --force                       Perform update without prompting for
                                confirmation.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace --help
Usage: oci iam tag-namespace [OPTIONS] COMMAND [ARGS]...

  A managed container for defined tags. A tag namespace is unique in a
  tenancy. A tag namespace can't be deleted. For more information, see
  [Managing Tags and Tag Namespaces].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Create new tagNamespace in a compartment
  get         Get a tagNamespaces information
  list        List the tagNamespaces in a compartment
  reactivate  Reactivate namespace (only)
  retire      Retire namespace and its tags and rules
  update      Updates the specified tagNamespace

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace create --help
Usage: oci iam tag-namespace create [OPTIONS]

  Creates a new tag namespace in the specified compartment.

  You must specify the compartment ID in the request object (remember that the
  tenancy is simply the root compartment).

  You must also specify a *name* for the namespace, which must be unique
  across all namespaces in your tenancy and cannot be changed. The name can
  contain any ASCII character except the space (_) or period (.). Names are
  case insensitive. That means, for example, "myNamespace" and "mynamespace"
  are not allowed in the same tenancy. Once you created a namespace, you
  cannot change the name. If you specify a name that's already in use in the
  tenancy, a 409 error is returned.

  You must also specify a *description* for the namespace. It does not have to
  be unique, and you can change it with [UpdateTagNamespace].

  Tag namespaces cannot be deleted, but they can be retired. See [Retiring Key
  Definitions and Namespace Definitions] for more information.

Options:
  -c, --compartment-id TEXT     The OCID of the tenancy containing the tag
                                namespace. [required]
  --name TEXT                   The name you assign to the tag namespace during
                                creation. It must be unique across all tag
                                namespaces in the tenancy and cannot be changed.
                                [required]
  --description TEXT            The description you assign to the tag namespace
                                during creation. [required]
  --freeform-tags COMPLEX TYPE  Free-form tags for this resource. Each tag is a
                                simple key-value pair with no predefined name,
                                type, or namespace. For more information, see
                                [Resource Tags]. Example: `{"Department":
                                "Finance"}`
                                This is a complex type whose value
                                must be valid JSON. The value can be provided as
                                a string on the command line or passed in as a
                                file using
                                the file://path/to/file syntax.
                                
                                The
                                --generate-param-json-input option can be used
                                to generate an example of the JSON which must be
                                provided. We recommend storing this example
                                in a
                                file, modifying it as needed and then passing it
                                back in via the file:// syntax.
  --defined-tags COMPLEX TYPE   Defined tags for this resource. Each key is
                                predefined and scoped to a namespace. For more
                                information, see [Resource Tags]. Example:
                                `{"Operations": {"CostCenter": "42"}}`
                                This is a
                                complex type whose value must be valid JSON. The
                                value can be provided as a string on the command
                                line or passed in as a file using
                                the
                                file://path/to/file syntax.
                                
                                The --generate-
                                param-json-input option can be used to generate
                                an example of the JSON which must be provided.
                                We recommend storing this example
                                in a file,
                                modifying it as needed and then passing it back
                                in via the file:// syntax.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace get --help
Usage: oci iam tag-namespace get [OPTIONS]

  Gets the specified tag namespace's information.

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace list --help
Usage: oci iam tag-namespace list [OPTIONS]

  Lists the tag namespaces in the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment (remember that the
                                  tenancy is simply the root compartment).
                                  [required]
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --include-subcompartments BOOLEAN
                                  An optional boolean parameter indicating
                                  whether to retrieve all tag namespaces in
                                  subcompartments. If this parameter is not
                                  specified, only the tag namespaces defined in
                                  the specified compartment are retrieved.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace reactivate --help
Usage: oci iam tag-namespace reactivate [OPTIONS]

  Reactivates a namespace. Reactivating a namespace will not reactivate any
  tag definition that is retired when the namespace was retired. They will
  have to be individually reactivated *after* the namespace is reactivated.

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace retire --help
Usage: oci iam tag-namespace retire [OPTIONS]

  Retire the namespace, all the contained tags and the related rules.
  Reactivating a namespace  will not reactivate any tag definition that is
  retired when the namespace was retired. They will have to be individually
  reactivated *after* the namespace is reactivated. You can't add a namespace
  with the same name as a retired namespace in the same tenant.

Options:
  --tag-namespace-id TEXT  The OCID of the tag namespace. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam tag-namespace update --help
Usage: oci iam tag-namespace update [OPTIONS]

  Updates the specified tagNamespace

Options:
  --tag-namespace-id TEXT       The OCID of the tag namespace. [required]
  --description TEXT            The description you assign to the tag namespace.
  --freeform-tags COMPLEX TYPE  Free-form tags for this resource. Each tag is a
                                simple key-value pair with no predefined name,
                                type, or namespace. For more information, see
                                [Resource Tags]. Example: `{"Department":
                                "Finance"}`
                                This is a complex type whose value
                                must be valid JSON. The value can be provided as
                                a string on the command line or passed in as a
                                file using
                                the file://path/to/file syntax.
                                
                                The
                                --generate-param-json-input option can be used
                                to generate an example of the JSON which must be
                                provided. We recommend storing this example
                                in a
                                file, modifying it as needed and then passing it
                                back in via the file:// syntax.
  --defined-tags COMPLEX TYPE   Defined tags for this resource. Each key is
                                predefined and scoped to a namespace. For more
                                information, see [Resource Tags]. Example:
                                `{"Operations": {"CostCenter": "42"}}`
                                This is a
                                complex type whose value must be valid JSON. The
                                value can be provided as a string on the command
                                line or passed in as a file using
                                the
                                file://path/to/file syntax.
                                
                                The --generate-
                                param-json-input option can be used to generate
                                an example of the JSON which must be provided.
                                We recommend storing this example
                                in a file,
                                modifying it as needed and then passing it back
                                in via the file:// syntax.
  --force                       Perform update without prompting for
                                confirmation.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user --help
Usage: oci iam user [OPTIONS] COMMAND [ARGS]...

  An individual employee or system that needs to manage or use your company's
  Oracle Cloud Infrastructure resources. Users might need to launch instances,
  manage remote disks, work with your cloud network, etc. Users have one or
  more IAM Service credentials ([ApiKey], [UIPassword], and [SwiftPassword]).
  For more information, see [User Credentials]). End users of your application
  are not typically IAM Service users. For conceptual information about users
  and other IAM Service components, see [Overview of the IAM Service].

  These users are created directly within the Oracle Cloud Infrastructure
  system, via the IAM service. They are different from *federated users*, who
  authenticate themselves to the Oracle Cloud Infrastructure Console via an
  identity provider. For more information, see [Identity Providers and
  Federation].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  api-key            A PEM-format RSA credential for securing...
  create             Creates a new user in your tenancy.
  delete             Deletes the specified user.
  get                Gets the specified user's information.
  list               Lists the users in your tenancy.
  list-groups        Lists the groups for which the specified user...
  swift-password     Swift is the OpenStack object storage...
  ui-password        A text password that enables a user to sign...
  update             Updates the description of the specified...
  update-user-state  Updates the state of the specified user.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key --help
Usage: oci iam user api-key [OPTIONS] COMMAND [ARGS]...

  A PEM-format RSA credential for securing requests to the Oracle Cloud
  Infrastructure REST API. Also known as an *API signing key*. Specifically,
  this is the public key from the key pair. The private key remains with the
  user calling the API. For information about generating a key pair in the
  required PEM format, see [Required Keys and OCIDs].

  **Important:** This is **not** the SSH key for accessing compute instances.

  Each user can have a maximum of three API signing keys.

  For more information about user credentials, see [User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Deletes the specified API signing key for the...
  list    Lists the API signing keys for the specified...
  upload  Uploads an API signing key for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key delete --help
Usage: oci iam user api-key delete [OPTIONS]

  Deletes the specified API signing key for the specified user.

  Every user has permission to use this operation to delete a key for *their
  own user ID*. An administrator in your organization does not need to write a
  policy to give users this ability. To compare, administrators who have
  permission to the tenancy can use this operation to delete a key for any
  user, including themselves.

Options:
  --user-id TEXT      The OCID of the user. [required]
  --fingerprint TEXT  The key's fingerprint. [required]
  --if-match TEXT     For optimistic concurrency control. In the PUT or DELETE
                      call for a resource, set the `if-match` parameter to the
                      value of the etag from a previous GET or POST response for
                      that resource.  The resource will be updated or deleted
                      only if the etag you provide matches the resource's
                      current etag value.
  --force             Perform deletion without prompting for confirmation.
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key list --help
Usage: oci iam user api-key list [OPTIONS]

  Lists the API signing keys for the specified user. A user can have a maximum
  of three keys.

  Every user has permission to use this API call for *their own user ID*.  An
  administrator in your organization does not need to write a policy to give
  users this ability.

Options:
  --user-id TEXT    The OCID of the user. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user api-key upload --help
Usage: oci iam user api-key upload [OPTIONS]

  Uploads an API signing key for the specified user.

  Every user has permission to use this operation to upload a key for *their
  own user ID*. An administrator in your organization does not need to write a
  policy to give users this ability. To compare, administrators who have
  permission to the tenancy can use this operation to upload a key for any
  user, including themselves.

  **Important:** Even though you have permission to upload an API key, you
  might not yet have permission to do much else. If you try calling an
  operation unrelated to your own credential management (e.g., `ListUsers`,
  `LaunchInstance`) and receive an "unauthorized" error, check with an
  administrator to confirm which IAM Service group(s) you're in and what
  access you have. Also confirm you're working in the correct compartment.

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  --user-id TEXT    The OCID of the user. [required]
  --key TEXT        The public key.  Must be an RSA key in PEM format.
                    [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user create --help
Usage: oci iam user create [OPTIONS]

  Creates a new user in your tenancy. For conceptual information about users,
  your tenancy, and other IAM Service components, see [Overview of the IAM
  Service].

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the user, which must be unique across all
  users in your tenancy and cannot be changed. Allowed characters: No spaces.
  Only letters, numerals, hyphens, periods, underscores, +, and @. If you
  specify a name that's already in use, you'll get a 409 error. This name will
  be the user's login to the Console. You might want to pick a name that your
  company's own identity system (e.g., Active Directory, LDAP, etc.) already
  uses. If you delete a user and then create a new user with the same name,
  they'll be considered different users because they have different OCIDs.

  You must also specify a *description* for the user (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateUser]. You can use the field to provide the user's full name, a
  description, a nickname, or other information to generally identify the
  user.

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  A new user has no permissions until you place the user in one or more groups
  (see [AddUserToGroup]). If the user needs to access the Console, you need to
  provide the user a password (see [CreateOrResetUIPassword]). If the user
  needs to access the Oracle Cloud Infrastructure REST API, you need to upload
  a public API signing key for that user (see [Required Keys and OCIDs] and
  also [UploadApiKey]).

  **Important:** Make sure to inform the new user which compartment(s) they
  have access to.

Options:
  -c, --compartment-id TEXT       The OCID of the tenancy containing the user.
                                  [required]
  --name TEXT                     The name you assign to the user during
                                  creation. This is the user's login for the
                                  Console. The name must be unique across all
                                  users in the tenancy and cannot be changed.
                                  [required]
  --description TEXT              The description you assign to the user during
                                  creation. Does not have to be unique, and it's
                                  changeable. [required]
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user delete --help
Usage: oci iam user delete [OPTIONS]

  Deletes the specified user. The user must not be in any groups.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user get --help
Usage: oci iam user get [OPTIONS]

  Gets the specified user's information.

Options:
  --user-id TEXT    The OCID of the user. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user list --help
Usage: oci iam user list [OPTIONS]

  Lists the users in your tenancy. You must specify your tenancy's OCID as the
  value for the compartment ID (remember that the tenancy is simply the root
  compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user list-groups --help
Usage: oci iam user list-groups [OPTIONS]

  Lists the groups for which the specified user is a member. You must specify
  your tenancy's OCID as the value for the compartment ID (remember that the
  tenancy is simply the root compartment). See [Where to Get the Tenancy's
  OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment). [required]
  --user-id TEXT             The OCID of the user. [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password --help
Usage: oci iam user swift-password [OPTIONS] COMMAND [ARGS]...

  Swift is the OpenStack object storage service. A `SwiftPassword` is an
  Oracle-provided password for using a Swift client with the Oracle Cloud
  Infrastructure Object Storage Service. This password is associated with the
  user's Console login. Swift passwords never expire. A user can have up to
  two Swift passwords at a time.

  **Note:** The password is always an Oracle-generated string; you can't
  change it to a string of your choice.

  For more information, see [Managing User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Swift password for the...
  delete  Deletes the specified Swift password for the...
  list    Lists the Swift passwords for the specified...
  update  Updates the specified Swift password's...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password create --help
Usage: oci iam user swift-password create [OPTIONS]

  Creates a new Swift password for the specified user. For information about
  what Swift passwords are for, see [Managing User Credentials].

  You must specify a *description* for the Swift password (although it can be
  an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateSwiftPassword].

  Every user has permission to create a Swift password for *their own user
  ID*. An administrator in your organization does not need to write a policy
  to give users this ability. To compare, administrators who have permission
  to the tenancy can use this operation to create a Swift password for any
  user, including themselves.

Options:
  --description TEXT  The description you assign to the Swift password during
                      creation. Does not have to be unique, and it's changeable.
                      [required]
  --user-id TEXT      The OCID of the user. [required]
  --from-json TEXT    Provide input to this command as a JSON document from a
                      file.
                      
                      Options can still be provided on the command line.
                      If an option exists in both the JSON document and the
                      command line then the command line specified value will be
                      used
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password delete --help
Usage: oci iam user swift-password delete [OPTIONS]

  Deletes the specified Swift password for the specified user.

Options:
  --user-id TEXT            The OCID of the user. [required]
  --swift-password-id TEXT  The OCID of the Swift password. [required]
  --if-match TEXT           For optimistic concurrency control. In the PUT or
                            DELETE call for a resource, set the `if-match`
                            parameter to the value of the etag from a previous
                            GET or POST response for that resource.  The
                            resource will be updated or deleted only if the etag
                            you provide matches the resource's current etag
                            value.
  --force                   Perform deletion without prompting for confirmation.
  --from-json TEXT          Provide input to this command as a JSON document
                            from a file.
                            
                            Options can still be provided on the
                            command line. If an option exists in both the JSON
                            document and the command line then the command line
                            specified value will be used
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password list --help
Usage: oci iam user swift-password list [OPTIONS]

  Lists the Swift passwords for the specified user. The returned object
  contains the password's OCID, but not the password itself. The actual
  password is returned only upon creation.

Options:
  --user-id TEXT    The OCID of the user. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user swift-password update --help
Usage: oci iam user swift-password update [OPTIONS]

  Updates the specified Swift password's description.

Options:
  --user-id TEXT            The OCID of the user. [required]
  --swift-password-id TEXT  The OCID of the Swift password. [required]
  --description TEXT        The description you assign to the Swift password.
                            Does not have to be unique, and it's changeable.
  --if-match TEXT           For optimistic concurrency control. In the PUT or
                            DELETE call for a resource, set the `if-match`
                            parameter to the value of the etag from a previous
                            GET or POST response for that resource.  The
                            resource will be updated or deleted only if the etag
                            you provide matches the resource's current etag
                            value.
  --from-json TEXT          Provide input to this command as a JSON document
                            from a file.
                            
                            Options can still be provided on the
                            command line. If an option exists in both the JSON
                            document and the command line then the command line
                            specified value will be used
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user ui-password --help
Usage: oci iam user ui-password [OPTIONS] COMMAND [ARGS]...

  A text password that enables a user to sign in to the Console, the user
  interface for interacting with Oracle Cloud Infrastructure.

  For more information about user credentials, see [User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create-or-reset  Creates a new Console one-time password for...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user ui-password create-or-reset --help
Usage: oci iam user ui-password create-or-reset [OPTIONS]

  Creates a new Console one-time password for the specified user. For more
  information about user credentials, see [User Credentials].

  Use this operation after creating a new user, or if a user forgets their
  password. The new one-time password is returned to you in the response, and
  you must securely deliver it to the user. They'll be prompted to change this
  password the next time they sign in to the Console. If they don't change it
  within 7 days, the password will expire and you'll need to create a new one-
  time password for the user.

  **Note:** The user's Console login is the unique name you specified when you
  created the user (see [CreateUser]).

Options:
  --user-id TEXT    The OCID of the user. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user update --help
Usage: oci iam user update [OPTIONS]

  Updates the description of the specified user.

Options:
  --user-id TEXT                  The OCID of the user. [required]
  --description TEXT              The description you assign to the user. Does
                                  not have to be unique, and it's changeable.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|INACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci iam user update-user-state --help
Usage: oci iam user update-user-state [OPTIONS]

  Updates the state of the specified user.

Options:
  --user-id TEXT     The OCID of the user. [required]
  --blocked BOOLEAN  Update state to blocked or unblocked. Only "false" is
                     supported (for changing the state to unblocked).
  --if-match TEXT    For optimistic concurrency control. In the PUT or DELETE
                     call for a resource, set the `if-match` parameter to the
                     value of the etag from a previous GET or POST response for
                     that resource.  The resource will be updated or deleted
                     only if the etag you provide matches the resource's current
                     etag value.
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file.
                     
                     Options can still be provided on the command line.
                     If an option exists in both the JSON document and the
                     command line then the command line specified value will be
                     used
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb --help
Usage: oci lb [OPTIONS] COMMAND [ARGS]...

  Load Balancing Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  backend               The configuration of a backend server that is...
  backend-health        The health status of the specified backend...
  backend-set           The configuration of a load balancer backend...
  backend-set-health    The health status details for a backend set.
  certificate           The configuration details of a listener...
  health-checker        The health check policy configuration.
  listener              The listener's configuration.
  load-balancer         The properties that define a load balancer.
  load-balancer-health  The health status details for the specified...
  policy                A policy that determines how traffic is...
  protocol              The protocol that defines the type of traffic...
  shape                 A shape is a template that determines the...
  work-request          Many of the API requests you use to create...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend --help
Usage: oci lb backend [OPTIONS] COMMAND [ARGS]...

  The configuration of a backend server that is a member of a load balancer
  backend set. For more information, see [Managing Backend Servers].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Adds a backend server to a backend set.
  delete  Removes a backend server from a given load...
  get     Gets the specified backend server's...
  list    Lists the backend servers for a given load...
  update  Updates the configuration of a backend server...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend create --help
Usage: oci lb backend create [OPTIONS]

  Adds a backend server to a backend set.

Options:
  --ip-address TEXT               The IP address of the backend server.
                                  Example: `10.10.10.4` [required]
  --port INTEGER                  The communication port for the backend server.
                                  Example: `8080` [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the backend set and servers. [required]
  --backend-set-name TEXT         The name of the backend set to add the backend
                                  server to.
                                  
                                  Example: `My_backend_set`
                                  [required]
  --backup BOOLEAN                Whether the load balancer should treat this
                                  server as a backup unit. If `true`, the load
                                  balancer forwards no ingress traffic to this
                                  backend server unless all other backend
                                  servers not marked as "backup" fail the health
                                  check policy.
                                  
                                  Example: `true`
  --drain BOOLEAN                 Whether the load balancer should drain this
                                  server. Servers marked "drain" receive no new
                                  incoming traffic.
                                  
                                  Example: `true`
  --offline BOOLEAN               Whether the load balancer should treat this
                                  server as offline. Offline servers receive no
                                  incoming traffic.
                                  
                                  Example: `true`
  --weight INTEGER                The load balancing policy weight assigned to
                                  the server. Backend servers with a higher
                                  weight receive a larger proportion of incoming
                                  traffic. For example, a server weighted '3'
                                  receives 3 times the number of new connections
                                  as a server weighted '1'. For more information
                                  on load balancing policies, see [How Load
                                  Balancing Policies Work].
                                  
                                  Example: `3`
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend delete --help
Usage: oci lb backend delete [OPTIONS]

  Removes a backend server from a given load balancer and backend set.

Options:
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the backend set and server. [required]
  --backend-set-name TEXT         The name of the backend set associated with
                                  the backend server.
                                  
                                  Example: `My_backend_set`
                                  [required]
  --backend-name TEXT             The IP address and port of the backend server
                                  to remove.
                                  
                                  Example: `1.1.1.7:42` [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend get --help
Usage: oci lb backend get [OPTIONS]

  Gets the specified backend server's configuration information.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           backend set and server. [required]
  --backend-set-name TEXT  The name of the backend set that includes the backend
                           server.
                           
                           Example: `My_backend_set` [required]
  --backend-name TEXT      The IP address and port of the backend server to
                           retrieve.
                           
                           Example: `1.1.1.7:42` [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend list --help
Usage: oci lb backend list [OPTIONS]

  Lists the backend servers for a given load balancer and backend set.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           backend set and servers. [required]
  --backend-set-name TEXT  The name of the backend set associated with the
                           backend servers.
                           
                           Example: `My_backend_set`
                           [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend update --help
Usage: oci lb backend update [OPTIONS]

  Updates the configuration of a backend server within the specified backend
  set.

Options:
  --backup BOOLEAN                Whether the load balancer should treat this
                                  server as a backup unit. If `true`, the load
                                  balancer forwards no ingress traffic to this
                                  backend server unless all other backend
                                  servers not marked as "backup" fail the health
                                  check policy.
                                  
                                  Example: `true` [required]
  --drain BOOLEAN                 Whether the load balancer should drain this
                                  server. Servers marked "drain" receive no new
                                  incoming traffic.
                                  
                                  Example: `true` [required]
  --offline BOOLEAN               Whether the load balancer should treat this
                                  server as offline. Offline servers receive no
                                  incoming traffic.
                                  
                                  Example: `true` [required]
  --weight INTEGER                The load balancing policy weight assigned to
                                  the server. Backend servers with a higher
                                  weight receive a larger proportion of incoming
                                  traffic. For example, a server weighted '3'
                                  receives 3 times the number of new connections
                                  as a server weighted '1'. For more information
                                  on load balancing policies, see [How Load
                                  Balancing Policies Work].
                                  
                                  Example: `3`
                                  [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the backend set and server. [required]
  --backend-set-name TEXT         The name of the backend set associated with
                                  the backend server.
                                  
                                  Example: `My_backend_set`
                                  [required]
  --backend-name TEXT             The IP address and port of the backend server
                                  to update.
                                  
                                  Example: `1.1.1.7:42` [required]
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-health --help
Usage: oci lb backend-health [OPTIONS] COMMAND [ARGS]...

  The health status of the specified backend server as reported by the primary
  and standby load balancers.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get  Gets the current health status of the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-health get --help
Usage: oci lb backend-health get [OPTIONS]

  Gets the current health status of the specified backend server.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           backend server health status to be retrieved.
                           [required]
  --backend-set-name TEXT  The name of the backend set associated with the
                           backend server to retrieve the health status for.
                           Example: `My_backend_set` [required]
  --backend-name TEXT      The IP address and port of the backend server to
                           retrieve the health status for.
                           
                           Example:
                           `1.1.1.7:42` [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set --help
Usage: oci lb backend-set [OPTIONS] COMMAND [ARGS]...

  The configuration of a load balancer backend set. For more information on
  backend set configuration, see [Managing Backend Sets].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Adds a backend set to a load balancer.
  delete  Deletes the specified backend set.
  get     Gets the specified backend set's...
  list    Lists all backend sets associated with a...
  update  Updates a backend set.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set create --help
Usage: oci lb backend-set create [OPTIONS]

  Adds a backend set to a load balancer.

Options:
  --name TEXT                     A friendly name for the backend set. It must
                                  be unique and it cannot be changed.
                                  
                                  Valid
                                  backend set names include only alphanumeric
                                  characters, dashes, and underscores. Backend
                                  set names cannot contain spaces. Avoid
                                  entering confidential information.
                                  
                                  Example:
                                  `My_backend_set` [required]
  --policy TEXT                   The load balancer policy for the backend set.
                                  To get a list of available policies, use the
                                  [ListPolicies] operation.
                                  
                                  Example:
                                  `LEAST_CONNECTIONS` [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer on which to
                                  add a backend set. [required]
  --backends COMPLEX TYPE         This option is a JSON list with items of type
                                  BackendDetails.  For documentation on
                                  BackendDetails please see our API reference:
                                  https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --health-checker-interval-in-ms INTEGER
                                  The interval between health checks, in
                                  milliseconds.
  --health-checker-port INTEGER   The backend server port against which to run
                                  the health check. If the port is not
                                  specified, the load balancer uses the port
                                  information from the Backend object.
  --health-checker-protocol TEXT  The protocol the health check must use; either
                                  HTTP or TCP.  [required]
  --health-checker-response-body-regex TEXT
                                  A regular expression for parsing the response
                                  body from the backend server.
  --health-checker-retries INTEGER
                                  The number of retries to attempt before a
                                  backend server is considered "unhealthy".
  --health-checker-return-code INTEGER
                                  The status code a healthy backend server
                                  should return.
  --health-checker-timeout-in-ms INTEGER
                                  The maximum time, in milliseconds, to wait for
                                  a reply to a health check. A health check is
                                  successful only if a reply returns within this
                                  timeout period.
  --health-checker-url-path TEXT  The path against which to run the health
                                  check.
  --session-persistence-cookie-name TEXT
                                  The name of the cookie used to detect a
                                  session initiated by the backend server. Use
                                  '*' to specify that any cookie set by the
                                  backend causes the session to persist.
  --session-persistence-disable-fallback BOOLEAN
                                  Whether the load balancer is prevented from
                                  directing traffic from a persistent session
                                  client to a different backend server if the
                                  original server is unavailable. Defaults to
                                  false.
  --ssl-certificate-name TEXT     A friendly name for the certificate bundle. It
                                  must be unique and it cannot be changed. Valid
                                  certificate bundle names include only
                                  alphanumeric characters, dashes, and
                                  underscores. Certificate bundle names cannot
                                  contain spaces. Avoid entering confidential
                                  information.
  --ssl-verify-depth INTEGER      The maximum depth for peer certificate chain
                                  verification.
  --ssl-verify-peer-certificate BOOLEAN
                                  Whether the load balancer listener should
                                  verify peer certificates.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set delete --help
Usage: oci lb backend-set delete [OPTIONS]

  Deletes the specified backend set. Note that deleting a backend set removes
  its backend servers from the load balancer.

  Before you can delete a backend set, you must remove it from any active
  listeners.

Options:
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the backend set. [required]
  --backend-set-name TEXT         The name of the backend set to delete.
                                  Example: `My_backend_set` [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set get --help
Usage: oci lb backend-set get [OPTIONS]

  Gets the specified backend set's configuration information.

Options:
  --load-balancer-id TEXT  The [OCID] of the specified load balancer. [required]
  --backend-set-name TEXT  The name of the backend set to retrieve.
                           
                           Example:
                           `My_backend_set` [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set list --help
Usage: oci lb backend-set list [OPTIONS]

  Lists all backend sets associated with a given load balancer.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           backend sets to retrieve. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set update --help
Usage: oci lb backend-set update [OPTIONS]

  Updates a backend set.

Options:
  --backends COMPLEX TYPE         [required]
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax.
  --policy TEXT                   The load balancer policy for the backend set.
                                  To get a list of available policies, use the
                                  [ListPolicies] operation.
                                  
                                  Example:
                                  `LEAST_CONNECTIONS` [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the backend set. [required]
  --backend-set-name TEXT         The name of the backend set to update.
                                  Example: `My_backend_set` [required]
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --health-checker-interval-in-ms INTEGER
                                  The interval between health checks, in
                                  milliseconds.
  --health-checker-port INTEGER   The backend server port against which to run
                                  the health check. If the port is not
                                  specified, the load balancer uses the port
                                  information from the Backend object.
  --health-checker-protocol TEXT  The protocol the health check must use; either
                                  HTTP or TCP.  [required]
  --health-checker-response-body-regex TEXT
                                  A regular expression for parsing the response
                                  body from the backend server.
  --health-checker-retries INTEGER
                                  The number of retries to attempt before a
                                  backend server is considered "unhealthy".
  --health-checker-return-code INTEGER
                                  The status code a healthy backend server
                                  should return.
  --health-checker-timeout-in-ms INTEGER
                                  The maximum time, in milliseconds, to wait for
                                  a reply to a health check. A health check is
                                  successful only if a reply returns within this
                                  timeout period.
  --health-checker-url-path TEXT  The path against which to run the health
                                  check.
  --session-persistence-cookie-name TEXT
                                  The name of the cookie used to detect a
                                  session initiated by the backend server. Use
                                  '*' to specify that any cookie set by the
                                  backend causes the session to persist.
  --session-persistence-disable-fallback BOOLEAN
                                  Whether the load balancer is prevented from
                                  directing traffic from a persistent session
                                  client to a different backend server if the
                                  original server is unavailable. Defaults to
                                  false.
  --ssl-certificate-name TEXT     A friendly name for the certificate bundle. It
                                  must be unique and it cannot be changed. Valid
                                  certificate bundle names include only
                                  alphanumeric characters, dashes, and
                                  underscores. Certificate bundle names cannot
                                  contain spaces. Avoid entering confidential
                                  information.
  --ssl-verify-depth INTEGER      The maximum depth for peer certificate chain
                                  verification.
  --ssl-verify-peer-certificate BOOLEAN
                                  Whether the load balancer listener should
                                  verify peer certificates.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set-health --help
Usage: oci lb backend-set-health [OPTIONS] COMMAND [ARGS]...

  The health status details for a backend set.

  This object does not explicitly enumerate backend servers with a status of
  `OK`. However, they are included in the `totalBackendCount` sum.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get  Gets the health status for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb backend-set-health get --help
Usage: oci lb backend-set-health get [OPTIONS]

  Gets the health status for the specified backend set.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           backend set health status to be retrieved. [required]
  --backend-set-name TEXT  The name of the backend set to retrieve the health
                           status for.
                           
                           Example: `My_backend_set` [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb certificate --help
Usage: oci lb certificate [OPTIONS] COMMAND [ARGS]...

  The configuration details of a listener certificate bundle. For more
  information on SSL certficate configuration, see [Managing SSL
  Certificates].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates an asynchronous request to add an SSL...
  delete  Deletes an SSL certificate from a load...
  list    Lists all SSL certificates associated with a...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb certificate create --help
Usage: oci lb certificate create [OPTIONS]

  Creates an asynchronous request to add an SSL certificate.

Options:
  --certificate-name TEXT         A friendly name for the certificate bundle. It
                                  must be unique and it cannot be changed. Valid
                                  certificate bundle names include only
                                  alphanumeric characters, dashes, and
                                  underscores. Certificate bundle names cannot
                                  contain spaces. Avoid entering confidential
                                  information.
                                  
                                  Example: `My_certificate_bundle`
                                  [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer on which to
                                  add the certificate. [required]
  --passphrase TEXT               A passphrase for encrypted private keys. This
                                  is needed only if you created your certificate
                                  with a passphrase.
                                  
                                  Example:
                                  `Mysecretunlockingcode42!1!`
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --ca-certificate-file FILENAME  The Certificate Authority certificate, or any
                                  interim certificate, that you received from
                                  your SSL certificate provider.
                                  
                                  Example:
                                  -----BEGIN CERTIFICATE-----     MIIEczCCA1ugAw
                                  IBAgIBADANBgkqhkiG9w0BAQQFAD..AkGA1UEBhMCR0Ix
                                  EzARBgNVBAgTClNvbWUtU3RhdGUxFDASBgNVBAoTC0..0E
                                  gTHRkMTcwNQYD     VQQLEy5DbGFzcyAxIFB1YmxpYyBQ
                                  cmltYXJ5IENlcn..XRpb24gQXV0aG9y     aXR5MRQwEg
                                  YDVQQDEwtCZXN0IENBIEx0ZDAeFw0wMD..TUwMTZaFw0wM
                                  TAy     ...     -----END CERTIFICATE-----
  --private-key-file FILENAME     The SSL private key for your certificate, in
                                  PEM format.
                                  
                                  Example:
                                  
                                      -----BEGIN RSA
                                  PRIVATE KEY-----     jO1O1v2ftXMsawM90tnXwc6xh
                                  OAT1gDBC9S8DKeca..JZNUgYYwNS0dP2UK     tmyN+Xq
                                  VcAKw4HqVmChXy5b5msu8eIq3uc2NqNVtR..2ksSLukP8p
                                  xXcHyb     +sEwvM4uf8qbnHAqwnOnP9+KV9vds6BaH1e
                                  RA4CHz..n+NVZlzBsTxTlS16     /Umr7wJzVrMqK5sDi
                                  Su4WuaaBdqMGfL5hLsTjcBFD..Da2iyQmSKuVD4lIZ
                                  ...     -----END RSA PRIVATE KEY-----
  --public-certificate-file FILENAME
                                  The public certificate, in PEM format, that
                                  you received from your SSL certificate
                                  provider.
                                  
                                  Example:
                                  
                                      -----BEGIN
                                  CERTIFICATE-----     MIIC2jCCAkMCAg38MA0GCSqGS
                                  Ib3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG     A1
                                  UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNV
                                  BAoTCEZyYW5rNERE     MRgwFgYDVQQLEw9XZWJDZXJ0I
                                  FN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl     Yi
                                  BDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRk
                                  ZC5jb20wHhcNMTIw     ...     -----END
                                  CERTIFICATE-----
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb certificate delete --help
Usage: oci lb certificate delete [OPTIONS]

  Deletes an SSL certificate from a load balancer.

Options:
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the certificate to be deleted. [required]
  --certificate-name TEXT         The name of the certificate to delete.
                                  Example: `My_certificate_bundle` [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb certificate list --help
Usage: oci lb certificate list [OPTIONS]

  Lists all SSL certificates associated with a given load balancer.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           certificates to be listed. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb health-checker --help
Usage: oci lb health-checker [OPTIONS] COMMAND [ARGS]...

  The health check policy configuration. For more information, see [Editing
  Health Check Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get     Gets the health check policy information for...
  update  Updates the health check policy for a given...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb health-checker get --help
Usage: oci lb health-checker get [OPTIONS]

  Gets the health check policy information for a given load balancer and
  backend set.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           health check policy to be retrieved. [required]
  --backend-set-name TEXT  The name of the backend set associated with the
                           health check policy to be retrieved.
                           
                           Example:
                           `My_backend_set` [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb health-checker update --help
Usage: oci lb health-checker update [OPTIONS]

  Updates the health check policy for a given load balancer and backend set.

Options:
  --interval-in-millis INTEGER    The interval between health checks, in
                                  milliseconds.
                                  
                                  Example: `30000` [required]
  --port INTEGER                  The backend server port against which to run
                                  the health check.
                                  
                                  Example: `8080` [required]
  --protocol TEXT                 The protocol the health check must use; either
                                  HTTP or TCP.
                                  
                                  Example: `HTTP` [required]
  --response-body-regex TEXT      A regular expression for parsing the response
                                  body from the backend server.
                                  
                                  Example:
                                  `^(500|40[1348])$` [required]
  --retries INTEGER               The number of retries to attempt before a
                                  backend server is considered "unhealthy".
                                  Example: `3` [required]
  --return-code INTEGER           The status code a healthy backend server
                                  should return.
                                  
                                  Example: `200` [required]
  --timeout-in-millis INTEGER     The maximum time, in milliseconds, to wait for
                                  a reply to a health check. A health check is
                                  successful only if a reply returns within this
                                  timeout period.
                                  
                                  Example: `6000` [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the health check policy to be updated.
                                  [required]
  --backend-set-name TEXT         The name of the backend set associated with
                                  the health check policy to be retrieved.
                                  Example: `My_backend_set` [required]
  --url-path TEXT                 The path against which to run the health
                                  check.
                                  
                                  Example: `/healthcheck`
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb listener --help
Usage: oci lb listener [OPTIONS] COMMAND [ARGS]...

  The listener's configuration. For more information on backend set
  configuration, see [Managing Load Balancer Listeners].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Adds a listener to a load balancer.
  delete  Deletes a listener from a load balancer.
  update  Updates a listener for a given load balancer.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb listener create --help
Usage: oci lb listener create [OPTIONS]

  Adds a listener to a load balancer.

Options:
  --default-backend-set-name TEXT
                                  The name of the associated backend set.
                                  Example: `My_backend_set` [required]
  --name TEXT                     A friendly name for the listener. It must be
                                  unique and it cannot be changed. Avoid
                                  entering confidential information.
                                  
                                  Example:
                                  `My listener` [required]
  --port INTEGER                  The communication port for the listener.
                                  Example: `80` [required]
  --protocol TEXT                 The protocol on which the listener accepts
                                  connection requests. To get a list of valid
                                  protocols, use the [ListProtocols] operation.
                                  Example: `HTTP` [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer on which to
                                  add a listener. [required]
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --ssl-certificate-name TEXT     A friendly name for the certificate bundle. It
                                  must be unique and it cannot be changed. Valid
                                  certificate bundle names include only
                                  alphanumeric characters, dashes, and
                                  underscores. Certificate bundle names cannot
                                  contain spaces. Avoid entering confidential
                                  information.
  --ssl-verify-depth INTEGER      The maximum depth for peer certificate chain
                                  verification.
  --ssl-verify-peer-certificate BOOLEAN
                                  Whether the load balancer listener should
                                  verify peer certificates.
  --connection-configuration-idle-timeout INTEGER
                                  The maximum idle time, in seconds, allowed
                                  between two successive receive or two
                                  successive send operations between the client
                                  and backend servers.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb listener delete --help
Usage: oci lb listener delete [OPTIONS]

  Deletes a listener from a load balancer.

Options:
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the listener to delete. [required]
  --listener-name TEXT            The name of the listener to delete.
                                  
                                  Example:
                                  `My listener` [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb listener update --help
Usage: oci lb listener update [OPTIONS]

  Updates a listener for a given load balancer.

Options:
  --default-backend-set-name TEXT
                                  The name of the associated backend set.
                                  Example: `My_backend_set` [required]
  --port INTEGER                  The communication port for the listener.
                                  Example: `80` [required]
  --protocol TEXT                 The protocol on which the listener accepts
                                  connection requests. To get a list of valid
                                  protocols, use the [ListProtocols] operation.
                                  Example: `HTTP` [required]
  --load-balancer-id TEXT         The [OCID] of the load balancer associated
                                  with the listener to update. [required]
  --listener-name TEXT            The name of the listener to update.
                                  
                                  Example:
                                  `My listener` [required]
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --ssl-certificate-name TEXT     A friendly name for the certificate bundle. It
                                  must be unique and it cannot be changed. Valid
                                  certificate bundle names include only
                                  alphanumeric characters, dashes, and
                                  underscores. Certificate bundle names cannot
                                  contain spaces. Avoid entering confidential
                                  information.
  --ssl-verify-depth INTEGER      The maximum depth for peer certificate chain
                                  verification.
  --ssl-verify-peer-certificate BOOLEAN
                                  Whether the load balancer listener should
                                  verify peer certificates.
  --connection-configuration-idle-timeout INTEGER
                                  The maximum idle time, in seconds, allowed
                                  between two successive receive or two
                                  successive send operations between the client
                                  and backend servers.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer --help
Usage: oci lb load-balancer [OPTIONS] COMMAND [ARGS]...

  The properties that define a load balancer. For more information, see
  [Managing a Load Balancer].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

  For information about endpoints and signing API requests, see [About the
  API]. For information about available SDKs and tools, see [SDKS and Other
  Tools].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new load balancer in the specified...
  delete  Stops a load balancer and removes it from...
  get     Gets the specified load balancer's...
  list    Lists all load balancers in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer create --help
Usage: oci lb load-balancer create [OPTIONS]

  Creates a new load balancer in the specified compartment. For general
  information about load balancers, see [Overview of the Load Balancing
  Service].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the load balancer to reside. Notice that the load
  balancer doesn't have to be in the same compartment as the VCN or backend
  set. If you're not sure which compartment to use, put the load balancer in
  the same compartment as the VCN. For information about access control and
  compartments, see [Overview of the IAM Service].

  You must specify a display name for the load balancer. It does not have to
  be unique, and you can change it.

  For information about Availability Domains, see [Regions and Availability
  Domains]. To get a list of Availability Domains, use the
  `ListAvailabilityDomains` operation in the Identity and Access Management
  Service API.

  All Oracle Cloud Infrastructure resources, including load balancers, get an
  Oracle-assigned, unique ID called an Oracle Cloud Identifier (OCID). When
  you create a resource, you can find its OCID in the response. You can also
  retrieve a resource's OCID by using a List API operation on that resource
  type, or by viewing the resource in the Console. Fore more information, see
  [Resource Identifiers].

  After you send your request, the new object's state will temporarily be
  PROVISIONING. Before using the object, first make sure its state has changed
  to RUNNING.

  When you create a load balancer, the system assigns an IP address. To get
  the IP address, use the [GetLoadBalancer] operation.

Options:
  -c, --compartment-id TEXT       The [OCID] of the compartment in which to
                                  create the load balancer. [required]
  --display-name TEXT             A user-friendly name. It does not have to be
                                  unique, and it is changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My load
                                  balancer` [required]
  --shape-name TEXT               A template that determines the total pre-
                                  provisioned bandwidth (ingress plus egress).
                                  To get a list of available shapes, use the
                                  [ListShapes] operation.
                                  
                                  Example: `100Mbps`
                                  [required]
  --subnet-ids COMPLEX TYPE       An array of subnet [OCIDs]. [required]
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --backend-sets COMPLEX TYPE     This option is a JSON dictionary of type
                                  dict(str, BackendSetDetails).  For
                                  documentation on BackendSetDetails please see
                                  our API reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --certificates COMPLEX TYPE     This option is a JSON dictionary of type
                                  dict(str, CertificateDetails).  For
                                  documentation on CertificateDetails please see
                                  our API reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --is-private BOOLEAN            Whether the load balancer has a VCN-local
                                  (private) IP address.
                                  
                                  If "true", the service
                                  assigns a private IP address to the load
                                  balancer. The load balancer requires only one
                                  subnet to host both the primary and secondary
                                  load balancers. The private IP address is
                                  local to the subnet. The load balancer is
                                  accessible only from within the VCN that
                                  contains the associated subnet, or as further
                                  restricted by your security list rules. The
                                  load balancer can route traffic to any backend
                                  server that is reachable from the VCN.
                                  
                                  For a
                                  private load balancer, both the primary and
                                  secondary load balancer hosts are within the
                                  same Availability Domain.
                                  
                                  If "false", the
                                  service assigns a public IP address to the
                                  load balancer. A load balancer with a public
                                  IP address requires two subnets, each in a
                                  different Availability Domain. One subnet
                                  hosts the primary load balancer and the other
                                  hosts the secondary (standby) load balancer. A
                                  public load balancer is accessible from the
                                  internet, depending on your VCN's [security
                                  list rules].
                                  
                                  Example: `false`
  --listeners COMPLEX TYPE        This option is a JSON dictionary of type
                                  dict(str, ListenerDetails).  For documentation
                                  on ListenerDetails please see our API
                                  reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer delete --help
Usage: oci lb load-balancer delete [OPTIONS]

  Stops a load balancer and removes it from service.

Options:
  --load-balancer-id TEXT         The [OCID] of the load balancer to delete.
                                  [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer get --help
Usage: oci lb load-balancer get [OPTIONS]

  Gets the specified load balancer's configuration information.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer to retrieve.
                           [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer list --help
Usage: oci lb load-balancer list [OPTIONS]

  Lists all load balancers in the specified compartment.

Options:
  -c, --compartment-id TEXT       The [OCID] of the compartment containing the
                                  load balancers to list. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
                                  Example: `3`
  --detail TEXT                   The level of detail to return for each result.
                                  Can be `full` or `simple`.
                                  
                                  Example: `full`
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by.  You can provide one
                                  sort order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --lifecycle-state [CREATING|FAILED|ACTIVE|DELETING|DELETED]
                                  A filter to return only resources that match
                                  the given lifecycle state.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer-health --help
Usage: oci lb load-balancer-health [OPTIONS] COMMAND [ARGS]...

  The health status details for the specified load balancer.

  This object does not explicitly enumerate backend sets with a status of
  `OK`. However, they are included in the `totalBackendSetCount` sum.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets the health status for the specified load...
  list  Lists the summary health statuses for all...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer-health get --help
Usage: oci lb load-balancer-health get [OPTIONS]

  Gets the health status for the specified load balancer.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer to return health
                           status for. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb load-balancer-health list --help
Usage: oci lb load-balancer-health list [OPTIONS]

  Lists the summary health statuses for all load balancers in the specified
  compartment.

Options:
  -c, --compartment-id TEXT  The [OCID] of the compartment containing the load
                             balancers to return health status information for.
                             [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
                             
                             Example: `3`
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb policy --help
Usage: oci lb policy [OPTIONS] COMMAND [ARGS]...

  A policy that determines how traffic is distributed among backend servers.
  For more information on load balancing policies, see [How Load Balancing
  Policies Work].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the available load balancer policies.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb policy list --help
Usage: oci lb policy list [OPTIONS]

  Lists the available load balancer policies.

Options:
  -c, --compartment-id TEXT  The [OCID] of the compartment containing the load
                             balancer policies to list. [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
                             
                             Example: `3`
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb protocol --help
Usage: oci lb protocol [OPTIONS] COMMAND [ARGS]...

  The protocol that defines the type of traffic accepted by a listener.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists all supported traffic protocols.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb protocol list --help
Usage: oci lb protocol list [OPTIONS]

  Lists all supported traffic protocols.

Options:
  -c, --compartment-id TEXT  The [OCID] of the compartment containing the load
                             balancer protocols to list. [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
                             
                             Example: `3`
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb shape --help
Usage: oci lb shape [OPTIONS] COMMAND [ARGS]...

  A shape is a template that determines the total pre-provisioned bandwidth
  (ingress plus egress) for the load balancer.

  Note that the pre-provisioned maximum capacity applies to aggregated
  connections, not to a single client attempting to use the full bandwidth.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the valid load balancer shapes.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb shape list --help
Usage: oci lb shape list [OPTIONS]

  Lists the valid load balancer shapes.

Options:
  -c, --compartment-id TEXT  The [OCID] of the compartment containing the load
                             balancer shapes to list. [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
                             
                             Example: `3`
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb work-request --help
Usage: oci lb work-request [OPTIONS] COMMAND [ARGS]...

  Many of the API requests you use to create and configure load balancing do
  not take effect immediately. In these cases, the request spawns an
  asynchronous work flow to fulfill the request. WorkRequest objects provide
  visibility for in-progress work flows. For more information about work
  requests, see [Viewing the State of a Work Request].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets the details of a work request.
  list  Lists the work requests for a given load...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb work-request get --help
Usage: oci lb work-request get [OPTIONS]

  Gets the details of a work request.

Options:
  --work-request-id TEXT  The [OCID] of the work request to retrieve. [required]
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file.
                          
                          Options can still be provided on the command
                          line. If an option exists in both the JSON document
                          and the command line then the command line specified
                          value will be used
  -?, -h, --help          Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci lb work-request list --help
Usage: oci lb work-request list [OPTIONS]

  Lists the work requests for a given load balancer.

Options:
  --load-balancer-id TEXT  The [OCID] of the load balancer associated with the
                           work requests to retrieve. [required]
  --limit INTEGER          The maximum number of items to return in a paginated
                           "List" call.
                           
                           Example: `500`
  --page TEXT              The value of the `opc-next-page` response header from
                           the previous "List" call.
                           
                           Example: `3`
  --all                    Fetches all pages of results. If you provide this
                           option, then you cannot provide the --limit option.
  --page-size INTEGER      When fetching results, the number of results to fetch
                           per call. Only valid when used with --all or --limit,
                           and ignored otherwise.
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network --help
Usage: oci network [OPTIONS] COMMAND [ARGS]...

  Networking Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  cpe                    An object you create when setting up an IPSec...
  dhcp-options           A set of DHCP options.
  drg                    A Dynamic Routing Gateway (DRG), which is a...
  drg-attachment         A link between a DRG and VCN.
  internet-gateway       Represents a router that connects the edge of...
  ip-sec-connection      A connection between a DRG and CPE.
  local-peering-gateway  A local peering gateway (LPG) is an object on...
  private-ip             A *private IP* is a conceptual term that...
  public-ip              A *public IP* is a conceptual term that...
  route-table            A collection of `RouteRule` objects, which...
  security-list          A set of virtual firewall rules for your VCN.
  subnet                 A logical subdivision of a VCN.
  vcn                    A Virtual Cloud Network (VCN).
  vnic                   A virtual network interface card.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe --help
Usage: oci network cpe [OPTIONS] COMMAND [ARGS]...

  An object you create when setting up an IPSec VPN between your on-premises
  network and VCN. The `Cpe` is a virtual representation of your Customer-
  Premises Equipment, which is the actual router on-premises at your site at
  your end of the IPSec VPN connection. For more information, see [Overview of
  the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new virtual Customer-Premises...
  delete  Deletes the specified CPE object.
  get     Gets the specified CPE's information.
  list    Lists the Customer-Premises Equipment objects...
  update  Updates the specified CPE's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe create --help
Usage: oci network cpe create [OPTIONS]

  Creates a new virtual Customer-Premises Equipment (CPE) object in the
  specified compartment. For more information, see [IPSec VPNs].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the CPE to reside. Notice that the CPE doesn't
  have to be in the same compartment as the IPSec connection or other
  Networking Service components. If you're not sure which compartment to use,
  put the CPE in the same compartment as the DRG. For more information about
  compartments and access control, see [Overview of the IAM Service]. For
  information about OCIDs, see [Resource Identifiers].

  You must provide the public IP address of your on-premises router. See
  [Configuring Your On-Premises Router for an IPSec VPN].

  You may optionally specify a *display name* for the CPE, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the CPE.
                             [required]
  --ip-address TEXT          The public IP address of the on-premises router.
                             Example: `143.19.23.16` [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe delete --help
Usage: oci network cpe delete [OPTIONS]

  Deletes the specified CPE object. The CPE must not be connected to a DRG.
  This is an asynchronous operation. The CPE's `lifecycleState` will change to
  TERMINATING temporarily until the CPE is completely removed.

Options:
  --cpe-id TEXT     The OCID of the CPE. [required]
  --if-match TEXT   For optimistic concurrency control. In the PUT or DELETE
                    call for a resource, set the `if-match` parameter to the
                    value of the etag from a previous GET or POST response for
                    that resource.  The resource will be updated or deleted only
                    if the etag you provide matches the resource's current etag
                    value.
  --force           Perform deletion without prompting for confirmation.
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe get --help
Usage: oci network cpe get [OPTIONS]

  Gets the specified CPE's information.

Options:
  --cpe-id TEXT     The OCID of the CPE. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe list --help
Usage: oci network cpe list [OPTIONS]

  Lists the Customer-Premises Equipment objects (CPEs) in the specified
  compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network cpe update --help
Usage: oci network cpe update [OPTIONS]

  Updates the specified CPE's display name. Avoid entering confidential
  information.

Options:
  --cpe-id TEXT        The OCID of the CPE. [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options --help
Usage: oci network dhcp-options [OPTIONS] COMMAND [ARGS]...

  A set of DHCP options. Used by the VCN to automatically provide
  configuration information to the instances when they boot up. There are two
  options you can set:

  - [DhcpDnsOption]: Lets you specify how DNS (hostname resolution) is handled
  in the subnets in your VCN.

  - [DhcpSearchDomainOption]: Lets you specify a search domain name to use for
  DNS queries.

  For more information, see  [DNS in Your Virtual Cloud Network] and [DHCP
  Options].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new set of DHCP options for the...
  delete  Deletes the specified set of DHCP options,...
  get     Gets the specified set of DHCP options.
  list    Lists the sets of DHCP options in the...
  update  Updates the specified set of DHCP options.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options create --help
Usage: oci network dhcp-options create [OPTIONS]

  Creates a new set of DHCP options for the specified VCN. For more
  information, see [DhcpOptions].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the set of DHCP options to reside. Notice that
  the set of options doesn't have to be in the same compartment as the VCN,
  subnets, or other Networking Service components. If you're not sure which
  compartment to use, put the set of DHCP options in the same compartment as
  the VCN. For more information about compartments and access control, see
  [Overview of the IAM Service]. For information about OCIDs, see [Resource
  Identifiers].

  You may optionally specify a *display name* for the set of DHCP options,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the set
                                  of DHCP options. [required]
  --options COMPLEX TYPE          A set of DHCP options. [required]
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
                                  Example: '[{"type": "DomainNameServer",
                                  "customDnsServers": ["202.44.61.9"],
                                  "serverType": "CustomDnsServer"}]'
  --vcn-id TEXT                   The OCID of the VCN the set of DHCP options
                                  belongs to. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options delete --help
Usage: oci network dhcp-options delete [OPTIONS]

  Deletes the specified set of DHCP options, but only if it's not associated
  with a subnet. You can't delete a VCN's default set of DHCP options.

  This is an asynchronous operation. The state of the set of options will
  switch to TERMINATING temporarily until the set is completely removed.

Options:
  --dhcp-id TEXT                  The OCID for the set of DHCP options.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options get --help
Usage: oci network dhcp-options get [OPTIONS]

  Gets the specified set of DHCP options.

Options:
  --dhcp-id TEXT    The OCID for the set of DHCP options. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options list --help
Usage: oci network dhcp-options list [OPTIONS]

  Lists the sets of DHCP options in the specified VCN and specified
  compartment. The response includes the default set of options that
  automatically comes with each VCN, plus any other sets you've created.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network dhcp-options update --help
Usage: oci network dhcp-options update [OPTIONS]

  Updates the specified set of DHCP options. You can update the display name
  or the options themselves. Avoid entering confidential information.

  Note that the `options` object you provide replaces the entire existing set
  of options.

Options:
  --dhcp-id TEXT                  The OCID for the set of DHCP options.
                                  [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --options COMPLEX TYPE          This option is a JSON list with items of type
                                  DhcpOption.  For documentation on DhcpOption
                                  please see our API reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
                                  Example: '[{"type": "DomainNameServer",
                                  "customDnsServers": ["202.44.61.9"],
                                  "serverType": "CustomDnsServer"}]'
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg --help
Usage: oci network drg [OPTIONS] COMMAND [ARGS]...

  A Dynamic Routing Gateway (DRG), which is a virtual router that provides a
  path for private network traffic between your VCN and your existing network.
  You use it with other Networking Service components to create an IPSec VPN
  or a connection that uses Oracle Cloud Infrastructure FastConnect. For more
  information, see [Overview of the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Dynamic Routing Gateway (DRG)...
  delete  Deletes the specified DRG.
  get     Gets the specified DRG's information.
  list    Lists the DRGs in the specified compartment.
  update  Updates the specified DRG's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg create --help
Usage: oci network drg create [OPTIONS]

  Creates a new Dynamic Routing Gateway (DRG) in the specified compartment.
  For more information, see [Dynamic Routing Gateways (DRGs)].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the DRG to reside. Notice that the DRG doesn't
  have to be in the same compartment as the VCN, the DRG attachment, or other
  Networking Service components. If you're not sure which compartment to use,
  put the DRG in the same compartment as the VCN. For more information about
  compartments and access control, see [Overview of the IAM Service]. For
  information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the DRG, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  DRG. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg delete --help
Usage: oci network drg delete [OPTIONS]

  Deletes the specified DRG. The DRG must not be attached to a VCN or be
  connected to your on-premise network. Also, there must not be a route table
  that lists the DRG as a target. This is an asynchronous operation. The DRG's
  `lifecycleState` will change to TERMINATING temporarily until the DRG is
  completely removed.

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg get --help
Usage: oci network drg get [OPTIONS]

  Gets the specified DRG's information.

Options:
  --drg-id TEXT     The OCID of the DRG. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg list --help
Usage: oci network drg list [OPTIONS]

  Lists the DRGs in the specified compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg update --help
Usage: oci network drg update [OPTIONS]

  Updates the specified DRG's display name. Avoid entering confidential
  information.

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment --help
Usage: oci network drg-attachment [OPTIONS] COMMAND [ARGS]...

  A link between a DRG and VCN. For more information, see [Overview of the
  Networking Service].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Attaches the specified DRG to the specified...
  delete  Detaches a DRG from a VCN by deleting the...
  get     Gets the information for the specified...
  list    Lists the `DrgAttachment` objects for the...
  update  Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment create --help
Usage: oci network drg-attachment create [OPTIONS]

  Attaches the specified DRG to the specified VCN. A VCN can be attached to
  only one DRG at a time, and vice versa. The response includes a
  `DrgAttachment` object with its own OCID. For more information about DRGs,
  see [Dynamic Routing Gateways (DRGs)].

  You may optionally specify a *display name* for the attachment, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

  For the purposes of access control, the DRG attachment is automatically
  placed into the same compartment as the VCN. For more information about
  compartments and access control, see [Overview of the IAM Service].

Options:
  --drg-id TEXT                   The OCID of the DRG. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique. Avoid entering confidential
                                  information.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment delete --help
Usage: oci network drg-attachment delete [OPTIONS]

  Detaches a DRG from a VCN by deleting the corresponding `DrgAttachment`.
  This is an asynchronous operation. The attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --drg-attachment-id TEXT        The OCID of the DRG attachment. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment get --help
Usage: oci network drg-attachment get [OPTIONS]

  Gets the information for the specified `DrgAttachment`.

Options:
  --drg-attachment-id TEXT  The OCID of the DRG attachment. [required]
  --from-json TEXT          Provide input to this command as a JSON document
                            from a file.
                            
                            Options can still be provided on the
                            command line. If an option exists in both the JSON
                            document and the command line then the command line
                            specified value will be used
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment list --help
Usage: oci network drg-attachment list [OPTIONS]

  Lists the `DrgAttachment` objects for the specified compartment. You can
  filter the results by VCN or DRG.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --vcn-id TEXT              The OCID of the VCN.
  --drg-id TEXT              The OCID of the DRG.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network drg-attachment update --help
Usage: oci network drg-attachment update [OPTIONS]

  Updates the display name for the specified `DrgAttachment`. Avoid entering
  confidential information.

Options:
  --drg-attachment-id TEXT        The OCID of the DRG attachment. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [ATTACHING|ATTACHED|DETACHING|DETACHED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway --help
Usage: oci network internet-gateway [OPTIONS] COMMAND [ARGS]...

  Represents a router that connects the edge of a VCN with the Internet. For
  an example scenario that uses an Internet Gateway, see [Typical Networking
  Service Scenarios].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Internet Gateway for the...
  delete  Deletes the specified Internet Gateway.
  get     Gets the specified Internet Gateway's...
  list    Lists the Internet Gateways in the specified...
  update  Updates the specified Internet Gateway.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway create --help
Usage: oci network internet-gateway create [OPTIONS]

  Creates a new Internet Gateway for the specified VCN. For more information,
  see [Connectivity to the Internet].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the Internet Gateway to reside. Notice that the
  Internet Gateway doesn't have to be in the same compartment as the VCN or
  other Networking Service components. If you're not sure which compartment to
  use, put the Internet Gateway in the same compartment with the VCN. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the Internet Gateway,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

  For traffic to flow between a subnet and an Internet Gateway, you must
  create a route rule accordingly in the subnet's route table (for example,
  0.0.0.0/0 > Internet Gateway). See [UpdateRouteTable].

  You must specify whether the Internet Gateway is enabled when you create it.
  If it's disabled, that means no traffic will flow to/from the internet even
  if there's a route rule that enables that traffic. You can later use
  [UpdateInternetGateway] to easily disable/enable the gateway without
  changing the route rule.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  Internet Gateway. [required]
  --is-enabled BOOLEAN            Whether the gateway is enabled upon creation.
                                  [required]
  --vcn-id TEXT                   The OCID of the VCN the Internet Gateway is
                                  attached to. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway delete --help
Usage: oci network internet-gateway delete [OPTIONS]

  Deletes the specified Internet Gateway. The Internet Gateway does not have
  to be disabled, but there must not be a route table that lists it as a
  target.

  This is an asynchronous operation. The gateway's `lifecycleState` will
  change to TERMINATING temporarily until the gateway is completely removed.

Options:
  --ig-id TEXT                    The OCID of the Internet Gateway. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway get --help
Usage: oci network internet-gateway get [OPTIONS]

  Gets the specified Internet Gateway's information.

Options:
  --ig-id TEXT      The OCID of the Internet Gateway. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway list --help
Usage: oci network internet-gateway list [OPTIONS]

  Lists the Internet Gateways in the specified VCN and the specified
  compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network internet-gateway update --help
Usage: oci network internet-gateway update [OPTIONS]

  Updates the specified Internet Gateway. You can disable/enable it, or change
  its display name. Avoid entering confidential information.

  If the gateway is disabled, that means no traffic will flow to/from the
  internet even if there's a route rule that enables that traffic.

Options:
  --ig-id TEXT                    The OCID of the Internet Gateway. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --is-enabled BOOLEAN            Whether the gateway is enabled.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection --help
Usage: oci network ip-sec-connection [OPTIONS] COMMAND [ARGS]...

  A connection between a DRG and CPE. This connection consists of multiple
  IPSec tunnels. Creating this connection is one of the steps required when
  setting up an IPSec VPN. For more information, see [Overview of the
  Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Creates a new IPSec connection between the...
  delete      Deletes the specified IPSec connection.
  get         Gets the specified IPSec connection's basic...
  get-config  Gets the configuration information for the...
  get-status  Gets the status of the specified IPSec...
  list        Lists the IPSec connections for the specified...
  update      Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection create --help
Usage: oci network ip-sec-connection create [OPTIONS]

  Creates a new IPSec connection between the specified DRG and CPE. For more
  information, see [IPSec VPNs].

  In the request, you must include at least one static route to the CPE object
  (you're allowed a maximum of 10). For example: 10.0.8.0/16.

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the IPSec connection to reside. Notice that the
  IPSec connection doesn't have to be in the same compartment as the DRG, CPE,
  or other Networking Service components. If you're not sure which compartment
  to use, put the IPSec connection in the same compartment as the DRG. For
  more information about compartments and access control, see [Overview of the
  IAM Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the IPSec connection,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

  After creating the IPSec connection, you need to configure your on-premises
  router with tunnel-specific information returned by
  [GetIPSecConnectionDeviceConfig]. For each tunnel, that operation gives you
  the IP address of Oracle's VPN headend and the shared secret (that is, the
  pre-shared key). For more information, see [Configuring Your On-Premises
  Router for an IPSec VPN].

  To get the status of the tunnels (whether they're up or down), use
  [GetIPSecConnectionDeviceStatus].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  IPSec connection. [required]
  --cpe-id TEXT                   The OCID of the CPE. [required]
  --drg-id TEXT                   The OCID of the DRG. [required]
  --static-routes COMPLEX TYPE    Static routes to the CPE. At least one route
                                  must be included. The CIDR must not be a
                                  multicast address or class E address. This
                                  must be provided in JSON format.
                                  
                                  Example:
                                  '["10.0.0.0/16"]'
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection delete --help
Usage: oci network ip-sec-connection delete [OPTIONS]

  Deletes the specified IPSec connection. If your goal is to disable the IPSec
  VPN between your VCN and on-premises network, it's easiest to simply detach
  the DRG but keep all the IPSec VPN components intact. If you were to delete
  all the components and then later need to create an IPSec VPN again, you
  would need to configure your on-premises router again with the new
  information returned from [CreateIPSecConnection].

  This is an asynchronous operation. The connection's `lifecycleState` will
  change to TERMINATING temporarily until the connection is completely
  removed.

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection get --help
Usage: oci network ip-sec-connection get [OPTIONS]

  Gets the specified IPSec connection's basic information, including the
  static routes for the on-premises router. If you want the status of the
  connection (whether it's up or down), use [GetIPSecConnectionDeviceStatus].

Options:
  --ipsc-id TEXT    The OCID of the IPSec connection. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection get-config --help
Usage: oci network ip-sec-connection get-config [OPTIONS]

  Gets the configuration information for the specified IPSec connection. For
  each tunnel, the response includes the IP address of Oracle's VPN headend
  and the shared secret.

Options:
  --ipsc-id TEXT    The OCID of the IPSec connection. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection get-status --help
Usage: oci network ip-sec-connection get-status [OPTIONS]

  Gets the status of the specified IPSec connection (whether it's up or down).

Options:
  --ipsc-id TEXT    The OCID of the IPSec connection. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection list --help
Usage: oci network ip-sec-connection list [OPTIONS]

  Lists the IPSec connections for the specified compartment. You can filter
  the results by DRG or CPE.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --drg-id TEXT              The OCID of the DRG.
  --cpe-id TEXT              The OCID of the CPE.
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network ip-sec-connection update --help
Usage: oci network ip-sec-connection update [OPTIONS]

  Updates the display name for the specified IPSec connection. Avoid entering
  confidential information.

Options:
  --ipsc-id TEXT                  The OCID of the IPSec connection. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway --help
Usage: oci network local-peering-gateway [OPTIONS] COMMAND [ARGS]...

  A local peering gateway (LPG) is an object on a VCN that lets that VCN peer
  with another VCN in the same region. *Peering* means that the two VCNs can
  communicate using private IP addresses, but without the traffic traversing
  the internet or routing through your on-premises network. For more
  information, see [VCN Peering].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  connect  Connects this local peering gateway (LPG) to...
  create   Creates a new local peering gateway (LPG) for...
  delete   Deletes the specified local peering gateway...
  get      Gets the specified local peering gateway's...
  list     Lists the local peering gateways (LPGs) for...
  update   Updates the specified local peering gateway...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway connect --help
Usage: oci network local-peering-gateway connect [OPTIONS]

  Connects this local peering gateway (LPG) to another one in the same region.

  This operation must be called by the VCN administrator who is designated as
  the *requestor* in the peering relationship. The *acceptor* must implement
  an Identity and Access Management (IAM) policy that gives the requestor
  permission to connect to LPGs in the acceptor's compartment. Without that
  permission, this operation will fail. For more information, see [VCN
  Peering].

Options:
  --local-peering-gateway-id TEXT
                                  The OCID of the local peering gateway.
                                  [required]
  --peer-id TEXT                  The OCID of the LPG you want to peer with.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway create --help
Usage: oci network local-peering-gateway create [OPTIONS]

  Creates a new local peering gateway (LPG) for the specified VCN.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment containing the
                                  local peering gateway (LPG). [required]
  --vcn-id TEXT                   The OCID of the VCN the LPG belongs to.
                                  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway delete --help
Usage: oci network local-peering-gateway delete [OPTIONS]

  Deletes the specified local peering gateway (LPG).

  This is an asynchronous operation; the local peering gateway's
  `lifecycleState` changes to TERMINATING temporarily until the local peering
  gateway is completely removed.

Options:
  --local-peering-gateway-id TEXT
                                  The OCID of the local peering gateway.
                                  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway get --help
Usage: oci network local-peering-gateway get [OPTIONS]

  Gets the specified local peering gateway's information.

Options:
  --local-peering-gateway-id TEXT
                                  The OCID of the local peering gateway.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway list --help
Usage: oci network local-peering-gateway list [OPTIONS]

  Lists the local peering gateways (LPGs) for the specified VCN and
  compartment (the LPG's compartment).

Options:
  -c, --compartment-id TEXT  The OCID of the compartment. [required]
  --vcn-id TEXT              The OCID of the VCN. [required]
  --limit INTEGER            The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file.
                             
                             Options can still be provided on the
                             command line. If an option exists in both the JSON
                             document and the command line then the command line
                             specified value will be used
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network local-peering-gateway update --help
Usage: oci network local-peering-gateway update [OPTIONS]

  Updates the specified local peering gateway (LPG).

Options:
  --local-peering-gateway-id TEXT
                                  The OCID of the local peering gateway.
                                  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip --help
Usage: oci network private-ip [OPTIONS] COMMAND [ARGS]...

  A *private IP* is a conceptual term that refers to a private IP address and
  related properties. The `privateIp` object is the API representation of a
  private IP.

  Each instance has a *primary private IP* that is automatically created and
  assigned to the primary VNIC during instance launch. If you add a secondary
  VNIC to the instance, it also automatically gets a primary private IP. You
  can't remove a primary private IP from its VNIC. The primary private IP is
  automatically deleted when the VNIC is terminated.

  You can add *secondary private IPs* to a VNIC after it's created. For more
  information, see the `privateIp` operations and also [IP Addresses].

  **Note:** Only [ListPrivateIps] and [GetPrivateIp] work with *primary*
  private IPs. To create and update primary private IPs, you instead work with
  instance and VNIC operations. For example, a primary private IP's properties
  come from the values you specify in [CreateVnicDetails] when calling either
  [LaunchInstance] or [AttachVnic]. To update the hostname for a primary
  private IP, you use [UpdateVnic].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Unassigns and deletes the specified private...
  get     Gets the specified private IP.
  list    Lists the [PrivateIp] objects based on one of...
  update  Updates the specified private IP.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip delete --help
Usage: oci network private-ip delete [OPTIONS]

  Unassigns and deletes the specified private IP. You must specify the
  object's OCID. The private IP address is returned to the subnet's pool of
  available addresses.

  This operation cannot be used with primary private IPs, which are
  automatically unassigned and deleted when the VNIC is terminated.

  **Important:** If a secondary private IP is the [target of a route rule],
  unassigning it from the VNIC causes that route rule to blackhole and the
  traffic will be dropped.

Options:
  --private-ip-id TEXT  The OCID of the private IP. [required]
  --if-match TEXT       For optimistic concurrency control. In the PUT or DELETE
                        call for a resource, set the `if-match` parameter to the
                        value of the etag from a previous GET or POST response
                        for that resource.  The resource will be updated or
                        deleted only if the etag you provide matches the
                        resource's current etag value.
  --force               Perform deletion without prompting for confirmation.
  --from-json TEXT      Provide input to this command as a JSON document from a
                        file.
                        
                        Options can still be provided on the command
                        line. If an option exists in both the JSON document and
                        the command line then the command line specified value
                        will be used
  -?, -h, --help        Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip get --help
Usage: oci network private-ip get [OPTIONS]

  Gets the specified private IP. You must specify the object's OCID.
  Alternatively, you can get the object by using [ListPrivateIps] with the
  private IP address (for example, 10.0.3.3) and subnet OCID.

Options:
  --private-ip-id TEXT  The OCID of the private IP. [required]
  --from-json TEXT      Provide input to this command as a JSON document from a
                        file.
                        
                        Options can still be provided on the command
                        line. If an option exists in both the JSON document and
                        the command line then the command line specified value
                        will be used
  -?, -h, --help        Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip list --help
Usage: oci network private-ip list [OPTIONS]

  Lists the [PrivateIp] objects based on one of these filters:

      - Subnet OCID.
      - VNIC OCID.
      - Both private IP address and subnet OCID: This lets you get a `privateIP` object
        based on its private IP address (for example, 10.0.3.3)  and not its OCID.
        For comparison, [GetPrivateIp] requires the OCID.

  If you're listing all the private IPs associated with a given subnet or
  VNIC, the response includes both primary and secondary private IPs.

Options:
  --limit INTEGER      The maximum number of items to return in a paginated
                       "List" call.
                       
                       Example: `500`
  --page TEXT          The value of the `opc-next-page` response header from the
                       previous "List" call.
  --ip-address TEXT    An IP address.
                       
                       Example: `10.0.3.3`
  --subnet-id TEXT     The OCID of the subnet.
  --vnic-id TEXT       The OCID of the VNIC.
  --all                Fetches all pages of results. If you provide this option,
                       then you cannot provide the --limit option.
  --page-size INTEGER  When fetching results, the number of results to fetch per
                       call. Only valid when used with --all or --limit, and
                       ignored otherwise.
  --from-json TEXT     Provide input to this command as a JSON document from a
                       file.
                       
                       Options can still be provided on the command line.
                       If an option exists in both the JSON document and the
                       command line then the command line specified value will
                       be used
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network private-ip update --help
Usage: oci network private-ip update [OPTIONS]

  Updates the specified private IP. You must specify the object's OCID. Use
  this operation if you want to:

      - Change the display name for a secondary private IP.
      - Change the hostname for a secondary private IP.

  To move a secondary private IP to another VNIC, use the `bcms network vnic
  assign-private-ip` command with the --unassign-if-already-assigned switch.

  This operation cannot be used with primary private IPs. To update the
  hostname for the primary IP on a VNIC, use [UpdateVnic].

Options:
  --private-ip-id TEXT          The OCID of the private IP. [required]
  --defined-tags COMPLEX TYPE   Defined tags for this resource. Each key is
                                predefined and scoped to a namespace. For more
                                information, see [Resource Tags].
                                
                                Example:
                                `{"Operations": {"CostCenter": "42"}}`
                                This is a
                                complex type whose value must be valid JSON. The
                                value can be provided as a string on the command
                                line or passed in as a file using
                                the
                                file://path/to/file syntax.
                                
                                The --generate-
                                param-json-input option can be used to generate
                                an example of the JSON which must be provided.
                                We recommend storing this example
                                in a file,
                                modifying it as needed and then passing it back
                                in via the file:// syntax.
  --display-name TEXT           A user-friendly name. Does not have to be
                                unique, and it's changeable. Avoid entering
                                confidential information.
  --freeform-tags COMPLEX TYPE  Free-form tags for this resource. Each tag is a
                                simple key-value pair with no predefined name,
                                type, or namespace. For more information, see
                                [Resource Tags].
                                
                                Example: `{"Department":
                                "Finance"}`
                                This is a complex type whose value
                                must be valid JSON. The value can be provided as
                                a string on the command line or passed in as a
                                file using
                                the file://path/to/file syntax.
                                
                                The
                                --generate-param-json-input option can be used
                                to generate an example of the JSON which must be
                                provided. We recommend storing this example
                                in a
                                file, modifying it as needed and then passing it
                                back in via the file:// syntax.
  --hostname-label TEXT         The hostname for the private IP. Used for DNS.
                                The value is the hostname portion of the private
                                IP's fully qualified domain name (FQDN) (for
                                example, `bminstance-1` in FQDN
                                `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                Must be unique across all VNICs in the subnet
                                and comply with [RFC 952] and [RFC 1123].
                                
                                For
                                more information, see [DNS in Your Virtual Cloud
                                Network].
                                
                                Example: `bminstance-1`
  --if-match TEXT               For optimistic concurrency control. In the PUT
                                or DELETE call for a resource, set the `if-
                                match` parameter to the value of the etag from a
                                previous GET or POST response for that resource.
                                The resource will be updated or deleted only if
                                the etag you provide matches the resource's
                                current etag value.
  --force                       Perform update without prompting for
                                confirmation.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file.
                                
                                Options can still be provided on
                                the command line. If an option exists in both
                                the JSON document and the command line then the
                                command line specified value will be used
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network public-ip --help
Usage: oci network public-ip [OPTIONS] COMMAND [ARGS]...

  A *public IP* is a conceptual term that refers to a public IP address and
  related properties. The `publicIp` object is the API representation of a
  public IP.

  There are two types of public IPs: 1. Ephemeral 2. Reserved

  For more information and comparison of the two types, see [Public IP
  Addresses].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a public IP.
  delete  Unassigns and deletes the specified public IP...
  get     Gets the specified public IP object.
  list    Lists either the ephemeral or reserved...
  update  Updates the specified public IP.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network public-ip create --help
Usage: oci network public-ip create [OPTIONS]

  Creates a public IP. Use the `lifetime` property to specify whether it's an
  ephemeral or reserved public IP. For information about limits on how many
  you can create, see [Public IP Addresses].

  * **For an ephemeral public IP:** You must also specify a `privateIpId` with
  the OCID of the primary private IP you want to assign the public IP to. The
  public IP is created in the same Availability Domain as the private IP. An
  ephemeral public IP must always be assigned to a private IP, and only to the
  *primary* private IP on a VNIC, not a secondary private IP.

  * **For a reserved public IP:** You may also optionally assign the public IP
  to a private IP by specifying `privateIpId`. Or you can later assign the
  public IP with [UpdatePublicIp].

  **Note:** When assigning a public IP to a private IP, the private IP must
  not already have a public IP with `lifecycleState` = ASSIGNING or ASSIGNED.
  If it does, an error is returned.

  Also, for reserved public IPs, the optional assignment part of this
  operation is asynchronous. Poll the public IP's `lifecycleState` to
  determine if the assignment succeeded.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  public IP. For ephemeral public IPs, you must
                                  set this to the private IP's compartment OCID.
                                  [required]
  --lifetime [EPHEMERAL|RESERVED]
                                  Defines when the public IP is deleted and
                                  released back to the Oracle Cloud
                                  Infrastructure public IP pool. For more
                                  information, see [Public IP Addresses].
                                  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --private-ip-id TEXT            The OCID of the private IP to assign the
                                  public IP to.
                                  
                                  Required for an ephemeral
                                  public IP because it must always be assigned
                                  to a private IP (specifically a *primary*
                                  private IP).
                                  
                                  Optional for a reserved public
                                  IP. If you don't provide it, the public IP is
                                  created but not assigned to a private IP. You
                                  can later assign the public IP with
                                  [UpdatePublicIp].
  --wait-for-state [PROVISIONING|AVAILABLE|ASSIGNING|ASSIGNED|UNASSIGNING|UNASSIGNED|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network public-ip delete --help
Usage: oci network public-ip delete [OPTIONS]

  Unassigns and deletes the specified public IP (either ephemeral or
  reserved). You must specify the object's OCID. The public IP address is
  returned to the Oracle Cloud Infrastructure public IP pool.

  For an assigned reserved public IP, the initial unassignment portion of this
  operation is asynchronous. Poll the public IP's `lifecycleState` to
  determine if the operation succeeded.

  If you want to simply unassign a reserved public IP and return it to your
  pool of reserved public IPs, instead use [UpdatePublicIp].

Options:
  --public-ip-id TEXT             The OCID of the public IP. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|ASSIGNING|ASSIGNED|UNASSIGNING|UNASSIGNED|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network public-ip get --help
Usage: oci network public-ip get [OPTIONS]

  Gets the specified public IP object. The command needs at least one of the
  options to be used to be able to get the public IP object successfully.

Options:
  --public-ip-address TEXT  A public IP address. Example: 129.146.2.1
  --public-ip-id TEXT       The public IP's OCID.
  --private-ip-id TEXT      The private IP's OCID.
  --from-json TEXT          Provide input to this command as a JSON document
                            from a file.
                            
                            Options can still be provided on the
                            command line. If an option exists in both the JSON
                            document and the command line then the command line
                            specified value will be used
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network public-ip list --help
Usage: oci network public-ip list [OPTIONS]

  Lists either the ephemeral or reserved [PublicIp] objects in the specified
  compartment.

  To list your reserved public IPs, set `scope` = `REGION`, and leave the
  `availabilityDomain` parameter empty.

  To list your ephemeral public IPs, set `scope` = `AVAILABILITY_DOMAIN`, and
  set the `availabilityDomain` parameter to the desired Availability Domain.
  An ephemeral public IP is always in the same Availability Domain and
  compartment as the private IP it's assigned to.

Options:
  --scope [REGION|AVAILABILITY_DOMAIN]
                                  Whether the public IP is regional or specific
                                  to a particular Availability Domain.
                                  
                                  *
                                  `REGION`: The public IP exists within a region
                                  and can be assigned to a private IP in any
                                  Availability Domain in the region. Reserved
                                  public IPs have `scope` = `REGION`.
                                  
                                  *
                                  `AVAILABILITY_DOMAIN`: The public IP exists
                                  within the Availability Domain of the private
                                  IP it's assigned to, which is specified by the
                                  `availabilityDomain` property of the public IP
                                  object. Ephemeral public IPs have `scope` =
                                  `AVAILABILITY_DOMAIN`. [required]
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --availability-domain TEXT      The name of the Availability Domain.
                                  
                                  Example:
                                  `Uocm:PHX-AD-1`
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network public-ip update --help
Usage: oci network public-ip update [OPTIONS]

  Updates the specified public IP. You must specify the object's OCID. Use
  this operation if you want to:

  * Assign a reserved public IP in your pool to a private IP. * Move a
  reserved public IP to a different private IP. * Unassign a reserved public
  IP from a private IP (which returns it to your pool of reserved public IPs).
  * Change the display name for a public IP (either ephemeral or reserved).

  Assigning, moving, and unassigning a reserved public IP are asynchronous
  operations. Poll the public IP's `lifecycleState` to determine if the
  operation succeeded.

  **Note:** When moving a reserved public IP, the target private IP must not
  already have a public IP with `lifecycleState` = ASSIGNING or ASSIGNED. If
  it does, an error is returned. Also, the initial unassignment from the
  original private IP always succeeds, but the assignment to the target
  private IP is asynchronous and could fail silently (for example, if the
  target private IP is deleted or has a different public IP assigned to it in
  the interim). If that occurs, the public IP remains unassigned and its
  `lifecycleState` switches to AVAILABLE (it is not reassigned to its original
  private IP). You must poll the public IP's `lifecycleState` to determine if
  the move succeeded.

  Regarding ephemeral public IPs:

  * If you want to assign an ephemeral public IP to a primary private IP, use
  [CreatePublicIp]. * You can't move an ephemeral public IP to a different
  private IP. * If you want to unassign an ephemeral public IP from its
  private IP, use [DeletePublicIp], which unassigns and deletes the ephemeral
  public IP.

  **Note:** If a public IP (either ephemeral or reserved) is assigned to a
  secondary private IP (see [PrivateIp]), and you move that secondary private
  IP to another VNIC, the public IP moves with it.

  **Note:** There's a limit to the number of [public IPs] a VNIC or instance
  can have. If you try to move a reserved public IP to a VNIC or instance that
  has already reached its public IP limit, an error is returned. For
  information about the public IP limits, see [Public IP Addresses].

Options:
  --public-ip-id TEXT             The OCID of the public IP. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --private-ip-id TEXT            The OCID of the private IP to assign the
                                  public IP to. * If the public IP is already
                                  assigned to a different private IP, it will be
                                  unassigned and then reassigned to the
                                  specified private IP. * If you set this field
                                  to an empty string, the public IP will be
                                  unassigned from the private IP it is currently
                                  assigned to.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|ASSIGNING|ASSIGNED|UNASSIGNING|UNASSIGNED|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table --help
Usage: oci network route-table [OPTIONS] COMMAND [ARGS]...

  A collection of `RouteRule` objects, which are used to route packets based
  on destination IP to a particular network entity. For more information, see
  [Overview of the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new route table for the specified...
  delete  Deletes the specified route table, but only...
  get     Gets the specified route table's information.
  list    Lists the route tables in the specified VCN...
  update  Updates the specified route table's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table create --help
Usage: oci network route-table create [OPTIONS]

  Creates a new route table for the specified VCN. In the request you must
  also include at least one route rule for the new route table. For
  information on the number of rules you can have in a route table, see
  [Service Limits]. For general information about route tables in your VCN and
  the types of targets you can use in route rules, see [Route Tables].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the route table to reside. Notice that the route
  table doesn't have to be in the same compartment as the VCN, subnets, or
  other Networking Service components. If you're not sure which compartment to
  use, put the route table in the same compartment as the VCN. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the route table, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  route table. [required]
  --route-rules COMPLEX TYPE      The collection of rules used for routing
                                  destination IPs to network devices. [required]
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax. 
                                  
                                  Example: '[{"cidrBlock":"0.0.0.0/0",
                                  "networkEntityId":"ocid1.internetgateway.oc1.p
                                  hx.aaaaaaaaxtfqb2srw7hoi5cmdum4n6ow2xm2zhrzqqy
                                  pmlteiiebtmvl75ya"}]'
  --vcn-id TEXT                   The OCID of the VCN the route table belongs
                                  to. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table delete --help
Usage: oci network route-table delete [OPTIONS]

  Deletes the specified route table, but only if it's not associated with a
  subnet. You can't delete a VCN's default route table.

  This is an asynchronous operation. The route table's `lifecycleState` will
  change to TERMINATING temporarily until the route table is completely
  removed.

Options:
  --rt-id TEXT                    The OCID of the route table. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table get --help
Usage: oci network route-table get [OPTIONS]

  Gets the specified route table's information.

Options:
  --rt-id TEXT      The OCID of the route table. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table list --help
Usage: oci network route-table list [OPTIONS]

  Lists the route tables in the specified VCN and specified compartment. The
  response includes the default route table that automatically comes with each
  VCN, plus any route tables you've created.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network route-table update --help
Usage: oci network route-table update [OPTIONS]

  Updates the specified route table's display name or route rules. Avoid
  entering confidential information.

  Note that the `routeRules` object you provide replaces the entire existing
  set of rules.

Options:
  --rt-id TEXT                    The OCID of the route table. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --route-rules COMPLEX TYPE      The collection of rules used for routing
                                  destination IPs to network devices.
                                  
                                  This
                                  option is a JSON list with items of type
                                  RouteRule.  For documentation on RouteRule
                                  please see our API reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
                                  Example: '[{"cidrBlock":"0.0.0.0/0","networkEn
                                  tityId":"ocid1.internetgateway.oc1.phx.aaaaaaa
                                  axtfqb2srw7hoi5cmdum4n6ow2xm2zhrzqqypmlteiiebt
                                  mvl75ya"}]'
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list --help
Usage: oci network security-list [OPTIONS] COMMAND [ARGS]...

  A set of virtual firewall rules for your VCN. Security lists are configured
  at the subnet level, but the rules are applied to the ingress and egress
  traffic for the individual instances in the subnet. The rules can be
  stateful or stateless. For more information, see [Security Lists].

  **Important:** Oracle Cloud Infrastructure Compute service images
  automatically include firewall rules (for example, Linux iptables, Windows
  firewall). If there are issues with some type of access to an instance, make
  sure both the security lists associated with the instance's subnet and the
  instance's firewall rules are set correctly.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new security list for the specified...
  delete  Deletes the specified security list, but only...
  get     Gets the specified security list's...
  list    Lists the security lists in the specified VCN...
  update  Updates the specified security list's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list create --help
Usage: oci network security-list create [OPTIONS]

  Creates a new security list for the specified VCN. For more information
  about security lists, see [Security Lists]. For information on the number of
  rules you can have in a security list, see [Service Limits].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the security list to reside. Notice that the
  security list doesn't have to be in the same compartment as the VCN,
  subnets, or other Networking Service components. If you're not sure which
  compartment to use, put the security list in the same compartment as the
  VCN. For more information about compartments and access control, see
  [Overview of the IAM Service]. For information about OCIDs, see [Resource
  Identifiers].

  You may optionally specify a *display name* for the security list, otherwise
  a default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  security list. [required]
  --egress-security-rules COMPLEX TYPE
                                  Rules for allowing egress IP packets.
                                  [required]
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax. 
                                  
                                  Example: '[{"destination":
                                  "10.0.2.0/24", "protocol": "6", "isStateless":
                                  true, "tcpOptions": {"destinationPortRange":
                                  {"max": 1521, "min": 1521}, "sourcePortRange":
                                  {"max": 1521, "min": 1521}}}]'
  --ingress-security-rules COMPLEX TYPE
                                  Rules for allowing ingress IP packets.
                                  [required]
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax. 
                                  
                                  Example: '[{"source":
                                  "10.0.2.0/24", "protocol": "6", "isStateless":
                                  true, "tcpOptions": {"destinationPortRange":
                                  {"max": 1521, "min": 1521}, "sourcePortRange":
                                  {"max": 1521, "min": 1521}}}]'
  --vcn-id TEXT                   The OCID of the VCN the security list belongs
                                  to. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list delete --help
Usage: oci network security-list delete [OPTIONS]

  Deletes the specified security list, but only if it's not associated with a
  subnet. You can't delete a VCN's default security list.

  This is an asynchronous operation. The security list's `lifecycleState` will
  change to TERMINATING temporarily until the security list is completely
  removed.

Options:
  --security-list-id TEXT         The OCID of the security list. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list get --help
Usage: oci network security-list get [OPTIONS]

  Gets the specified security list's information.

Options:
  --security-list-id TEXT  The OCID of the security list. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list list --help
Usage: oci network security-list list [OPTIONS]

  Lists the security lists in the specified VCN and compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network security-list update --help
Usage: oci network security-list update [OPTIONS]

  Updates the specified security list's display name or rules. Avoid entering
  confidential information.

  Note that the `egressSecurityRules` or `ingressSecurityRules` objects you
  provide replace the entire existing objects.

Options:
  --security-list-id TEXT         The OCID of the security list. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --egress-security-rules COMPLEX TYPE
                                  Rules for allowing egress IP packets.
                                  
                                  This
                                  option is a JSON list with items of type
                                  EgressSecurityRule.  For documentation on
                                  EgressSecurityRule please see our API
                                  reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
                                  Example: '[{"destination": "10.0.2.0/24",
                                  "protocol": "6", "isStateless": true,
                                  "tcpOptions": {"destinationPortRange": {"max":
                                  1521, "min": 1521}, "sourcePortRange": {"max":
                                  1521, "min": 1521}}}]'
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --ingress-security-rules COMPLEX TYPE
                                  Rules for allowing ingress IP packets.
                                  
                                  This
                                  option is a JSON list with items of type
                                  IngressSecurityRule.  For documentation on
                                  IngressSecurityRule please see our API
                                  reference: https://docs.us-
                                  phoenix-1.oraclecloud.com/api/#.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
                                  Example: '[{"source": "10.0.2.0/24",
                                  "protocol": "6", "isStateless": true,
                                  "tcpOptions": {"destinationPortRange": {"max":
                                  1521, "min": 1521}, "sourcePortRange": {"max":
                                  1521, "min": 1521}}}]'
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet --help
Usage: oci network subnet [OPTIONS] COMMAND [ARGS]...

  A logical subdivision of a VCN. Each subnet exists in a single Availability
  Domain and consists of a contiguous range of IP addresses that do not
  overlap with other subnets in the VCN. Example: 172.16.1.0/24. For more
  information, see [Overview of the Networking Service] and [VCNs and
  Subnets].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new subnet in the specified VCN.
  delete  Deletes the specified subnet, but only if...
  get     Gets the specified subnet's information.
  list    Lists the subnets in the specified VCN and...
  update  Updates the specified subnet's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet create --help
Usage: oci network subnet create [OPTIONS]

  Creates a new subnet in the specified VCN. You can't change the size of the
  subnet after creation, so it's important to think about the size of subnets
  you need before creating them. For more information, see [VCNs and Subnets].
  For information on the number of subnets you can have in a VCN, see [Service
  Limits].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the subnet to reside. Notice that the subnet
  doesn't have to be in the same compartment as the VCN, route tables, or
  other Networking Service components. If you're not sure which compartment to
  use, put the subnet in the same compartment as the VCN. For more information
  about compartments and access control, see [Overview of the IAM Service].
  For information about OCIDs, see [Resource Identifiers].

  You may optionally associate a route table with the subnet. If you don't,
  the subnet will use the VCN's default route table. For more information
  about route tables, see [Route Tables].

  You may optionally associate a security list with the subnet. If you don't,
  the subnet will use the VCN's default security list. For more information
  about security lists, see [Security Lists].

  You may optionally associate a set of DHCP options with the subnet. If you
  don't, the subnet will use the VCN's default set. For more information about
  DHCP options, see [DHCP Options].

  You may optionally specify a *display name* for the subnet, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

  You can also add a DNS label for the subnet, which is required if you want
  the Internet and VCN Resolver to resolve hostnames for instances in the
  subnet. For more information, see [DNS in Your Virtual Cloud Network].

Options:
  --availability-domain TEXT      The Availability Domain to contain the subnet.
                                  Example: `Uocm:PHX-AD-1` [required]
  --cidr-block TEXT               The CIDR IP address range of the subnet.
                                  Example: `172.16.1.0/24` [required]
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  subnet. [required]
  --vcn-id TEXT                   The OCID of the VCN to contain the subnet.
                                  [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --dhcp-options-id TEXT          The OCID of the set of DHCP options the subnet
                                  will use. If you don't provide a value, the
                                  subnet will use the VCN's default set of DHCP
                                  options.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --dns-label TEXT                A DNS label for the subnet, used in
                                  conjunction with the VNIC's hostname and VCN's
                                  DNS label to form a fully qualified domain
                                  name (FQDN) for each VNIC within this subnet
                                  (for example,
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be an alphanumeric string that begins
                                  with a letter and is unique within the VCN.
                                  The value cannot be changed.
                                  
                                  This value must
                                  be set if you want to use the Internet and VCN
                                  Resolver to resolve the hostnames of instances
                                  in the subnet. It can only be set if the VCN
                                  itself was created with a DNS label.
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
                                  
                                  Example: `subnet123`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --prohibit-public-ip-on-vnic BOOLEAN
                                  Whether VNICs within this subnet can have
                                  public IP addresses. Defaults to false, which
                                  means VNICs created in this subnet will
                                  automatically be assigned public IP addresses
                                  unless specified otherwise during instance
                                  launch (with the `--assign-public-ip` flag).
                                  If `--prohibit-public-ip-on-vnic` is set to
                                  true, VNICs created in this subnet cannot have
                                  public IP addresses (i.e., it's a private
                                  subnet).
                                  
                                  Example: `true`
  --route-table-id TEXT           The OCID of the route table the subnet will
                                  use. If you don't provide a value, the subnet
                                  will use the VCN's default route table.
  --security-list-ids COMPLEX TYPE
                                  OCIDs for the security lists to associate with
                                  the subnet. If you don't provide a value, the
                                  VCN's default security list will be associated
                                  with the subnet. Remember that security lists
                                  are associated at the subnet level, but the
                                  rules are applied to the individual VNICs in
                                  the subnet.
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax. 
                                  
                                  Example: '["ocid1.securityli
                                  st.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsv
                                  v7ynp4ori7aealcvhzicnzhyq"]'
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet delete --help
Usage: oci network subnet delete [OPTIONS]

  Deletes the specified subnet, but only if there are no instances in the
  subnet. This is an asynchronous operation. The subnet's `lifecycleState`
  will change to TERMINATING temporarily. If there are any instances in the
  subnet, the state will instead change back to AVAILABLE.

Options:
  --subnet-id TEXT                The OCID of the subnet. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet get --help
Usage: oci network subnet get [OPTIONS]

  Gets the specified subnet's information.

Options:
  --subnet-id TEXT  The OCID of the subnet. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet list --help
Usage: oci network subnet list [OPTIONS]

  Lists the subnets in the specified VCN and the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network subnet update --help
Usage: oci network subnet update [OPTIONS]

  Updates the specified subnet's display name. Avoid entering confidential
  information.

Options:
  --subnet-id TEXT                The OCID of the subnet. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn --help
Usage: oci network vcn [OPTIONS] COMMAND [ARGS]...

  A Virtual Cloud Network (VCN). For more information, see [Overview of the
  Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Virtual Cloud Network (VCN).
  delete  Deletes the specified VCN.
  get     Gets the specified VCN's information.
  list    Lists the Virtual Cloud Networks (VCNs) in...
  update  Updates the specified VCN's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn create --help
Usage: oci network vcn create [OPTIONS]

  Creates a new Virtual Cloud Network (VCN). For more information, see [VCNs
  and Subnets].

  For the VCN you must specify a single, contiguous IPv4 CIDR block. Oracle
  recommends using one of the private IP address ranges specified in [RFC
  1918] (10.0.0.0/8, 172.16/12, and 192.168/16). Example: 172.16.0.0/16. The
  CIDR block can range from /16 to /30, and it must not overlap with your on-
  premises network. You can't change the size of the VCN after creation.

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the VCN to reside. Consult an Oracle Cloud
  Infrastructure administrator in your organization if you're not sure which
  compartment to use. Notice that the VCN doesn't have to be in the same
  compartment as the subnets or other Networking Service components. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the VCN, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

  You can also add a DNS label for the VCN, which is required if you want the
  instances to use the Interent and VCN Resolver option for DNS in the VCN.
  For more information, see [DNS in Your Virtual Cloud Network].

  The VCN automatically comes with a default route table, default security
  list, and default set of DHCP options. The OCID for each is returned in the
  response. You can't delete these default objects, but you can change their
  contents (that is, change the route rules, security list rules, and so on).

  The VCN and subnets you create are not accessible until you attach an
  Internet Gateway or set up an IPSec VPN or FastConnect. For more
  information, see [Overview of the Networking Service].

Options:
  --cidr-block TEXT               The CIDR IP address block of the VCN.
                                  Example: `172.16.0.0/16` [required]
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  VCN. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --dns-label TEXT                A DNS label for the VCN, used in conjunction
                                  with the VNIC's hostname and subnet's DNS
                                  label to form a fully qualified domain name
                                  (FQDN) for each VNIC within this subnet (for
                                  example,
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Not required to be unique, but it's a best
                                  practice to set unique DNS labels for VCNs in
                                  your tenancy. Must be an alphanumeric string
                                  that begins with a letter. The value cannot be
                                  changed.
                                  
                                  You must set this value if you want
                                  instances to be able to use hostnames to
                                  resolve other instances in the VCN. Otherwise
                                  the Internet and VCN Resolver will not work.
                                  For more information, see [DNS in Your Virtual
                                  Cloud Network].
                                  
                                  Example: `vcn1`
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn delete --help
Usage: oci network vcn delete [OPTIONS]

  Deletes the specified VCN. The VCN must be empty and have no attached
  gateways. This is an asynchronous operation. The VCN's `lifecycleState` will
  change to TERMINATING temporarily until the VCN is completely removed.

Options:
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn get --help
Usage: oci network vcn get [OPTIONS]

  Gets the specified VCN's information.

Options:
  --vcn-id TEXT     The OCID of the VCN. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn list --help
Usage: oci network vcn list [OPTIONS]

  Lists the Virtual Cloud Networks (VCNs) in the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --display-name TEXT             A filter to return only resources that match
                                  the given display name exactly.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can provide one sort
                                  order (`sortOrder`). Default order for
                                  TIMECREATED is descending. Default order for
                                  DISPLAYNAME is ascending. The DISPLAYNAME sort
                                  order is case sensitive.
                                  
                                  **Note:** In
                                  general, some "List" operations (for example,
                                  `ListInstances`) let you optionally filter by
                                  Availability Domain if the scope of the
                                  resource type is within a single Availability
                                  Domain. If you call one of these "List"
                                  operations without specifying an Availability
                                  Domain, the resources are grouped by
                                  Availability Domain, then sorted.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`). The
                                  DISPLAYNAME sort order is case sensitive.
  --lifecycle-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  A filter to only return resources that match
                                  the given lifecycle state.  The state value is
                                  case-insensitive.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vcn update --help
Usage: oci network vcn update [OPTIONS]

  Updates the specified VCN's display name. Avoid entering confidential
  information.

Options:
  --vcn-id TEXT                   The OCID of the VCN. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic --help
Usage: oci network vnic [OPTIONS] COMMAND [ARGS]...

  A virtual network interface card. Each VNIC resides in a subnet in a VCN. An
  instance attaches to a VNIC to obtain a network connection into the VCN
  through that subnet. Each instance has a *primary VNIC* that is
  automatically created and attached during launch. You can add *secondary
  VNICs* to an instance after it's launched. For more information, see
  [Virtual Network Interface Cards (VNICs)].

  Each VNIC has a *primary private IP* that is automatically assigned during
  launch. You can add *secondary private IPs* to a VNIC after it's created.
  For more information, see [CreatePrivateIp] and [IP Addresses].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  assign-private-ip    Assigns a secondary private IP address to the...
  get                  Gets the information for the specified...
  unassign-private-ip  Unassigns a secondary private IP address from...
  update               Updates the specified VNIC.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic assign-private-ip --help
Usage: oci network vnic assign-private-ip [OPTIONS]

  Assigns a secondary private IP address to the specified VNIC. The secondary
  private IP must be in the same subnet as the VNIC. This command can also be
  used to move an existing secondary private IP to the specified VNIC.

  For more information about secondary private IPs, see [Managing IP
  Addresses]

Options:
  --vnic-id TEXT                  The OCID of the VNIC to assign the private IP
                                  to. The VNIC and private IP must be in the
                                  same subnet. [required]
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --hostname-label TEXT           The hostname for the private IP. Used for DNS.
                                  The value is the hostname portion of the
                                  private IP's fully qualified domain name
                                  (FQDN) (for example, `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123].
                                  
                                  For
                                  more information, see [DNS in Your Virtual
                                  Cloud Network].
                                  
                                  Example: `bminstance-1`
  --ip-address TEXT               A private IP address of your choice. Must be
                                  an available IP address within the subnet's
                                  CIDR. If you don't specify a value, Oracle
                                  automatically assigns a private IP address
                                  from the subnet.
                                  
                                  Example: `10.0.3.3`
  --unassign-if-already-assigned  Force reassignment of the IP address if it's
                                  already assigned to another VNIC in the
                                  subnet. This is only relevant if an IP address
                                  is associated with this command.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic get --help
Usage: oci network vnic get [OPTIONS]

  Gets the information for the specified virtual network interface card
  (VNIC). You can get the VNIC OCID from the [ListVnicAttachments] operation.

Options:
  --vnic-id TEXT    The OCID of the VNIC. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic unassign-private-ip --help
Usage: oci network vnic unassign-private-ip [OPTIONS]

  Unassigns a secondary private IP address from a VNIC. After the IP address
  is unassigned, you can assign to another VNIC in the subnet.

  This operation cannot be used with primary private IPs, which are
  automatically unassigned, and then deleted when the VNIC is terminated.

  For more information about secondary private IPs, see [Managing IP
  Addresses]

Options:
  --vnic-id TEXT     The OCID of the VNIC to unassign the private IP from.
                     [required]
  --ip-address TEXT  The secondary private IP to unassign from the VNIC.
                     [required]
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file.
                     
                     Options can still be provided on the command line.
                     If an option exists in both the JSON document and the
                     command line then the command line specified value will be
                     used
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci network vnic update --help
Usage: oci network vnic update [OPTIONS]

  Updates the specified VNIC.

Options:
  --vnic-id TEXT                  The OCID of the VNIC. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
  --hostname-label TEXT           The hostname for the VNIC's primary private
                                  IP. Used for DNS. The value is the hostname
                                  portion of the primary private IP's fully
                                  qualified domain name (FQDN) (for example,
                                  `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123]. The
                                  value appears in the [Vnic] object and also
                                  the [PrivateIp] object returned by
                                  [ListPrivateIps] and [GetPrivateIp].
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
  --skip-source-dest-check BOOLEAN
                                  Whether the source/destination check is
                                  disabled on the VNIC. Defaults to `false`,
                                  which means the check is performed. For
                                  information about why you would skip the
                                  source/destination check, see [Using a Private
                                  IP as a Route Target].
                                  
                                  Example: `true`
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os --help
Usage: oci os [OPTIONS] COMMAND [ARGS]...

  Object Storage Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  bucket           A bucket is a container for storing objects...
  multipart
  ns
  object           To use any of the API operations, you must be...
  preauth-request  Pre-authenticated requests provide a way to...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket --help
Usage: oci os bucket [OPTIONS] COMMAND [ARGS]...

  A bucket is a container for storing objects in a compartment within a
  namespace. A bucket is associated with a single compartment. The compartment
  has policies that indicate what actions a user can perform on a bucket and
  all the objects in the bucket. For more information, see [Managing Buckets].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a bucket in the given namespace with...
  delete  Deletes a bucket if it is already empty.
  get     Gets the current representation of the given...
  list    Gets a list of all `BucketSummary`s in a...
  update  Performs a partial or full update of a...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket create --help
Usage: oci os bucket create [OPTIONS]

  Creates a bucket in the given namespace with a bucket name and optional
  user-defined metadata.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  --name TEXT                     The name of the bucket. Valid characters are
                                  uppercase or lowercase letters, numbers, and
                                  dashes. Bucket names must be unique within the
                                  namespace. Avoid entering confidential
                                  information. example: Example: my-new-bucket1
                                  [required]
  -c, --compartment-id TEXT       The ID of the compartment in which to create
                                  the bucket. [required]
  --metadata COMPLEX TYPE         Arbitrary string, up to 4KB, of keys and
                                  values for user-defined metadata.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --public-access-type [NoPublicAccess|ObjectRead|ObjectReadWithoutList]
                                  The type of public access enabled on this
                                  bucket. A bucket is set to `NoPublicAccess` by
                                  default, which only allows an authenticated
                                  caller to access the bucket and its contents.
                                  When `ObjectRead` is enabled on the bucket,
                                  public access is allowed for the `GetObject`,
                                  `HeadObject`, and `ListObjects` operations.
                                  When `ObjectReadWithoutList` is enabled on the
                                  bucket, public access is allowed for the
                                  `GetObject` and `HeadObject` operations.
  --storage-tier [Standard|Archive]
                                  The type of storage tier of this bucket. A
                                  bucket is set to 'Standard' tier by default,
                                  which means the bucket will be put in the
                                  standard storage tier. When 'Archive' tier
                                  type is set explicitly, the bucket is put in
                                  the Archive Storage tier. The 'storageTier'
                                  property is immutable after bucket is created.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket delete --help
Usage: oci os bucket delete [OPTIONS]

  Deletes a bucket if it is already empty. If the bucket is not empty, use
  [DeleteObject] first.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  --bucket-name, --name TEXT      The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --if-match TEXT                 The entity tag to match. For creating and
                                  committing a multipart upload to an object,
                                  this is the entity tag of the target object.
                                  For uploading a part, this is the entity tag
                                  of the target part.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket get --help
Usage: oci os bucket get [OPTIONS]

  Gets the current representation of the given bucket in the given namespace.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  --bucket-name, --name TEXT      The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --if-match TEXT                 The entity tag to match. For creating and
                                  committing a multipart upload to an object,
                                  this is the entity tag of the target object.
                                  For uploading a part, this is the entity tag
                                  of the target part.
  --if-none-match TEXT            The entity tag to avoid matching. The only
                                  valid value is ‘*’, which indicates that the
                                  request should fail if the object already
                                  exists. For creating and committing a
                                  multipart upload, this is the entity tag of
                                  the target object. For uploading a part, this
                                  is the entity tag of the target part.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket list --help
Usage: oci os bucket list [OPTIONS]

  Gets a list of all `BucketSummary`s in a compartment. A `BucketSummary`
  contains only summary fields for the bucket and does not contain fields like
  the user-defined metadata.

  To use this and other API operations, you must be authorized in an IAM
  policy. If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -c, --compartment-id TEXT       The ID of the compartment in which to list
                                  buckets. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket update --help
Usage: oci os bucket update [OPTIONS]

  Performs a partial or full update of a bucket's user-defined metadata.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  --bucket-name, --name TEXT      The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  -c, --compartment-id TEXT       The compartmentId for the compartment to which
                                  the bucket is targeted to move to.
  --metadata COMPLEX TYPE         Arbitrary string, up to 4KB, of keys and
                                  values for user-defined metadata.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --public-access-type [NoPublicAccess|ObjectRead|ObjectReadWithoutList]
                                  The type of public access enabled on this
                                  bucket. A bucket is set to `NoPublicAccess` by
                                  default, which only allows an authenticated
                                  caller to access the bucket and its contents.
                                  When `ObjectRead` is enabled on the bucket,
                                  public access is allowed for the `GetObject`,
                                  `HeadObject`, and `ListObjects` operations.
                                  When `ObjectReadWithoutList` is enabled on the
                                  bucket, public access is allowed for the
                                  `GetObject` and `HeadObject` operations.
  --if-match TEXT                 The entity tag to match. For creating and
                                  committing a multipart upload to an object,
                                  this is the entity tag of the target object.
                                  For uploading a part, this is the entity tag
                                  of the target part.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart --help
Usage: oci os multipart [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  abort  Aborts an uncommitted multipart upload...
  list   Lists all in-progress multipart uploads for...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart abort --help
Usage: oci os multipart abort [OPTIONS]

  Aborts an uncommitted multipart upload

  Example:     oci os multipart abort -ns mynamespace -bn mybucket --name
  myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket. [required]
  -on, --object-name TEXT  The name of the object. [required]
  --upload-id TEXT         Upload ID to abort. [required]
  --force                  Abort the existing multipart upload without a
                           confirmation prompt.
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart list --help
Usage: oci os multipart list [OPTIONS]

  Lists all in-progress multipart uploads for the given bucket in the given
  namespace.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns --help
Usage: oci os ns [OPTIONS] COMMAND [ARGS]...

  A namespace is a logical entity that serves as a top-level container for all
  buckets and objects, allowing you to control bucket naming within your
  tenancy. Each tenancy is provided one unique and uneditable namespace that
  is global, spanning all regions and compartments. While bucket names must be
  unique within your namespace, bucket names within your namespace can
  duplicate bucket names used in the namespaces of other tenants.

  Namespace metadata stores the compartment assignments for resources created
  by the Amazon S3 Compatibility API and the Swift API. By default, resources
  created by the Amazon S3 Compatibility and Swift APIs are stored in the root
  compartment of the tenancy.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get              Gets the name of the namespace for the user
  get-metadata     Get the metadata for the namespace, which...
  update-metadata  Change the default Swift/S3 compartmentId of...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns get --help
Usage: oci os ns get [OPTIONS]

  Namespaces are unique. Namespaces are either the tenancy name or a random
  string automatically generated during account creation. You cannot edit a
  namespace.

Options:
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns get-metadata --help
Usage: oci os ns get-metadata [OPTIONS]

  Get the metadata for the namespace, which contains defaultS3CompartmentId
  and defaultSwiftCompartmentId. Any user with the NAMESPACE_READ permission
  will be able to see the current metadata. If you're not authorized, talk to
  an administrator. If you're an administrator who needs to write policies to
  give users access, see [Getting Started with Policies].

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns update-metadata --help
Usage: oci os ns update-metadata [OPTIONS]

  Change the default Swift/S3 compartmentId of user's namespace into the user-
  defined compartmentId. Upon doing this, all subsequent bucket creations will
  use the new default compartment, but no previously created buckets will be
  modified. A user must have the NAMESPACE_UPDATE permission to make changes
  to the default compartments for S3 and Swift.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  --default-s3-compartment-id TEXT
                                  The update compartment id for an S3 client if
                                  this field is set.
  --default-swift-compartment-id TEXT
                                  The update compartment id for a Swift client
                                  if this field is set.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object --help
Usage: oci os object [OPTIONS] COMMAND [ARGS]...

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  bulk-delete     Deletes all objects in a bucket which match...
  bulk-download   Downloads all objects which match the given...
  bulk-upload     Uploads all files in a given directory and...
  delete          Deletes an object.
  get             Gets the metadata and body of an object.
  head            Gets the user-defined metadata and entity tag...
  list            Lists the objects in a bucket.
  put             Creates a new object or overwrites an...
  rename          Rename an object from source key to target...
  restore         Restore an object by specifying the name...
  restore-status  Gets the restore status for an object.
  resume-put      Resume a previous multipart put.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-delete --help
Usage: oci os object bulk-delete [OPTIONS]

  Deletes all objects in a bucket which match the provided criteria.

  Examples
  ========

  Deleting all objects in the bucket
  ----------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket

  Delete all objects that match a given prefix
  --------------------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --prefix myprefix

  You can delete all objects that match a given prefix by specifying the --prefix flag. In the above example, "--prefix myprefix" would
  match object names such as myprefix_textfile1.txt, myprefix_myImage.png etc.

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, then you
  can delete objects at a given level (and all sub levels) by specifying a prefix:

  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/

  This will delete all objects of the form level1/level2/<object name>, level1/level2/leve3/<object name>,
  level1/level2/leve3/level4/<object name> etc.

  Limiting deleted objects using a prefix and delimiter
  -----------------------------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter /

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, and you only
  want to delete objects at a given level of the hierarchy, e.g. example everything of the form level1/level2/<object name> but not
  level1/level2/leve3/<object name> or any other sub-levels, you can specify a prefix and delimiter. Currently the only supported delimiter
  is /

  Previewing what would be deleted
  ----------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --dry-run
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --dry-run
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter / --dry-run

  For any bulk-delete command you can get a list of all objects which would be deleted, but without actually deleting them, by using the --dry-run
  flag

  Do not prompt for delete
  ------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --force
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --force
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter / --force

  By default, the bulk-delete command will prompt you prior to deleting objects. To suppress this prompt, pass the --force option.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Delete all objects with the given prefix. Omit
                                  this parameter to delete all objects in the
                                  bucket.
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  deleted. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --dry-run                       Displays a list of objects which would be
                                  deleted by this command, if it were run
                                  without --dry-run. If --dry-run is passed, no
                                  objects will actually be deleted.
  --force                         Do not ask for confirmation prior to
                                  performing the bulk delete.
  --parallel-operations-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk deletes
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  delete times, but the upload process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --include TEXT                  Only delete objects which match the provided
                                  pattern. Patterns are taken relative to the
                                  bucket root. This option can be provided
                                  mulitple times to match on mulitple patterns.
                                  Supported pattern symbols are:
                                  
                                  
                                  *: Matches
                                  everything
                                  
                                  ?: Matches any single character
                                  [sequence]: Matches any character in sequence
                                  [!sequence]: Matches any character not in
                                  sequence
  --exclude TEXT                  Only download objects which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the bucket root. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-download --help
Usage: oci os object bulk-download [OPTIONS]

  Downloads all objects which match the given prefix to a given directory.

  Examples
  ========

  Download all objects in the bucket
  ------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory

  Download all objects that match a given prefix
  ----------------------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix myprefix

  You can download all objects that match a given prefix by specifying the --prefix flag. In the above example, "--prefix myprefix" would
  match object names such as myPrefix_textfile1.txt, myPrefix_myImage.png etc.

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, then you
  can download objects at a given level (and all sub levels) by specifying a prefix:

  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix level1/level2/

  This will download all objects of the form level1/level2/<object name>, level1/level2/leve3/<object name>,
  level1/level2/leve3/level4/<object name> etc.

  Limiting downloaded objects using a prefix and delimiter
  --------------------------------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix level1/level2/ --delimiter /

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, and you only
  want to download objects at a given level of the hierarchy, e.g. example everything of the form level1/level2/<object name> but not
  level1/level2/leve3/<object name> or any other sub-levels, you can specify a prefix and delimiter. Currently the only supported delimiter
  is /

  Overwriting or skipping files
  ------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --overwrite
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --no-overwrite

  If files with the same name as the objects being downloaded already exist in the download directory, you can opt to overwrite them with the
  --overwrite option, or preserve them with the --no-overwrite option.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Retrieve all objects with the given prefix.
                                  Omit this parameter to get all objects in the
                                  bucket
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  returned. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --download-dir TEXT             The directory where retrieved objects will be
                                  placed as files. This directory will be
                                  created if it does not exist. [required]
  --overwrite                     If a file with the same name as an object
                                  already exists in the download directory,
                                  overwrite it. If neither this flag nor --no-
                                  overwrite is specified, you will be prompted
                                  each time a file would be overwritten.
  --no-overwrite                  If a file with the same name as an object
                                  already exists in the download directory, do
                                  not overwite it. If neither this flag nor
                                  --overwrite is specified, you will be prompted
                                  each time a file would be overwritten
  --parallel-operations-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk downloads
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  download times, but the upload process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --multipart-download-threshold INTEGER RANGE
                                  Objects larger than this size (in MiB) will be
                                  downloaded in multiple parts. The minimum
                                  allowable threshold is 128 MiB.
  --part-size INTEGER RANGE       Part size (in MiB) to use when downloading an
                                  object in multiple parts. The minimum
                                  allowable size is 128 MiB.
  --include TEXT                  Only download objects which match the provided
                                  pattern. Patterns are taken relative to the
                                  DOWNLOAD directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --exclude TEXT                  Only download objects which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the DOWNLOAD directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-upload --help
Usage: oci os object bulk-upload [OPTIONS]

  Uploads all files in a given directory and all subdirectories.

  Examples
  ========

  Upload all files from a given directory
  -----------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory

  Upload all files and prefix the object names in Object Storage
  --------------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --object-prefix my-prefix/

  In the above example command, all files uploaded to Object Storage will have
  their object names prefixed with "my-prefix/". This will allow you to
  further group uploaded files together or potentially avoid name collisions
  when uploading files.

  Forcing object overwrite to resolve object name collision
  ----------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --overwrite

  If a file being uploaded already exists in Object Storage, it can be overwritten without a prompt by
  using the --overwrite flag. Specifying --overwrite will also allow for faster uploads as the CLI will not
  initially check whether or not the files already exist in Object Storage.

  Prevent object overwrite to resolve object name collision
  ----------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --no-overwrite

  If a file being uploaded already exists in Object Storage, it can be preserved (not overwritten) without a
  prompt by using the --no-overwrite flag.

Options:
  -ns, --namespace TEXT           Object Storage namespace. [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --src-dir TEXT                  The directory which contains files to upload.
                                  Files in the directory and all subdirectories
                                  will be uploaded. [required]
  --object-prefix TEXT            A prefix to apply to the names of all files
                                  being uploaded
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. This will be applied to all
                                  files being uploaded. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The content type to apply to all files being
                                  uploaded.
  --content-language TEXT         The content language to apply to all files
                                  being uploaded.
  --content-encoding TEXT         The content encoding to apply to all files
                                  being uploaded.
  --overwrite                     If a file being uploaded already exists in
                                  Object Storage, overwrite the existing object
                                  in Object Storage without a confirmation
                                  prompt. If neither this flag nor --no-
                                  overwrite is specified, you will be prompted
                                  each time an object would be overwritten.
                                  Specifying this flag will also allow for
                                  faster uploads as the CLI will not initially
                                  check whether or not the files already exist
                                  in Object Storage.
  --no-overwrite                  If a file being uploaded already exists in
                                  Object Storage, do not overwite it. If neither
                                  this flag nor --overwrite is specified, you
                                  will be prompted each time an object would be
                                  overwritten
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side. This applies to all
                                  files being uploaded
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations. This applies to
                                  all files which will be uploaded in multiple
                                  parts. Part size must be greater than 10 MiB
  --disable-parallel-uploads      [DEPRECATED] This option is no longer used. If
                                  a file in the directory will be uploaded in
                                  multiple parts, this option disables those
                                  parts from being uploaded in parallel. This
                                  applies to all files being uploaded in
                                  multiple parts
  --parallel-upload-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk uploads
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  upload times, but the upload process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --include TEXT                  Only upload files which match the provided
                                  pattern. Patterns are taken relative to the
                                  CURRENT directory. This option can be provided
                                  mulitple times to match on mulitple patterns.
                                  Supported pattern symbols are:
                                  
                                  
                                  *: Matches
                                  everything
                                  
                                  ?: Matches any single character
                                  [sequence]: Matches any character in sequence
                                  [!sequence]: Matches any character not in
                                  sequence
  --exclude TEXT                  Only upload files which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the CURRENT directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object delete --help
Usage: oci os object delete [OPTIONS]

  Deletes an object.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --object-name, --name TEXT      The name of the object. Avoid entering
                                  confidential information. Example:
                                  `test/object1.log` [required]
  --if-match TEXT                 The entity tag to match. For creating and
                                  committing a multipart upload to an object,
                                  this is the entity tag of the target object.
                                  For uploading a part, this is the entity tag
                                  of the target part.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object get --help
Usage: oci os object get [OPTIONS]

  Gets the metadata and body of an object.

  Example:     oci os object get -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object. [required]
  --file FILENAME                 The name of the file that will receive the
                                  object content, or '-' to write to STDOUT.
                                  [required]
  --if-match TEXT                 The entity tag to match.
  --if-none-match TEXT            The entity tag to avoid matching.
  --range TEXT                    Byte range to fetch. Follows https://tools.iet
                                  f.org/html/rfc7233#section-2.1. Example:
                                  bytes=2-10
  --multipart-download-threshold INTEGER RANGE
                                  Objects larger than this size (in MiB) will be
                                  downloaded in multiple parts. The minimum
                                  allowable threshold is 128 MiB.
  --part-size INTEGER RANGE       Part size (in MiB) to use when downloading an
                                  object in multiple parts. The minimum
                                  allowable size is 128 MiB.
  --parallel-download-count INTEGER
                                  The number of parallel operations to perform
                                  when downloading an object in multiple parts.
                                  Decreasing this value will make multipart
                                  downloads less resource intensive but they may
                                  take longer. Increasing this value may improve
                                  download times, but the download process will
                                  consume more system resources and network
                                  bandwidth.  [default: 10]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object head --help
Usage: oci os object head [OPTIONS]

  Gets the user-defined metadata and entity tag for an object.

  Example:     oci os object head -ns mynamespace -bn mybucket --name
  myfile.txt

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket. [required]
  --name TEXT              The name of the object. [required]
  --if-match TEXT          The entity tag to match.
  --if-none-match TEXT     The entity tag to avoid matching.
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object list --help
Usage: oci os object list [OPTIONS]

  Lists the objects in a bucket.

  Example:     oci os object list -ns mynamespace -bn mybucket --fields
  name,size,timeCreated

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket. [required]
  --prefix TEXT            Only object names that begin with this prefix will be
                           returned.
  --start TEXT             Only object names greater or equal to this parameter
                           will be returned.
  --end TEXT               Only object names less than this parameter will be
                           returned.
  --limit INTEGER          The maximum number of items to return. [default: 100]
  --page-size INTEGER      When fetching results, the number of results to fetch
                           per call. Only valid when used with --all or --limit,
                           and ignored otherwise.
  --all                    Fetches all pages of results. If you provide this
                           option, then you cannot provide the --limit option.
  --delimiter TEXT         When this parameter is set, only objects whose names
                           do not contain the delimiter character (after an
                           optionally specified prefix) are returned. Scanned
                           objects whose names contain the delimiter have part
                           of their name up to the last occurrence of the
                           delimiter (after the optional prefix) returned as a
                           set of prefixes. Note: Only '/' is a supported
                           delimiter character at this time.
  --fields TEXT            Object summary in list of objects includes the 'name'
                           field. This parameter may also include 'size' (object
                           size in bytes), 'md5', and 'timeCreated' (object
                           creation date and time) fields. Value of this
                           parameter should be a comma separated, case-
                           insensitive list of those field names.  [default:
                           name,size,timeCreated,md5]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object put --help
Usage: oci os object put [OPTIONS]

  Creates a new object or overwrites an existing one.

  The object can be uploaded as a single part or as multiple parts. Below are
  the rules for whether an object will be uploaded via single or multipart
  upload (listed in order of precedence):

      * If the object is being uploaded from STDIN, it will be uploaded as a
      multipart upload (if the object content is smaller than --part-size,
      default for STDIN is 10 MiB, the multipart upload may contain only one
      part, but it will still use the MultipartUpload API)

      * If the --no-multipart flag is specified, the object will be uploaded
      as a single part regardless of size (specifying --no-multipart when
      uploading from STDIN will result in an error)

      * If the object is larger than --part-size, it will be uploaded as
      multiple parts (the default part size is 128 MiB)

      * If the object is empty it will be uploaded as a single part

  Example:     oci os object put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --metadata
  '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --file FILENAME                 The file to load as the content of the object,
                                  or '-' to read from STDIN. [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path. Required if
                                  reading object from STDIN.
  --if-match TEXT                 The entity tag to match.
  --content-md5 TEXT              The base-64 encoded MD5 hash of the body.
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The content type of the object.
  --content-language TEXT         The content language of the object.
  --content-encoding TEXT         The content encoding of the object.
  --force                         If the object already exists, overwrite the
                                  existing object without a confirmation prompt.
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side.
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER
                                  If the object will be uploaded in multiple
                                  parts, this option allows you to specify the
                                  maximum number of parts that can be uploaded
                                  in parallel. This option cannot be used with
                                  --disable-parallel-uploads or --no-multipart.
                                  Defaults to 3.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object rename --help
Usage: oci os object rename [OPTIONS]

  Rename an object from source key to target key in the given namespace.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name, --bucket TEXT
                                  The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --source-name, --name TEXT      The name of the source object to be renamed.
                                  [required]
  --new-name TEXT                 The new name of the source object. [required]
  --src-obj-if-match-e-tag, --src-if-match TEXT
                                  The if-match entity tag of the source object.
  --new-obj-if-match-e-tag, --new-if-match TEXT
                                  The if-match entity tag of the new object.
  --new-obj-if-none-match-e-tag, --new-if-none-match TEXT
                                  The if-none-match entity tag of the new
                                  object.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object restore --help
Usage: oci os object restore [OPTIONS]

  Restore an object by specifying the name parameter.

Options:
  -ns, --namespace TEXT  The top-level namespace used for the request.
                         [required]
  -bn, --bucket TEXT     The name of the bucket. Avoid entering confidential
                         information. Example: `my-new-bucket1` [required]
  --name TEXT            A object which was in an archived state and need to be
                         restored. [required]
  --from-json TEXT       Provide input to this command as a JSON document from a
                         file.
                         
                         Options can still be provided on the command
                         line. If an option exists in both the JSON document and
                         the command line then the command line specified value
                         will be used
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object restore-status --help
Usage: oci os object restore-status [OPTIONS]

  Gets the restore status for an object.

  Example:     oci os object restore-status -ns mynamespace -bn mybucket
  --name myfile.txt

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket. [required]
  --name TEXT              The name of the object. [required]
  --from-json TEXT         Provide input to this command as a JSON document from
                           a file.
                           
                           Options can still be provided on the command
                           line. If an option exists in both the JSON document
                           and the command line then the command line specified
                           value will be used
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object resume-put --help
Usage: oci os object resume-put [OPTIONS]

  Resume a previous multipart put.

  Example:     oci os object resume-put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --file FILENAME                 The file to load as the content of the object.
                                  [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path.
  --upload-id TEXT                Upload ID to resume. [required]
  --part-size INTEGER             Part size in MiB
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER
                                  This option allows you to specify the maximum
                                  number of parts that can be uploaded in
                                  parallel. This option cannot be used with
                                  --disable-parallel-uploads. Defaults to 3.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request --help
Usage: oci os preauth-request [OPTIONS] COMMAND [ARGS]...

  Pre-authenticated requests provide a way to let users access a bucket or an
  object without having their own credentials. When you create a pre-
  authenticated request, a unique URL is generated. Users in your
  organization, partners, or third parties can use this URL to access the
  targets identified in the pre-authenticated request. See [Managing Access to
  Buckets and Objects].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a pre-authenticated request specific...
  delete  Deletes the pre-authenticated request for the...
  get     Gets the pre-authenticated request for the...
  list    Lists pre-authenticated requests for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request create --help
Usage: oci os preauth-request create [OPTIONS]

  Creates a pre-authenticated request specific to the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --name TEXT                     A user-specified name for the pre-
                                  authenticated request. Helpful for management
                                  purposes. [required]
  --access-type [ObjectRead|ObjectWrite|ObjectReadWrite|AnyObjectWrite]
                                  The operation that can be performed on this
                                  resource. [required]
  --time-expires DATETIME         The expiration date for the pre-authenticated
                                  request as per [RFC 3339]. After this date the
                                  pre-authenticated request will no longer be
                                  valid. [required]
  -on, --object-name TEXT         The name of object that is being granted
                                  access to by the pre-authenticated request.
                                  This can be null and if it is, the pre-
                                  authenticated request grants access to the
                                  entire bucket.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request delete --help
Usage: oci os preauth-request delete [OPTIONS]

  Deletes the pre-authenticated request for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --par-id TEXT                   The unique identifier for the pre-
                                  authenticated request. This can be used to
                                  manage operations against the pre-
                                  authenticated request, such as GET or DELETE.
                                  [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request get --help
Usage: oci os preauth-request get [OPTIONS]

  Gets the pre-authenticated request for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --par-id TEXT                   The unique identifier for the pre-
                                  authenticated request. This can be used to
                                  manage operations against the pre-
                                  authenticated request, such as GET or DELETE.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request list --help
Usage: oci os preauth-request list [OPTIONS]

  Lists pre-authenticated requests for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --object-name-prefix TEXT       User-specified object name prefixes can be
                                  used to query and return a list of pre-
                                  authenticated requests.
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup --help
Usage: oci setup [OPTIONS] COMMAND [ARGS]...

  Setup commands for CLI

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  autocomplete             Interactive script to set up tab completion...
  config                   Interactive script to generate oci config...
  keys                     Generates an RSA key pair.
  oci-cli-rc               Generates a oci_cli_rc file that can contain...
  repair-file-permissions  Resets permissions on a given file to an...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup autocomplete --help
Usage: oci setup autocomplete [OPTIONS]

  Interactive script to set up tab completion for commands and parameters.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup config --help
Usage: oci setup config [OPTIONS]

  Interactive script to generate oci config file.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup keys --help
Usage: oci setup keys [OPTIONS]

  Generates an RSA key pair. A passphrase for the private key can be provided
  using either the 'passphrase' or 'passphrase-file' option. If neither option
  is provided, the user will be prompted for a passphrase via stdin.

Options:
  --key-name TEXT             A name for the key. Generated key files will be
                              {key-name}.pem and {key-name}_public.pem
  --output-dir PATH           An optional directory to output the generated
                              keys.
  --passphrase TEXT           An optional passphrase to encrypt the private key.
  --passphrase-file FILENAME  An optional file with the first line specifying a
                              passphrase to encrypt the private key (or '-' to
                              read from stdin).
  --overwrite                 An option to overwrite existing files without a
                              confirmation prompt.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup oci-cli-rc --help
Usage: oci setup oci-cli-rc [OPTIONS]

  Generates a oci_cli_rc file that can contain parameter default values and
  other configuration information such as command aliases and predefined
  queries.

  This command will populate the file with some default aliases and predefined
  queries.

Options:
  --file FILENAME  The file into which default aliases and predefined queries
                   will be loaded  [required]
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci setup repair-file-permissions --help
Usage: oci setup repair-file-permissions [OPTIONS]

  Resets permissions on a given file to an appropriate access level for
  sensitive files. Generally this is used to fix permissions on a private key
  file or config file to meet the requirements of the CLI. On Windows, full
  control will be given to System, Administrators, and the current user.  On
  Unix, Read / Write permissions will be given to the current user.

Options:
  --file TEXT     The file to repair permissions on.  [required]
  -?, -h, --help  Show this message and exit.

